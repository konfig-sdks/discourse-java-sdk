/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.TopicsGetSingleTopicResponseActionsSummaryInner;
import com.konfigthis.client.model.TopicsGetSingleTopicResponseDetails;
import com.konfigthis.client.model.TopicsGetSingleTopicResponsePostStream;
import com.konfigthis.client.model.TopicsGetSingleTopicResponseSuggestedTopicsInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * TopicsGetSingleTopicResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class TopicsGetSingleTopicResponse {
  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<Object> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_POST_STREAM = "post_stream";
  @SerializedName(SERIALIZED_NAME_POST_STREAM)
  private TopicsGetSingleTopicResponsePostStream postStream;

  public static final String SERIALIZED_NAME_TIMELINE_LOOKUP = "timeline_lookup";
  @SerializedName(SERIALIZED_NAME_TIMELINE_LOOKUP)
  private List<Object> timelineLookup = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUGGESTED_TOPICS = "suggested_topics";
  @SerializedName(SERIALIZED_NAME_SUGGESTED_TOPICS)
  private List<TopicsGetSingleTopicResponseSuggestedTopicsInner> suggestedTopics = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAGS_DESCRIPTIONS = "tags_descriptions";
  @SerializedName(SERIALIZED_NAME_TAGS_DESCRIPTIONS)
  private Object tagsDescriptions;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_FANCY_TITLE = "fancy_title";
  @SerializedName(SERIALIZED_NAME_FANCY_TITLE)
  private String fancyTitle;

  public static final String SERIALIZED_NAME_POSTS_COUNT = "posts_count";
  @SerializedName(SERIALIZED_NAME_POSTS_COUNT)
  private Integer postsCount;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_VIEWS = "views";
  @SerializedName(SERIALIZED_NAME_VIEWS)
  private Integer views;

  public static final String SERIALIZED_NAME_REPLY_COUNT = "reply_count";
  @SerializedName(SERIALIZED_NAME_REPLY_COUNT)
  private Integer replyCount;

  public static final String SERIALIZED_NAME_LIKE_COUNT = "like_count";
  @SerializedName(SERIALIZED_NAME_LIKE_COUNT)
  private Integer likeCount;

  public static final String SERIALIZED_NAME_LAST_POSTED_AT = "last_posted_at";
  @SerializedName(SERIALIZED_NAME_LAST_POSTED_AT)
  private Object lastPostedAt = null;

  public static final String SERIALIZED_NAME_VISIBLE = "visible";
  @SerializedName(SERIALIZED_NAME_VISIBLE)
  private Boolean visible;

  public static final String SERIALIZED_NAME_CLOSED = "closed";
  @SerializedName(SERIALIZED_NAME_CLOSED)
  private Boolean closed;

  public static final String SERIALIZED_NAME_ARCHIVED = "archived";
  @SerializedName(SERIALIZED_NAME_ARCHIVED)
  private Boolean archived;

  public static final String SERIALIZED_NAME_HAS_SUMMARY = "has_summary";
  @SerializedName(SERIALIZED_NAME_HAS_SUMMARY)
  private Boolean hasSummary;

  public static final String SERIALIZED_NAME_ARCHETYPE = "archetype";
  @SerializedName(SERIALIZED_NAME_ARCHETYPE)
  private String archetype;

  public static final String SERIALIZED_NAME_SLUG = "slug";
  @SerializedName(SERIALIZED_NAME_SLUG)
  private String slug;

  public static final String SERIALIZED_NAME_CATEGORY_ID = "category_id";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private Integer categoryId;

  public static final String SERIALIZED_NAME_WORD_COUNT = "word_count";
  @SerializedName(SERIALIZED_NAME_WORD_COUNT)
  private Object wordCount = null;

  public static final String SERIALIZED_NAME_DELETED_AT = "deleted_at";
  @SerializedName(SERIALIZED_NAME_DELETED_AT)
  private Object deletedAt = null;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_FEATURED_LINK = "featured_link";
  @SerializedName(SERIALIZED_NAME_FEATURED_LINK)
  private Object featuredLink = null;

  public static final String SERIALIZED_NAME_PINNED_GLOBALLY = "pinned_globally";
  @SerializedName(SERIALIZED_NAME_PINNED_GLOBALLY)
  private Boolean pinnedGlobally;

  public static final String SERIALIZED_NAME_PINNED_AT = "pinned_at";
  @SerializedName(SERIALIZED_NAME_PINNED_AT)
  private Object pinnedAt = null;

  public static final String SERIALIZED_NAME_PINNED_UNTIL = "pinned_until";
  @SerializedName(SERIALIZED_NAME_PINNED_UNTIL)
  private Object pinnedUntil = null;

  public static final String SERIALIZED_NAME_IMAGE_URL = "image_url";
  @SerializedName(SERIALIZED_NAME_IMAGE_URL)
  private Object imageUrl = null;

  public static final String SERIALIZED_NAME_SLOW_MODE_SECONDS = "slow_mode_seconds";
  @SerializedName(SERIALIZED_NAME_SLOW_MODE_SECONDS)
  private Integer slowModeSeconds;

  public static final String SERIALIZED_NAME_DRAFT = "draft";
  @SerializedName(SERIALIZED_NAME_DRAFT)
  private Object draft = null;

  public static final String SERIALIZED_NAME_DRAFT_KEY = "draft_key";
  @SerializedName(SERIALIZED_NAME_DRAFT_KEY)
  private String draftKey;

  public static final String SERIALIZED_NAME_DRAFT_SEQUENCE = "draft_sequence";
  @SerializedName(SERIALIZED_NAME_DRAFT_SEQUENCE)
  private Integer draftSequence;

  public static final String SERIALIZED_NAME_UNPINNED = "unpinned";
  @SerializedName(SERIALIZED_NAME_UNPINNED)
  private Object unpinned = null;

  public static final String SERIALIZED_NAME_PINNED = "pinned";
  @SerializedName(SERIALIZED_NAME_PINNED)
  private Boolean pinned;

  public static final String SERIALIZED_NAME_CURRENT_POST_NUMBER = "current_post_number";
  @SerializedName(SERIALIZED_NAME_CURRENT_POST_NUMBER)
  private Integer currentPostNumber;

  public static final String SERIALIZED_NAME_HIGHEST_POST_NUMBER = "highest_post_number";
  @SerializedName(SERIALIZED_NAME_HIGHEST_POST_NUMBER)
  private Object highestPostNumber = null;

  public static final String SERIALIZED_NAME_DELETED_BY = "deleted_by";
  @SerializedName(SERIALIZED_NAME_DELETED_BY)
  private Object deletedBy = null;

  public static final String SERIALIZED_NAME_HAS_DELETED = "has_deleted";
  @SerializedName(SERIALIZED_NAME_HAS_DELETED)
  private Boolean hasDeleted;

  public static final String SERIALIZED_NAME_ACTIONS_SUMMARY = "actions_summary";
  @SerializedName(SERIALIZED_NAME_ACTIONS_SUMMARY)
  private List<TopicsGetSingleTopicResponseActionsSummaryInner> actionsSummary = new ArrayList<>();

  public static final String SERIALIZED_NAME_CHUNK_SIZE = "chunk_size";
  @SerializedName(SERIALIZED_NAME_CHUNK_SIZE)
  private Integer chunkSize;

  public static final String SERIALIZED_NAME_BOOKMARKED = "bookmarked";
  @SerializedName(SERIALIZED_NAME_BOOKMARKED)
  private Boolean bookmarked;

  public static final String SERIALIZED_NAME_BOOKMARKS = "bookmarks";
  @SerializedName(SERIALIZED_NAME_BOOKMARKS)
  private List<Object> bookmarks = new ArrayList<>();

  public static final String SERIALIZED_NAME_TOPIC_TIMER = "topic_timer";
  @SerializedName(SERIALIZED_NAME_TOPIC_TIMER)
  private Object topicTimer = null;

  public static final String SERIALIZED_NAME_MESSAGE_BUS_LAST_ID = "message_bus_last_id";
  @SerializedName(SERIALIZED_NAME_MESSAGE_BUS_LAST_ID)
  private Integer messageBusLastId;

  public static final String SERIALIZED_NAME_PARTICIPANT_COUNT = "participant_count";
  @SerializedName(SERIALIZED_NAME_PARTICIPANT_COUNT)
  private Integer participantCount;

  public static final String SERIALIZED_NAME_SHOW_READ_INDICATOR = "show_read_indicator";
  @SerializedName(SERIALIZED_NAME_SHOW_READ_INDICATOR)
  private Boolean showReadIndicator;

  public static final String SERIALIZED_NAME_THUMBNAILS = "thumbnails";
  @SerializedName(SERIALIZED_NAME_THUMBNAILS)
  private Object thumbnails = null;

  public static final String SERIALIZED_NAME_SLOW_MODE_ENABLED_UNTIL = "slow_mode_enabled_until";
  @SerializedName(SERIALIZED_NAME_SLOW_MODE_ENABLED_UNTIL)
  private Object slowModeEnabledUntil = null;

  public static final String SERIALIZED_NAME_SUMMARIZABLE = "summarizable";
  @SerializedName(SERIALIZED_NAME_SUMMARIZABLE)
  private Boolean summarizable;

  public static final String SERIALIZED_NAME_DETAILS = "details";
  @SerializedName(SERIALIZED_NAME_DETAILS)
  private TopicsGetSingleTopicResponseDetails details;

  public TopicsGetSingleTopicResponse() {
  }

  public TopicsGetSingleTopicResponse tags(List<Object> tags) {
    
    
    
    
    this.tags = tags;
    return this;
  }

  public TopicsGetSingleTopicResponse addTagsItem(Object tagsItem) {
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getTags() {
    return tags;
  }


  public void setTags(List<Object> tags) {
    
    
    
    this.tags = tags;
  }


  public TopicsGetSingleTopicResponse title(String title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    
    
    
    this.title = title;
  }


  public TopicsGetSingleTopicResponse postStream(TopicsGetSingleTopicResponsePostStream postStream) {
    
    
    
    
    this.postStream = postStream;
    return this;
  }

   /**
   * Get postStream
   * @return postStream
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public TopicsGetSingleTopicResponsePostStream getPostStream() {
    return postStream;
  }


  public void setPostStream(TopicsGetSingleTopicResponsePostStream postStream) {
    
    
    
    this.postStream = postStream;
  }


  public TopicsGetSingleTopicResponse timelineLookup(List<Object> timelineLookup) {
    
    
    
    
    this.timelineLookup = timelineLookup;
    return this;
  }

  public TopicsGetSingleTopicResponse addTimelineLookupItem(Object timelineLookupItem) {
    this.timelineLookup.add(timelineLookupItem);
    return this;
  }

   /**
   * Get timelineLookup
   * @return timelineLookup
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getTimelineLookup() {
    return timelineLookup;
  }


  public void setTimelineLookup(List<Object> timelineLookup) {
    
    
    
    this.timelineLookup = timelineLookup;
  }


  public TopicsGetSingleTopicResponse suggestedTopics(List<TopicsGetSingleTopicResponseSuggestedTopicsInner> suggestedTopics) {
    
    
    
    
    this.suggestedTopics = suggestedTopics;
    return this;
  }

  public TopicsGetSingleTopicResponse addSuggestedTopicsItem(TopicsGetSingleTopicResponseSuggestedTopicsInner suggestedTopicsItem) {
    this.suggestedTopics.add(suggestedTopicsItem);
    return this;
  }

   /**
   * Get suggestedTopics
   * @return suggestedTopics
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<TopicsGetSingleTopicResponseSuggestedTopicsInner> getSuggestedTopics() {
    return suggestedTopics;
  }


  public void setSuggestedTopics(List<TopicsGetSingleTopicResponseSuggestedTopicsInner> suggestedTopics) {
    
    
    
    this.suggestedTopics = suggestedTopics;
  }


  public TopicsGetSingleTopicResponse tagsDescriptions(Object tagsDescriptions) {
    
    
    
    
    this.tagsDescriptions = tagsDescriptions;
    return this;
  }

   /**
   * Get tagsDescriptions
   * @return tagsDescriptions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Object getTagsDescriptions() {
    return tagsDescriptions;
  }


  public void setTagsDescriptions(Object tagsDescriptions) {
    
    
    
    this.tagsDescriptions = tagsDescriptions;
  }


  public TopicsGetSingleTopicResponse id(Integer id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    
    
    
    this.id = id;
  }


  public TopicsGetSingleTopicResponse fancyTitle(String fancyTitle) {
    
    
    
    
    this.fancyTitle = fancyTitle;
    return this;
  }

   /**
   * Get fancyTitle
   * @return fancyTitle
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getFancyTitle() {
    return fancyTitle;
  }


  public void setFancyTitle(String fancyTitle) {
    
    
    
    this.fancyTitle = fancyTitle;
  }


  public TopicsGetSingleTopicResponse postsCount(Integer postsCount) {
    
    
    
    
    this.postsCount = postsCount;
    return this;
  }

   /**
   * Get postsCount
   * @return postsCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getPostsCount() {
    return postsCount;
  }


  public void setPostsCount(Integer postsCount) {
    
    
    
    this.postsCount = postsCount;
  }


  public TopicsGetSingleTopicResponse createdAt(String createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public TopicsGetSingleTopicResponse views(Integer views) {
    
    
    
    
    this.views = views;
    return this;
  }

   /**
   * Get views
   * @return views
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getViews() {
    return views;
  }


  public void setViews(Integer views) {
    
    
    
    this.views = views;
  }


  public TopicsGetSingleTopicResponse replyCount(Integer replyCount) {
    
    
    
    
    this.replyCount = replyCount;
    return this;
  }

   /**
   * Get replyCount
   * @return replyCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getReplyCount() {
    return replyCount;
  }


  public void setReplyCount(Integer replyCount) {
    
    
    
    this.replyCount = replyCount;
  }


  public TopicsGetSingleTopicResponse likeCount(Integer likeCount) {
    
    
    
    
    this.likeCount = likeCount;
    return this;
  }

   /**
   * Get likeCount
   * @return likeCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getLikeCount() {
    return likeCount;
  }


  public void setLikeCount(Integer likeCount) {
    
    
    
    this.likeCount = likeCount;
  }


  public TopicsGetSingleTopicResponse lastPostedAt(Object lastPostedAt) {
    
    
    
    
    this.lastPostedAt = lastPostedAt;
    return this;
  }

   /**
   * Get lastPostedAt
   * @return lastPostedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getLastPostedAt() {
    return lastPostedAt;
  }


  public void setLastPostedAt(Object lastPostedAt) {
    
    
    
    this.lastPostedAt = lastPostedAt;
  }


  public TopicsGetSingleTopicResponse visible(Boolean visible) {
    
    
    
    
    this.visible = visible;
    return this;
  }

   /**
   * Get visible
   * @return visible
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getVisible() {
    return visible;
  }


  public void setVisible(Boolean visible) {
    
    
    
    this.visible = visible;
  }


  public TopicsGetSingleTopicResponse closed(Boolean closed) {
    
    
    
    
    this.closed = closed;
    return this;
  }

   /**
   * Get closed
   * @return closed
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getClosed() {
    return closed;
  }


  public void setClosed(Boolean closed) {
    
    
    
    this.closed = closed;
  }


  public TopicsGetSingleTopicResponse archived(Boolean archived) {
    
    
    
    
    this.archived = archived;
    return this;
  }

   /**
   * Get archived
   * @return archived
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getArchived() {
    return archived;
  }


  public void setArchived(Boolean archived) {
    
    
    
    this.archived = archived;
  }


  public TopicsGetSingleTopicResponse hasSummary(Boolean hasSummary) {
    
    
    
    
    this.hasSummary = hasSummary;
    return this;
  }

   /**
   * Get hasSummary
   * @return hasSummary
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getHasSummary() {
    return hasSummary;
  }


  public void setHasSummary(Boolean hasSummary) {
    
    
    
    this.hasSummary = hasSummary;
  }


  public TopicsGetSingleTopicResponse archetype(String archetype) {
    
    
    
    
    this.archetype = archetype;
    return this;
  }

   /**
   * Get archetype
   * @return archetype
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getArchetype() {
    return archetype;
  }


  public void setArchetype(String archetype) {
    
    
    
    this.archetype = archetype;
  }


  public TopicsGetSingleTopicResponse slug(String slug) {
    
    
    
    
    this.slug = slug;
    return this;
  }

   /**
   * Get slug
   * @return slug
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getSlug() {
    return slug;
  }


  public void setSlug(String slug) {
    
    
    
    this.slug = slug;
  }


  public TopicsGetSingleTopicResponse categoryId(Integer categoryId) {
    
    
    
    
    this.categoryId = categoryId;
    return this;
  }

   /**
   * Get categoryId
   * @return categoryId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getCategoryId() {
    return categoryId;
  }


  public void setCategoryId(Integer categoryId) {
    
    
    
    this.categoryId = categoryId;
  }


  public TopicsGetSingleTopicResponse wordCount(Object wordCount) {
    
    
    
    
    this.wordCount = wordCount;
    return this;
  }

   /**
   * Get wordCount
   * @return wordCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getWordCount() {
    return wordCount;
  }


  public void setWordCount(Object wordCount) {
    
    
    
    this.wordCount = wordCount;
  }


  public TopicsGetSingleTopicResponse deletedAt(Object deletedAt) {
    
    
    
    
    this.deletedAt = deletedAt;
    return this;
  }

   /**
   * Get deletedAt
   * @return deletedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getDeletedAt() {
    return deletedAt;
  }


  public void setDeletedAt(Object deletedAt) {
    
    
    
    this.deletedAt = deletedAt;
  }


  public TopicsGetSingleTopicResponse userId(Integer userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    
    
    
    this.userId = userId;
  }


  public TopicsGetSingleTopicResponse featuredLink(Object featuredLink) {
    
    
    
    
    this.featuredLink = featuredLink;
    return this;
  }

   /**
   * Get featuredLink
   * @return featuredLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getFeaturedLink() {
    return featuredLink;
  }


  public void setFeaturedLink(Object featuredLink) {
    
    
    
    this.featuredLink = featuredLink;
  }


  public TopicsGetSingleTopicResponse pinnedGlobally(Boolean pinnedGlobally) {
    
    
    
    
    this.pinnedGlobally = pinnedGlobally;
    return this;
  }

   /**
   * Get pinnedGlobally
   * @return pinnedGlobally
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getPinnedGlobally() {
    return pinnedGlobally;
  }


  public void setPinnedGlobally(Boolean pinnedGlobally) {
    
    
    
    this.pinnedGlobally = pinnedGlobally;
  }


  public TopicsGetSingleTopicResponse pinnedAt(Object pinnedAt) {
    
    
    
    
    this.pinnedAt = pinnedAt;
    return this;
  }

   /**
   * Get pinnedAt
   * @return pinnedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getPinnedAt() {
    return pinnedAt;
  }


  public void setPinnedAt(Object pinnedAt) {
    
    
    
    this.pinnedAt = pinnedAt;
  }


  public TopicsGetSingleTopicResponse pinnedUntil(Object pinnedUntil) {
    
    
    
    
    this.pinnedUntil = pinnedUntil;
    return this;
  }

   /**
   * Get pinnedUntil
   * @return pinnedUntil
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getPinnedUntil() {
    return pinnedUntil;
  }


  public void setPinnedUntil(Object pinnedUntil) {
    
    
    
    this.pinnedUntil = pinnedUntil;
  }


  public TopicsGetSingleTopicResponse imageUrl(Object imageUrl) {
    
    
    
    
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * Get imageUrl
   * @return imageUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getImageUrl() {
    return imageUrl;
  }


  public void setImageUrl(Object imageUrl) {
    
    
    
    this.imageUrl = imageUrl;
  }


  public TopicsGetSingleTopicResponse slowModeSeconds(Integer slowModeSeconds) {
    
    
    
    
    this.slowModeSeconds = slowModeSeconds;
    return this;
  }

   /**
   * Get slowModeSeconds
   * @return slowModeSeconds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getSlowModeSeconds() {
    return slowModeSeconds;
  }


  public void setSlowModeSeconds(Integer slowModeSeconds) {
    
    
    
    this.slowModeSeconds = slowModeSeconds;
  }


  public TopicsGetSingleTopicResponse draft(Object draft) {
    
    
    
    
    this.draft = draft;
    return this;
  }

   /**
   * Get draft
   * @return draft
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getDraft() {
    return draft;
  }


  public void setDraft(Object draft) {
    
    
    
    this.draft = draft;
  }


  public TopicsGetSingleTopicResponse draftKey(String draftKey) {
    
    
    
    
    this.draftKey = draftKey;
    return this;
  }

   /**
   * Get draftKey
   * @return draftKey
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDraftKey() {
    return draftKey;
  }


  public void setDraftKey(String draftKey) {
    
    
    
    this.draftKey = draftKey;
  }


  public TopicsGetSingleTopicResponse draftSequence(Integer draftSequence) {
    
    
    
    
    this.draftSequence = draftSequence;
    return this;
  }

   /**
   * Get draftSequence
   * @return draftSequence
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getDraftSequence() {
    return draftSequence;
  }


  public void setDraftSequence(Integer draftSequence) {
    
    
    
    this.draftSequence = draftSequence;
  }


  public TopicsGetSingleTopicResponse unpinned(Object unpinned) {
    
    
    
    
    this.unpinned = unpinned;
    return this;
  }

   /**
   * Get unpinned
   * @return unpinned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getUnpinned() {
    return unpinned;
  }


  public void setUnpinned(Object unpinned) {
    
    
    
    this.unpinned = unpinned;
  }


  public TopicsGetSingleTopicResponse pinned(Boolean pinned) {
    
    
    
    
    this.pinned = pinned;
    return this;
  }

   /**
   * Get pinned
   * @return pinned
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getPinned() {
    return pinned;
  }


  public void setPinned(Boolean pinned) {
    
    
    
    this.pinned = pinned;
  }


  public TopicsGetSingleTopicResponse currentPostNumber(Integer currentPostNumber) {
    
    
    
    
    this.currentPostNumber = currentPostNumber;
    return this;
  }

   /**
   * Get currentPostNumber
   * @return currentPostNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCurrentPostNumber() {
    return currentPostNumber;
  }


  public void setCurrentPostNumber(Integer currentPostNumber) {
    
    
    
    this.currentPostNumber = currentPostNumber;
  }


  public TopicsGetSingleTopicResponse highestPostNumber(Object highestPostNumber) {
    
    
    
    
    this.highestPostNumber = highestPostNumber;
    return this;
  }

   /**
   * Get highestPostNumber
   * @return highestPostNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getHighestPostNumber() {
    return highestPostNumber;
  }


  public void setHighestPostNumber(Object highestPostNumber) {
    
    
    
    this.highestPostNumber = highestPostNumber;
  }


  public TopicsGetSingleTopicResponse deletedBy(Object deletedBy) {
    
    
    
    
    this.deletedBy = deletedBy;
    return this;
  }

   /**
   * Get deletedBy
   * @return deletedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getDeletedBy() {
    return deletedBy;
  }


  public void setDeletedBy(Object deletedBy) {
    
    
    
    this.deletedBy = deletedBy;
  }


  public TopicsGetSingleTopicResponse hasDeleted(Boolean hasDeleted) {
    
    
    
    
    this.hasDeleted = hasDeleted;
    return this;
  }

   /**
   * Get hasDeleted
   * @return hasDeleted
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getHasDeleted() {
    return hasDeleted;
  }


  public void setHasDeleted(Boolean hasDeleted) {
    
    
    
    this.hasDeleted = hasDeleted;
  }


  public TopicsGetSingleTopicResponse actionsSummary(List<TopicsGetSingleTopicResponseActionsSummaryInner> actionsSummary) {
    
    
    
    
    this.actionsSummary = actionsSummary;
    return this;
  }

  public TopicsGetSingleTopicResponse addActionsSummaryItem(TopicsGetSingleTopicResponseActionsSummaryInner actionsSummaryItem) {
    this.actionsSummary.add(actionsSummaryItem);
    return this;
  }

   /**
   * Get actionsSummary
   * @return actionsSummary
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<TopicsGetSingleTopicResponseActionsSummaryInner> getActionsSummary() {
    return actionsSummary;
  }


  public void setActionsSummary(List<TopicsGetSingleTopicResponseActionsSummaryInner> actionsSummary) {
    
    
    
    this.actionsSummary = actionsSummary;
  }


  public TopicsGetSingleTopicResponse chunkSize(Integer chunkSize) {
    
    
    
    
    this.chunkSize = chunkSize;
    return this;
  }

   /**
   * Get chunkSize
   * @return chunkSize
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getChunkSize() {
    return chunkSize;
  }


  public void setChunkSize(Integer chunkSize) {
    
    
    
    this.chunkSize = chunkSize;
  }


  public TopicsGetSingleTopicResponse bookmarked(Boolean bookmarked) {
    
    
    
    
    this.bookmarked = bookmarked;
    return this;
  }

   /**
   * Get bookmarked
   * @return bookmarked
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getBookmarked() {
    return bookmarked;
  }


  public void setBookmarked(Boolean bookmarked) {
    
    
    
    this.bookmarked = bookmarked;
  }


  public TopicsGetSingleTopicResponse bookmarks(List<Object> bookmarks) {
    
    
    
    
    this.bookmarks = bookmarks;
    return this;
  }

  public TopicsGetSingleTopicResponse addBookmarksItem(Object bookmarksItem) {
    this.bookmarks.add(bookmarksItem);
    return this;
  }

   /**
   * Get bookmarks
   * @return bookmarks
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getBookmarks() {
    return bookmarks;
  }


  public void setBookmarks(List<Object> bookmarks) {
    
    
    
    this.bookmarks = bookmarks;
  }


  public TopicsGetSingleTopicResponse topicTimer(Object topicTimer) {
    
    
    
    
    this.topicTimer = topicTimer;
    return this;
  }

   /**
   * Get topicTimer
   * @return topicTimer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getTopicTimer() {
    return topicTimer;
  }


  public void setTopicTimer(Object topicTimer) {
    
    
    
    this.topicTimer = topicTimer;
  }


  public TopicsGetSingleTopicResponse messageBusLastId(Integer messageBusLastId) {
    
    
    
    
    this.messageBusLastId = messageBusLastId;
    return this;
  }

   /**
   * Get messageBusLastId
   * @return messageBusLastId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getMessageBusLastId() {
    return messageBusLastId;
  }


  public void setMessageBusLastId(Integer messageBusLastId) {
    
    
    
    this.messageBusLastId = messageBusLastId;
  }


  public TopicsGetSingleTopicResponse participantCount(Integer participantCount) {
    
    
    
    
    this.participantCount = participantCount;
    return this;
  }

   /**
   * Get participantCount
   * @return participantCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getParticipantCount() {
    return participantCount;
  }


  public void setParticipantCount(Integer participantCount) {
    
    
    
    this.participantCount = participantCount;
  }


  public TopicsGetSingleTopicResponse showReadIndicator(Boolean showReadIndicator) {
    
    
    
    
    this.showReadIndicator = showReadIndicator;
    return this;
  }

   /**
   * Get showReadIndicator
   * @return showReadIndicator
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getShowReadIndicator() {
    return showReadIndicator;
  }


  public void setShowReadIndicator(Boolean showReadIndicator) {
    
    
    
    this.showReadIndicator = showReadIndicator;
  }


  public TopicsGetSingleTopicResponse thumbnails(Object thumbnails) {
    
    
    
    
    this.thumbnails = thumbnails;
    return this;
  }

   /**
   * Get thumbnails
   * @return thumbnails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getThumbnails() {
    return thumbnails;
  }


  public void setThumbnails(Object thumbnails) {
    
    
    
    this.thumbnails = thumbnails;
  }


  public TopicsGetSingleTopicResponse slowModeEnabledUntil(Object slowModeEnabledUntil) {
    
    
    
    
    this.slowModeEnabledUntil = slowModeEnabledUntil;
    return this;
  }

   /**
   * Get slowModeEnabledUntil
   * @return slowModeEnabledUntil
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getSlowModeEnabledUntil() {
    return slowModeEnabledUntil;
  }


  public void setSlowModeEnabledUntil(Object slowModeEnabledUntil) {
    
    
    
    this.slowModeEnabledUntil = slowModeEnabledUntil;
  }


  public TopicsGetSingleTopicResponse summarizable(Boolean summarizable) {
    
    
    
    
    this.summarizable = summarizable;
    return this;
  }

   /**
   * Get summarizable
   * @return summarizable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getSummarizable() {
    return summarizable;
  }


  public void setSummarizable(Boolean summarizable) {
    
    
    
    this.summarizable = summarizable;
  }


  public TopicsGetSingleTopicResponse details(TopicsGetSingleTopicResponseDetails details) {
    
    
    
    
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public TopicsGetSingleTopicResponseDetails getDetails() {
    return details;
  }


  public void setDetails(TopicsGetSingleTopicResponseDetails details) {
    
    
    
    this.details = details;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TopicsGetSingleTopicResponse topicsGetSingleTopicResponse = (TopicsGetSingleTopicResponse) o;
    return Objects.equals(this.tags, topicsGetSingleTopicResponse.tags) &&
        Objects.equals(this.title, topicsGetSingleTopicResponse.title) &&
        Objects.equals(this.postStream, topicsGetSingleTopicResponse.postStream) &&
        Objects.equals(this.timelineLookup, topicsGetSingleTopicResponse.timelineLookup) &&
        Objects.equals(this.suggestedTopics, topicsGetSingleTopicResponse.suggestedTopics) &&
        Objects.equals(this.tagsDescriptions, topicsGetSingleTopicResponse.tagsDescriptions) &&
        Objects.equals(this.id, topicsGetSingleTopicResponse.id) &&
        Objects.equals(this.fancyTitle, topicsGetSingleTopicResponse.fancyTitle) &&
        Objects.equals(this.postsCount, topicsGetSingleTopicResponse.postsCount) &&
        Objects.equals(this.createdAt, topicsGetSingleTopicResponse.createdAt) &&
        Objects.equals(this.views, topicsGetSingleTopicResponse.views) &&
        Objects.equals(this.replyCount, topicsGetSingleTopicResponse.replyCount) &&
        Objects.equals(this.likeCount, topicsGetSingleTopicResponse.likeCount) &&
        Objects.equals(this.lastPostedAt, topicsGetSingleTopicResponse.lastPostedAt) &&
        Objects.equals(this.visible, topicsGetSingleTopicResponse.visible) &&
        Objects.equals(this.closed, topicsGetSingleTopicResponse.closed) &&
        Objects.equals(this.archived, topicsGetSingleTopicResponse.archived) &&
        Objects.equals(this.hasSummary, topicsGetSingleTopicResponse.hasSummary) &&
        Objects.equals(this.archetype, topicsGetSingleTopicResponse.archetype) &&
        Objects.equals(this.slug, topicsGetSingleTopicResponse.slug) &&
        Objects.equals(this.categoryId, topicsGetSingleTopicResponse.categoryId) &&
        Objects.equals(this.wordCount, topicsGetSingleTopicResponse.wordCount) &&
        Objects.equals(this.deletedAt, topicsGetSingleTopicResponse.deletedAt) &&
        Objects.equals(this.userId, topicsGetSingleTopicResponse.userId) &&
        Objects.equals(this.featuredLink, topicsGetSingleTopicResponse.featuredLink) &&
        Objects.equals(this.pinnedGlobally, topicsGetSingleTopicResponse.pinnedGlobally) &&
        Objects.equals(this.pinnedAt, topicsGetSingleTopicResponse.pinnedAt) &&
        Objects.equals(this.pinnedUntil, topicsGetSingleTopicResponse.pinnedUntil) &&
        Objects.equals(this.imageUrl, topicsGetSingleTopicResponse.imageUrl) &&
        Objects.equals(this.slowModeSeconds, topicsGetSingleTopicResponse.slowModeSeconds) &&
        Objects.equals(this.draft, topicsGetSingleTopicResponse.draft) &&
        Objects.equals(this.draftKey, topicsGetSingleTopicResponse.draftKey) &&
        Objects.equals(this.draftSequence, topicsGetSingleTopicResponse.draftSequence) &&
        Objects.equals(this.unpinned, topicsGetSingleTopicResponse.unpinned) &&
        Objects.equals(this.pinned, topicsGetSingleTopicResponse.pinned) &&
        Objects.equals(this.currentPostNumber, topicsGetSingleTopicResponse.currentPostNumber) &&
        Objects.equals(this.highestPostNumber, topicsGetSingleTopicResponse.highestPostNumber) &&
        Objects.equals(this.deletedBy, topicsGetSingleTopicResponse.deletedBy) &&
        Objects.equals(this.hasDeleted, topicsGetSingleTopicResponse.hasDeleted) &&
        Objects.equals(this.actionsSummary, topicsGetSingleTopicResponse.actionsSummary) &&
        Objects.equals(this.chunkSize, topicsGetSingleTopicResponse.chunkSize) &&
        Objects.equals(this.bookmarked, topicsGetSingleTopicResponse.bookmarked) &&
        Objects.equals(this.bookmarks, topicsGetSingleTopicResponse.bookmarks) &&
        Objects.equals(this.topicTimer, topicsGetSingleTopicResponse.topicTimer) &&
        Objects.equals(this.messageBusLastId, topicsGetSingleTopicResponse.messageBusLastId) &&
        Objects.equals(this.participantCount, topicsGetSingleTopicResponse.participantCount) &&
        Objects.equals(this.showReadIndicator, topicsGetSingleTopicResponse.showReadIndicator) &&
        Objects.equals(this.thumbnails, topicsGetSingleTopicResponse.thumbnails) &&
        Objects.equals(this.slowModeEnabledUntil, topicsGetSingleTopicResponse.slowModeEnabledUntil) &&
        Objects.equals(this.summarizable, topicsGetSingleTopicResponse.summarizable) &&
        Objects.equals(this.details, topicsGetSingleTopicResponse.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tags, title, postStream, timelineLookup, suggestedTopics, tagsDescriptions, id, fancyTitle, postsCount, createdAt, views, replyCount, likeCount, lastPostedAt, visible, closed, archived, hasSummary, archetype, slug, categoryId, wordCount, deletedAt, userId, featuredLink, pinnedGlobally, pinnedAt, pinnedUntil, imageUrl, slowModeSeconds, draft, draftKey, draftSequence, unpinned, pinned, currentPostNumber, highestPostNumber, deletedBy, hasDeleted, actionsSummary, chunkSize, bookmarked, bookmarks, topicTimer, messageBusLastId, participantCount, showReadIndicator, thumbnails, slowModeEnabledUntil, summarizable, details);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TopicsGetSingleTopicResponse {\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    postStream: ").append(toIndentedString(postStream)).append("\n");
    sb.append("    timelineLookup: ").append(toIndentedString(timelineLookup)).append("\n");
    sb.append("    suggestedTopics: ").append(toIndentedString(suggestedTopics)).append("\n");
    sb.append("    tagsDescriptions: ").append(toIndentedString(tagsDescriptions)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    fancyTitle: ").append(toIndentedString(fancyTitle)).append("\n");
    sb.append("    postsCount: ").append(toIndentedString(postsCount)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    views: ").append(toIndentedString(views)).append("\n");
    sb.append("    replyCount: ").append(toIndentedString(replyCount)).append("\n");
    sb.append("    likeCount: ").append(toIndentedString(likeCount)).append("\n");
    sb.append("    lastPostedAt: ").append(toIndentedString(lastPostedAt)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    closed: ").append(toIndentedString(closed)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    hasSummary: ").append(toIndentedString(hasSummary)).append("\n");
    sb.append("    archetype: ").append(toIndentedString(archetype)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    wordCount: ").append(toIndentedString(wordCount)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    featuredLink: ").append(toIndentedString(featuredLink)).append("\n");
    sb.append("    pinnedGlobally: ").append(toIndentedString(pinnedGlobally)).append("\n");
    sb.append("    pinnedAt: ").append(toIndentedString(pinnedAt)).append("\n");
    sb.append("    pinnedUntil: ").append(toIndentedString(pinnedUntil)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    slowModeSeconds: ").append(toIndentedString(slowModeSeconds)).append("\n");
    sb.append("    draft: ").append(toIndentedString(draft)).append("\n");
    sb.append("    draftKey: ").append(toIndentedString(draftKey)).append("\n");
    sb.append("    draftSequence: ").append(toIndentedString(draftSequence)).append("\n");
    sb.append("    unpinned: ").append(toIndentedString(unpinned)).append("\n");
    sb.append("    pinned: ").append(toIndentedString(pinned)).append("\n");
    sb.append("    currentPostNumber: ").append(toIndentedString(currentPostNumber)).append("\n");
    sb.append("    highestPostNumber: ").append(toIndentedString(highestPostNumber)).append("\n");
    sb.append("    deletedBy: ").append(toIndentedString(deletedBy)).append("\n");
    sb.append("    hasDeleted: ").append(toIndentedString(hasDeleted)).append("\n");
    sb.append("    actionsSummary: ").append(toIndentedString(actionsSummary)).append("\n");
    sb.append("    chunkSize: ").append(toIndentedString(chunkSize)).append("\n");
    sb.append("    bookmarked: ").append(toIndentedString(bookmarked)).append("\n");
    sb.append("    bookmarks: ").append(toIndentedString(bookmarks)).append("\n");
    sb.append("    topicTimer: ").append(toIndentedString(topicTimer)).append("\n");
    sb.append("    messageBusLastId: ").append(toIndentedString(messageBusLastId)).append("\n");
    sb.append("    participantCount: ").append(toIndentedString(participantCount)).append("\n");
    sb.append("    showReadIndicator: ").append(toIndentedString(showReadIndicator)).append("\n");
    sb.append("    thumbnails: ").append(toIndentedString(thumbnails)).append("\n");
    sb.append("    slowModeEnabledUntil: ").append(toIndentedString(slowModeEnabledUntil)).append("\n");
    sb.append("    summarizable: ").append(toIndentedString(summarizable)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("tags");
    openapiFields.add("title");
    openapiFields.add("post_stream");
    openapiFields.add("timeline_lookup");
    openapiFields.add("suggested_topics");
    openapiFields.add("tags_descriptions");
    openapiFields.add("id");
    openapiFields.add("fancy_title");
    openapiFields.add("posts_count");
    openapiFields.add("created_at");
    openapiFields.add("views");
    openapiFields.add("reply_count");
    openapiFields.add("like_count");
    openapiFields.add("last_posted_at");
    openapiFields.add("visible");
    openapiFields.add("closed");
    openapiFields.add("archived");
    openapiFields.add("has_summary");
    openapiFields.add("archetype");
    openapiFields.add("slug");
    openapiFields.add("category_id");
    openapiFields.add("word_count");
    openapiFields.add("deleted_at");
    openapiFields.add("user_id");
    openapiFields.add("featured_link");
    openapiFields.add("pinned_globally");
    openapiFields.add("pinned_at");
    openapiFields.add("pinned_until");
    openapiFields.add("image_url");
    openapiFields.add("slow_mode_seconds");
    openapiFields.add("draft");
    openapiFields.add("draft_key");
    openapiFields.add("draft_sequence");
    openapiFields.add("unpinned");
    openapiFields.add("pinned");
    openapiFields.add("current_post_number");
    openapiFields.add("highest_post_number");
    openapiFields.add("deleted_by");
    openapiFields.add("has_deleted");
    openapiFields.add("actions_summary");
    openapiFields.add("chunk_size");
    openapiFields.add("bookmarked");
    openapiFields.add("bookmarks");
    openapiFields.add("topic_timer");
    openapiFields.add("message_bus_last_id");
    openapiFields.add("participant_count");
    openapiFields.add("show_read_indicator");
    openapiFields.add("thumbnails");
    openapiFields.add("slow_mode_enabled_until");
    openapiFields.add("summarizable");
    openapiFields.add("details");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("tags");
    openapiRequiredFields.add("title");
    openapiRequiredFields.add("post_stream");
    openapiRequiredFields.add("timeline_lookup");
    openapiRequiredFields.add("suggested_topics");
    openapiRequiredFields.add("tags_descriptions");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("fancy_title");
    openapiRequiredFields.add("posts_count");
    openapiRequiredFields.add("created_at");
    openapiRequiredFields.add("views");
    openapiRequiredFields.add("reply_count");
    openapiRequiredFields.add("like_count");
    openapiRequiredFields.add("last_posted_at");
    openapiRequiredFields.add("visible");
    openapiRequiredFields.add("closed");
    openapiRequiredFields.add("archived");
    openapiRequiredFields.add("has_summary");
    openapiRequiredFields.add("archetype");
    openapiRequiredFields.add("slug");
    openapiRequiredFields.add("category_id");
    openapiRequiredFields.add("word_count");
    openapiRequiredFields.add("deleted_at");
    openapiRequiredFields.add("user_id");
    openapiRequiredFields.add("featured_link");
    openapiRequiredFields.add("pinned_globally");
    openapiRequiredFields.add("pinned_at");
    openapiRequiredFields.add("pinned_until");
    openapiRequiredFields.add("image_url");
    openapiRequiredFields.add("slow_mode_seconds");
    openapiRequiredFields.add("draft");
    openapiRequiredFields.add("draft_key");
    openapiRequiredFields.add("draft_sequence");
    openapiRequiredFields.add("unpinned");
    openapiRequiredFields.add("pinned");
    openapiRequiredFields.add("highest_post_number");
    openapiRequiredFields.add("deleted_by");
    openapiRequiredFields.add("has_deleted");
    openapiRequiredFields.add("actions_summary");
    openapiRequiredFields.add("chunk_size");
    openapiRequiredFields.add("bookmarked");
    openapiRequiredFields.add("bookmarks");
    openapiRequiredFields.add("topic_timer");
    openapiRequiredFields.add("message_bus_last_id");
    openapiRequiredFields.add("participant_count");
    openapiRequiredFields.add("show_read_indicator");
    openapiRequiredFields.add("thumbnails");
    openapiRequiredFields.add("slow_mode_enabled_until");
    openapiRequiredFields.add("summarizable");
    openapiRequiredFields.add("details");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TopicsGetSingleTopicResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TopicsGetSingleTopicResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TopicsGetSingleTopicResponse is not found in the empty JSON string", TopicsGetSingleTopicResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!TopicsGetSingleTopicResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TopicsGetSingleTopicResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TopicsGetSingleTopicResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // ensure the required json array is present
      if (jsonObj.get("tags") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if (!jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      // validate the required field `post_stream`
      TopicsGetSingleTopicResponsePostStream.validateJsonObject(jsonObj.getAsJsonObject("post_stream"));
      // ensure the required json array is present
      if (jsonObj.get("timeline_lookup") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("timeline_lookup").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeline_lookup` to be an array in the JSON string but got `%s`", jsonObj.get("timeline_lookup").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("suggested_topics").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `suggested_topics` to be an array in the JSON string but got `%s`", jsonObj.get("suggested_topics").toString()));
      }

      JsonArray jsonArraysuggestedTopics = jsonObj.getAsJsonArray("suggested_topics");
      // validate the required field `suggested_topics` (array)
      for (int i = 0; i < jsonArraysuggestedTopics.size(); i++) {
        TopicsGetSingleTopicResponseSuggestedTopicsInner.validateJsonObject(jsonArraysuggestedTopics.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("fancy_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fancy_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fancy_title").toString()));
      }
      if (!jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if (!jsonObj.get("archetype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `archetype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("archetype").toString()));
      }
      if (!jsonObj.get("slug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slug").toString()));
      }
      if (!jsonObj.get("draft_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `draft_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("draft_key").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("actions_summary").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `actions_summary` to be an array in the JSON string but got `%s`", jsonObj.get("actions_summary").toString()));
      }

      JsonArray jsonArrayactionsSummary = jsonObj.getAsJsonArray("actions_summary");
      // validate the required field `actions_summary` (array)
      for (int i = 0; i < jsonArrayactionsSummary.size(); i++) {
        TopicsGetSingleTopicResponseActionsSummaryInner.validateJsonObject(jsonArrayactionsSummary.get(i).getAsJsonObject());
      };
      // ensure the required json array is present
      if (jsonObj.get("bookmarks") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("bookmarks").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bookmarks` to be an array in the JSON string but got `%s`", jsonObj.get("bookmarks").toString()));
      }
      // validate the required field `details`
      TopicsGetSingleTopicResponseDetails.validateJsonObject(jsonObj.getAsJsonObject("details"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TopicsGetSingleTopicResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TopicsGetSingleTopicResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TopicsGetSingleTopicResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TopicsGetSingleTopicResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<TopicsGetSingleTopicResponse>() {
           @Override
           public void write(JsonWriter out, TopicsGetSingleTopicResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TopicsGetSingleTopicResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TopicsGetSingleTopicResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TopicsGetSingleTopicResponse
  * @throws IOException if the JSON string is invalid with respect to TopicsGetSingleTopicResponse
  */
  public static TopicsGetSingleTopicResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TopicsGetSingleTopicResponse.class);
  }

 /**
  * Convert an instance of TopicsGetSingleTopicResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

