/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * UsersGetUserByUsernameResponseUserUserOption
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class UsersGetUserByUsernameResponseUserUserOption {
  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_MAILING_LIST_MODE = "mailing_list_mode";
  @SerializedName(SERIALIZED_NAME_MAILING_LIST_MODE)
  private Boolean mailingListMode;

  public static final String SERIALIZED_NAME_MAILING_LIST_MODE_FREQUENCY = "mailing_list_mode_frequency";
  @SerializedName(SERIALIZED_NAME_MAILING_LIST_MODE_FREQUENCY)
  private Integer mailingListModeFrequency;

  public static final String SERIALIZED_NAME_EMAIL_DIGESTS = "email_digests";
  @SerializedName(SERIALIZED_NAME_EMAIL_DIGESTS)
  private Boolean emailDigests;

  public static final String SERIALIZED_NAME_EMAIL_LEVEL = "email_level";
  @SerializedName(SERIALIZED_NAME_EMAIL_LEVEL)
  private Integer emailLevel;

  public static final String SERIALIZED_NAME_EMAIL_MESSAGES_LEVEL = "email_messages_level";
  @SerializedName(SERIALIZED_NAME_EMAIL_MESSAGES_LEVEL)
  private Integer emailMessagesLevel;

  public static final String SERIALIZED_NAME_EXTERNAL_LINKS_IN_NEW_TAB = "external_links_in_new_tab";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_LINKS_IN_NEW_TAB)
  private Boolean externalLinksInNewTab;

  public static final String SERIALIZED_NAME_BOOKMARK_AUTO_DELETE_PREFERENCE = "bookmark_auto_delete_preference";
  @SerializedName(SERIALIZED_NAME_BOOKMARK_AUTO_DELETE_PREFERENCE)
  private Integer bookmarkAutoDeletePreference;

  public static final String SERIALIZED_NAME_COLOR_SCHEME_ID = "color_scheme_id";
  @SerializedName(SERIALIZED_NAME_COLOR_SCHEME_ID)
  private Object colorSchemeId = null;

  public static final String SERIALIZED_NAME_DARK_SCHEME_ID = "dark_scheme_id";
  @SerializedName(SERIALIZED_NAME_DARK_SCHEME_ID)
  private Object darkSchemeId = null;

  public static final String SERIALIZED_NAME_DYNAMIC_FAVICON = "dynamic_favicon";
  @SerializedName(SERIALIZED_NAME_DYNAMIC_FAVICON)
  private Boolean dynamicFavicon;

  public static final String SERIALIZED_NAME_ENABLE_QUOTING = "enable_quoting";
  @SerializedName(SERIALIZED_NAME_ENABLE_QUOTING)
  private Boolean enableQuoting;

  public static final String SERIALIZED_NAME_ENABLE_DEFER = "enable_defer";
  @SerializedName(SERIALIZED_NAME_ENABLE_DEFER)
  private Boolean enableDefer;

  public static final String SERIALIZED_NAME_DIGEST_AFTER_MINUTES = "digest_after_minutes";
  @SerializedName(SERIALIZED_NAME_DIGEST_AFTER_MINUTES)
  private Integer digestAfterMinutes;

  public static final String SERIALIZED_NAME_AUTOMATICALLY_UNPIN_TOPICS = "automatically_unpin_topics";
  @SerializedName(SERIALIZED_NAME_AUTOMATICALLY_UNPIN_TOPICS)
  private Boolean automaticallyUnpinTopics;

  public static final String SERIALIZED_NAME_AUTO_TRACK_TOPICS_AFTER_MSECS = "auto_track_topics_after_msecs";
  @SerializedName(SERIALIZED_NAME_AUTO_TRACK_TOPICS_AFTER_MSECS)
  private Integer autoTrackTopicsAfterMsecs;

  public static final String SERIALIZED_NAME_NOTIFICATION_LEVEL_WHEN_REPLYING = "notification_level_when_replying";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_LEVEL_WHEN_REPLYING)
  private Integer notificationLevelWhenReplying;

  public static final String SERIALIZED_NAME_NEW_TOPIC_DURATION_MINUTES = "new_topic_duration_minutes";
  @SerializedName(SERIALIZED_NAME_NEW_TOPIC_DURATION_MINUTES)
  private Integer newTopicDurationMinutes;

  public static final String SERIALIZED_NAME_EMAIL_PREVIOUS_REPLIES = "email_previous_replies";
  @SerializedName(SERIALIZED_NAME_EMAIL_PREVIOUS_REPLIES)
  private Integer emailPreviousReplies;

  public static final String SERIALIZED_NAME_EMAIL_IN_REPLY_TO = "email_in_reply_to";
  @SerializedName(SERIALIZED_NAME_EMAIL_IN_REPLY_TO)
  private Boolean emailInReplyTo;

  public static final String SERIALIZED_NAME_LIKE_NOTIFICATION_FREQUENCY = "like_notification_frequency";
  @SerializedName(SERIALIZED_NAME_LIKE_NOTIFICATION_FREQUENCY)
  private Integer likeNotificationFrequency;

  public static final String SERIALIZED_NAME_INCLUDE_TL0_IN_DIGESTS = "include_tl0_in_digests";
  @SerializedName(SERIALIZED_NAME_INCLUDE_TL0_IN_DIGESTS)
  private Boolean includeTl0InDigests;

  public static final String SERIALIZED_NAME_THEME_IDS = "theme_ids";
  @SerializedName(SERIALIZED_NAME_THEME_IDS)
  private List<Object> themeIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_THEME_KEY_SEQ = "theme_key_seq";
  @SerializedName(SERIALIZED_NAME_THEME_KEY_SEQ)
  private Integer themeKeySeq;

  public static final String SERIALIZED_NAME_ALLOW_PRIVATE_MESSAGES = "allow_private_messages";
  @SerializedName(SERIALIZED_NAME_ALLOW_PRIVATE_MESSAGES)
  private Boolean allowPrivateMessages;

  public static final String SERIALIZED_NAME_ENABLE_ALLOWED_PM_USERS = "enable_allowed_pm_users";
  @SerializedName(SERIALIZED_NAME_ENABLE_ALLOWED_PM_USERS)
  private Boolean enableAllowedPmUsers;

  public static final String SERIALIZED_NAME_HOMEPAGE_ID = "homepage_id";
  @SerializedName(SERIALIZED_NAME_HOMEPAGE_ID)
  private Object homepageId = null;

  public static final String SERIALIZED_NAME_HIDE_PROFILE_AND_PRESENCE = "hide_profile_and_presence";
  @SerializedName(SERIALIZED_NAME_HIDE_PROFILE_AND_PRESENCE)
  private Boolean hideProfileAndPresence;

  public static final String SERIALIZED_NAME_TEXT_SIZE = "text_size";
  @SerializedName(SERIALIZED_NAME_TEXT_SIZE)
  private String textSize;

  public static final String SERIALIZED_NAME_TEXT_SIZE_SEQ = "text_size_seq";
  @SerializedName(SERIALIZED_NAME_TEXT_SIZE_SEQ)
  private Integer textSizeSeq;

  public static final String SERIALIZED_NAME_TITLE_COUNT_MODE = "title_count_mode";
  @SerializedName(SERIALIZED_NAME_TITLE_COUNT_MODE)
  private String titleCountMode;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private Object timezone = null;

  public static final String SERIALIZED_NAME_SKIP_NEW_USER_TIPS = "skip_new_user_tips";
  @SerializedName(SERIALIZED_NAME_SKIP_NEW_USER_TIPS)
  private Boolean skipNewUserTips;

  public static final String SERIALIZED_NAME_DEFAULT_CALENDAR = "default_calendar";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CALENDAR)
  private String defaultCalendar;

  public static final String SERIALIZED_NAME_OLDEST_SEARCH_LOG_DATE = "oldest_search_log_date";
  @SerializedName(SERIALIZED_NAME_OLDEST_SEARCH_LOG_DATE)
  private Object oldestSearchLogDate = null;

  public static final String SERIALIZED_NAME_SIDEBAR_LINK_TO_FILTERED_LIST = "sidebar_link_to_filtered_list";
  @SerializedName(SERIALIZED_NAME_SIDEBAR_LINK_TO_FILTERED_LIST)
  private Boolean sidebarLinkToFilteredList;

  public static final String SERIALIZED_NAME_SIDEBAR_SHOW_COUNT_OF_NEW_ITEMS = "sidebar_show_count_of_new_items";
  @SerializedName(SERIALIZED_NAME_SIDEBAR_SHOW_COUNT_OF_NEW_ITEMS)
  private Boolean sidebarShowCountOfNewItems;

  public static final String SERIALIZED_NAME_WATCHED_PRECEDENCE_OVER_MUTED = "watched_precedence_over_muted";
  @SerializedName(SERIALIZED_NAME_WATCHED_PRECEDENCE_OVER_MUTED)
  private Object watchedPrecedenceOverMuted = null;

  public static final String SERIALIZED_NAME_SEEN_POPUPS = "seen_popups";
  @SerializedName(SERIALIZED_NAME_SEEN_POPUPS)
  private Object seenPopups = null;

  public static final String SERIALIZED_NAME_TOPICS_UNREAD_WHEN_CLOSED = "topics_unread_when_closed";
  @SerializedName(SERIALIZED_NAME_TOPICS_UNREAD_WHEN_CLOSED)
  private Boolean topicsUnreadWhenClosed;

  public UsersGetUserByUsernameResponseUserUserOption() {
  }

  public UsersGetUserByUsernameResponseUserUserOption userId(Integer userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    
    
    
    this.userId = userId;
  }


  public UsersGetUserByUsernameResponseUserUserOption mailingListMode(Boolean mailingListMode) {
    
    
    
    
    this.mailingListMode = mailingListMode;
    return this;
  }

   /**
   * Get mailingListMode
   * @return mailingListMode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getMailingListMode() {
    return mailingListMode;
  }


  public void setMailingListMode(Boolean mailingListMode) {
    
    
    
    this.mailingListMode = mailingListMode;
  }


  public UsersGetUserByUsernameResponseUserUserOption mailingListModeFrequency(Integer mailingListModeFrequency) {
    
    
    
    
    this.mailingListModeFrequency = mailingListModeFrequency;
    return this;
  }

   /**
   * Get mailingListModeFrequency
   * @return mailingListModeFrequency
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getMailingListModeFrequency() {
    return mailingListModeFrequency;
  }


  public void setMailingListModeFrequency(Integer mailingListModeFrequency) {
    
    
    
    this.mailingListModeFrequency = mailingListModeFrequency;
  }


  public UsersGetUserByUsernameResponseUserUserOption emailDigests(Boolean emailDigests) {
    
    
    
    
    this.emailDigests = emailDigests;
    return this;
  }

   /**
   * Get emailDigests
   * @return emailDigests
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getEmailDigests() {
    return emailDigests;
  }


  public void setEmailDigests(Boolean emailDigests) {
    
    
    
    this.emailDigests = emailDigests;
  }


  public UsersGetUserByUsernameResponseUserUserOption emailLevel(Integer emailLevel) {
    
    
    
    
    this.emailLevel = emailLevel;
    return this;
  }

   /**
   * Get emailLevel
   * @return emailLevel
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getEmailLevel() {
    return emailLevel;
  }


  public void setEmailLevel(Integer emailLevel) {
    
    
    
    this.emailLevel = emailLevel;
  }


  public UsersGetUserByUsernameResponseUserUserOption emailMessagesLevel(Integer emailMessagesLevel) {
    
    
    
    
    this.emailMessagesLevel = emailMessagesLevel;
    return this;
  }

   /**
   * Get emailMessagesLevel
   * @return emailMessagesLevel
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getEmailMessagesLevel() {
    return emailMessagesLevel;
  }


  public void setEmailMessagesLevel(Integer emailMessagesLevel) {
    
    
    
    this.emailMessagesLevel = emailMessagesLevel;
  }


  public UsersGetUserByUsernameResponseUserUserOption externalLinksInNewTab(Boolean externalLinksInNewTab) {
    
    
    
    
    this.externalLinksInNewTab = externalLinksInNewTab;
    return this;
  }

   /**
   * Get externalLinksInNewTab
   * @return externalLinksInNewTab
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getExternalLinksInNewTab() {
    return externalLinksInNewTab;
  }


  public void setExternalLinksInNewTab(Boolean externalLinksInNewTab) {
    
    
    
    this.externalLinksInNewTab = externalLinksInNewTab;
  }


  public UsersGetUserByUsernameResponseUserUserOption bookmarkAutoDeletePreference(Integer bookmarkAutoDeletePreference) {
    
    
    
    
    this.bookmarkAutoDeletePreference = bookmarkAutoDeletePreference;
    return this;
  }

   /**
   * Get bookmarkAutoDeletePreference
   * @return bookmarkAutoDeletePreference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getBookmarkAutoDeletePreference() {
    return bookmarkAutoDeletePreference;
  }


  public void setBookmarkAutoDeletePreference(Integer bookmarkAutoDeletePreference) {
    
    
    
    this.bookmarkAutoDeletePreference = bookmarkAutoDeletePreference;
  }


  public UsersGetUserByUsernameResponseUserUserOption colorSchemeId(Object colorSchemeId) {
    
    
    
    
    this.colorSchemeId = colorSchemeId;
    return this;
  }

   /**
   * Get colorSchemeId
   * @return colorSchemeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getColorSchemeId() {
    return colorSchemeId;
  }


  public void setColorSchemeId(Object colorSchemeId) {
    
    
    
    this.colorSchemeId = colorSchemeId;
  }


  public UsersGetUserByUsernameResponseUserUserOption darkSchemeId(Object darkSchemeId) {
    
    
    
    
    this.darkSchemeId = darkSchemeId;
    return this;
  }

   /**
   * Get darkSchemeId
   * @return darkSchemeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getDarkSchemeId() {
    return darkSchemeId;
  }


  public void setDarkSchemeId(Object darkSchemeId) {
    
    
    
    this.darkSchemeId = darkSchemeId;
  }


  public UsersGetUserByUsernameResponseUserUserOption dynamicFavicon(Boolean dynamicFavicon) {
    
    
    
    
    this.dynamicFavicon = dynamicFavicon;
    return this;
  }

   /**
   * Get dynamicFavicon
   * @return dynamicFavicon
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getDynamicFavicon() {
    return dynamicFavicon;
  }


  public void setDynamicFavicon(Boolean dynamicFavicon) {
    
    
    
    this.dynamicFavicon = dynamicFavicon;
  }


  public UsersGetUserByUsernameResponseUserUserOption enableQuoting(Boolean enableQuoting) {
    
    
    
    
    this.enableQuoting = enableQuoting;
    return this;
  }

   /**
   * Get enableQuoting
   * @return enableQuoting
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getEnableQuoting() {
    return enableQuoting;
  }


  public void setEnableQuoting(Boolean enableQuoting) {
    
    
    
    this.enableQuoting = enableQuoting;
  }


  public UsersGetUserByUsernameResponseUserUserOption enableDefer(Boolean enableDefer) {
    
    
    
    
    this.enableDefer = enableDefer;
    return this;
  }

   /**
   * Get enableDefer
   * @return enableDefer
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getEnableDefer() {
    return enableDefer;
  }


  public void setEnableDefer(Boolean enableDefer) {
    
    
    
    this.enableDefer = enableDefer;
  }


  public UsersGetUserByUsernameResponseUserUserOption digestAfterMinutes(Integer digestAfterMinutes) {
    
    
    
    
    this.digestAfterMinutes = digestAfterMinutes;
    return this;
  }

   /**
   * Get digestAfterMinutes
   * @return digestAfterMinutes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getDigestAfterMinutes() {
    return digestAfterMinutes;
  }


  public void setDigestAfterMinutes(Integer digestAfterMinutes) {
    
    
    
    this.digestAfterMinutes = digestAfterMinutes;
  }


  public UsersGetUserByUsernameResponseUserUserOption automaticallyUnpinTopics(Boolean automaticallyUnpinTopics) {
    
    
    
    
    this.automaticallyUnpinTopics = automaticallyUnpinTopics;
    return this;
  }

   /**
   * Get automaticallyUnpinTopics
   * @return automaticallyUnpinTopics
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getAutomaticallyUnpinTopics() {
    return automaticallyUnpinTopics;
  }


  public void setAutomaticallyUnpinTopics(Boolean automaticallyUnpinTopics) {
    
    
    
    this.automaticallyUnpinTopics = automaticallyUnpinTopics;
  }


  public UsersGetUserByUsernameResponseUserUserOption autoTrackTopicsAfterMsecs(Integer autoTrackTopicsAfterMsecs) {
    
    
    
    
    this.autoTrackTopicsAfterMsecs = autoTrackTopicsAfterMsecs;
    return this;
  }

   /**
   * Get autoTrackTopicsAfterMsecs
   * @return autoTrackTopicsAfterMsecs
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getAutoTrackTopicsAfterMsecs() {
    return autoTrackTopicsAfterMsecs;
  }


  public void setAutoTrackTopicsAfterMsecs(Integer autoTrackTopicsAfterMsecs) {
    
    
    
    this.autoTrackTopicsAfterMsecs = autoTrackTopicsAfterMsecs;
  }


  public UsersGetUserByUsernameResponseUserUserOption notificationLevelWhenReplying(Integer notificationLevelWhenReplying) {
    
    
    
    
    this.notificationLevelWhenReplying = notificationLevelWhenReplying;
    return this;
  }

   /**
   * Get notificationLevelWhenReplying
   * @return notificationLevelWhenReplying
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getNotificationLevelWhenReplying() {
    return notificationLevelWhenReplying;
  }


  public void setNotificationLevelWhenReplying(Integer notificationLevelWhenReplying) {
    
    
    
    this.notificationLevelWhenReplying = notificationLevelWhenReplying;
  }


  public UsersGetUserByUsernameResponseUserUserOption newTopicDurationMinutes(Integer newTopicDurationMinutes) {
    
    
    
    
    this.newTopicDurationMinutes = newTopicDurationMinutes;
    return this;
  }

   /**
   * Get newTopicDurationMinutes
   * @return newTopicDurationMinutes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getNewTopicDurationMinutes() {
    return newTopicDurationMinutes;
  }


  public void setNewTopicDurationMinutes(Integer newTopicDurationMinutes) {
    
    
    
    this.newTopicDurationMinutes = newTopicDurationMinutes;
  }


  public UsersGetUserByUsernameResponseUserUserOption emailPreviousReplies(Integer emailPreviousReplies) {
    
    
    
    
    this.emailPreviousReplies = emailPreviousReplies;
    return this;
  }

   /**
   * Get emailPreviousReplies
   * @return emailPreviousReplies
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getEmailPreviousReplies() {
    return emailPreviousReplies;
  }


  public void setEmailPreviousReplies(Integer emailPreviousReplies) {
    
    
    
    this.emailPreviousReplies = emailPreviousReplies;
  }


  public UsersGetUserByUsernameResponseUserUserOption emailInReplyTo(Boolean emailInReplyTo) {
    
    
    
    
    this.emailInReplyTo = emailInReplyTo;
    return this;
  }

   /**
   * Get emailInReplyTo
   * @return emailInReplyTo
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getEmailInReplyTo() {
    return emailInReplyTo;
  }


  public void setEmailInReplyTo(Boolean emailInReplyTo) {
    
    
    
    this.emailInReplyTo = emailInReplyTo;
  }


  public UsersGetUserByUsernameResponseUserUserOption likeNotificationFrequency(Integer likeNotificationFrequency) {
    
    
    
    
    this.likeNotificationFrequency = likeNotificationFrequency;
    return this;
  }

   /**
   * Get likeNotificationFrequency
   * @return likeNotificationFrequency
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getLikeNotificationFrequency() {
    return likeNotificationFrequency;
  }


  public void setLikeNotificationFrequency(Integer likeNotificationFrequency) {
    
    
    
    this.likeNotificationFrequency = likeNotificationFrequency;
  }


  public UsersGetUserByUsernameResponseUserUserOption includeTl0InDigests(Boolean includeTl0InDigests) {
    
    
    
    
    this.includeTl0InDigests = includeTl0InDigests;
    return this;
  }

   /**
   * Get includeTl0InDigests
   * @return includeTl0InDigests
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getIncludeTl0InDigests() {
    return includeTl0InDigests;
  }


  public void setIncludeTl0InDigests(Boolean includeTl0InDigests) {
    
    
    
    this.includeTl0InDigests = includeTl0InDigests;
  }


  public UsersGetUserByUsernameResponseUserUserOption themeIds(List<Object> themeIds) {
    
    
    
    
    this.themeIds = themeIds;
    return this;
  }

  public UsersGetUserByUsernameResponseUserUserOption addThemeIdsItem(Object themeIdsItem) {
    this.themeIds.add(themeIdsItem);
    return this;
  }

   /**
   * Get themeIds
   * @return themeIds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getThemeIds() {
    return themeIds;
  }


  public void setThemeIds(List<Object> themeIds) {
    
    
    
    this.themeIds = themeIds;
  }


  public UsersGetUserByUsernameResponseUserUserOption themeKeySeq(Integer themeKeySeq) {
    
    
    
    
    this.themeKeySeq = themeKeySeq;
    return this;
  }

   /**
   * Get themeKeySeq
   * @return themeKeySeq
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getThemeKeySeq() {
    return themeKeySeq;
  }


  public void setThemeKeySeq(Integer themeKeySeq) {
    
    
    
    this.themeKeySeq = themeKeySeq;
  }


  public UsersGetUserByUsernameResponseUserUserOption allowPrivateMessages(Boolean allowPrivateMessages) {
    
    
    
    
    this.allowPrivateMessages = allowPrivateMessages;
    return this;
  }

   /**
   * Get allowPrivateMessages
   * @return allowPrivateMessages
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getAllowPrivateMessages() {
    return allowPrivateMessages;
  }


  public void setAllowPrivateMessages(Boolean allowPrivateMessages) {
    
    
    
    this.allowPrivateMessages = allowPrivateMessages;
  }


  public UsersGetUserByUsernameResponseUserUserOption enableAllowedPmUsers(Boolean enableAllowedPmUsers) {
    
    
    
    
    this.enableAllowedPmUsers = enableAllowedPmUsers;
    return this;
  }

   /**
   * Get enableAllowedPmUsers
   * @return enableAllowedPmUsers
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getEnableAllowedPmUsers() {
    return enableAllowedPmUsers;
  }


  public void setEnableAllowedPmUsers(Boolean enableAllowedPmUsers) {
    
    
    
    this.enableAllowedPmUsers = enableAllowedPmUsers;
  }


  public UsersGetUserByUsernameResponseUserUserOption homepageId(Object homepageId) {
    
    
    
    
    this.homepageId = homepageId;
    return this;
  }

   /**
   * Get homepageId
   * @return homepageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getHomepageId() {
    return homepageId;
  }


  public void setHomepageId(Object homepageId) {
    
    
    
    this.homepageId = homepageId;
  }


  public UsersGetUserByUsernameResponseUserUserOption hideProfileAndPresence(Boolean hideProfileAndPresence) {
    
    
    
    
    this.hideProfileAndPresence = hideProfileAndPresence;
    return this;
  }

   /**
   * Get hideProfileAndPresence
   * @return hideProfileAndPresence
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getHideProfileAndPresence() {
    return hideProfileAndPresence;
  }


  public void setHideProfileAndPresence(Boolean hideProfileAndPresence) {
    
    
    
    this.hideProfileAndPresence = hideProfileAndPresence;
  }


  public UsersGetUserByUsernameResponseUserUserOption textSize(String textSize) {
    
    
    
    
    this.textSize = textSize;
    return this;
  }

   /**
   * Get textSize
   * @return textSize
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getTextSize() {
    return textSize;
  }


  public void setTextSize(String textSize) {
    
    
    
    this.textSize = textSize;
  }


  public UsersGetUserByUsernameResponseUserUserOption textSizeSeq(Integer textSizeSeq) {
    
    
    
    
    this.textSizeSeq = textSizeSeq;
    return this;
  }

   /**
   * Get textSizeSeq
   * @return textSizeSeq
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getTextSizeSeq() {
    return textSizeSeq;
  }


  public void setTextSizeSeq(Integer textSizeSeq) {
    
    
    
    this.textSizeSeq = textSizeSeq;
  }


  public UsersGetUserByUsernameResponseUserUserOption titleCountMode(String titleCountMode) {
    
    
    
    
    this.titleCountMode = titleCountMode;
    return this;
  }

   /**
   * Get titleCountMode
   * @return titleCountMode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getTitleCountMode() {
    return titleCountMode;
  }


  public void setTitleCountMode(String titleCountMode) {
    
    
    
    this.titleCountMode = titleCountMode;
  }


  public UsersGetUserByUsernameResponseUserUserOption timezone(Object timezone) {
    
    
    
    
    this.timezone = timezone;
    return this;
  }

   /**
   * Get timezone
   * @return timezone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getTimezone() {
    return timezone;
  }


  public void setTimezone(Object timezone) {
    
    
    
    this.timezone = timezone;
  }


  public UsersGetUserByUsernameResponseUserUserOption skipNewUserTips(Boolean skipNewUserTips) {
    
    
    
    
    this.skipNewUserTips = skipNewUserTips;
    return this;
  }

   /**
   * Get skipNewUserTips
   * @return skipNewUserTips
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getSkipNewUserTips() {
    return skipNewUserTips;
  }


  public void setSkipNewUserTips(Boolean skipNewUserTips) {
    
    
    
    this.skipNewUserTips = skipNewUserTips;
  }


  public UsersGetUserByUsernameResponseUserUserOption defaultCalendar(String defaultCalendar) {
    
    
    
    
    this.defaultCalendar = defaultCalendar;
    return this;
  }

   /**
   * Get defaultCalendar
   * @return defaultCalendar
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDefaultCalendar() {
    return defaultCalendar;
  }


  public void setDefaultCalendar(String defaultCalendar) {
    
    
    
    this.defaultCalendar = defaultCalendar;
  }


  public UsersGetUserByUsernameResponseUserUserOption oldestSearchLogDate(Object oldestSearchLogDate) {
    
    
    
    
    this.oldestSearchLogDate = oldestSearchLogDate;
    return this;
  }

   /**
   * Get oldestSearchLogDate
   * @return oldestSearchLogDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getOldestSearchLogDate() {
    return oldestSearchLogDate;
  }


  public void setOldestSearchLogDate(Object oldestSearchLogDate) {
    
    
    
    this.oldestSearchLogDate = oldestSearchLogDate;
  }


  public UsersGetUserByUsernameResponseUserUserOption sidebarLinkToFilteredList(Boolean sidebarLinkToFilteredList) {
    
    
    
    
    this.sidebarLinkToFilteredList = sidebarLinkToFilteredList;
    return this;
  }

   /**
   * Get sidebarLinkToFilteredList
   * @return sidebarLinkToFilteredList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSidebarLinkToFilteredList() {
    return sidebarLinkToFilteredList;
  }


  public void setSidebarLinkToFilteredList(Boolean sidebarLinkToFilteredList) {
    
    
    
    this.sidebarLinkToFilteredList = sidebarLinkToFilteredList;
  }


  public UsersGetUserByUsernameResponseUserUserOption sidebarShowCountOfNewItems(Boolean sidebarShowCountOfNewItems) {
    
    
    
    
    this.sidebarShowCountOfNewItems = sidebarShowCountOfNewItems;
    return this;
  }

   /**
   * Get sidebarShowCountOfNewItems
   * @return sidebarShowCountOfNewItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSidebarShowCountOfNewItems() {
    return sidebarShowCountOfNewItems;
  }


  public void setSidebarShowCountOfNewItems(Boolean sidebarShowCountOfNewItems) {
    
    
    
    this.sidebarShowCountOfNewItems = sidebarShowCountOfNewItems;
  }


  public UsersGetUserByUsernameResponseUserUserOption watchedPrecedenceOverMuted(Object watchedPrecedenceOverMuted) {
    
    
    
    
    this.watchedPrecedenceOverMuted = watchedPrecedenceOverMuted;
    return this;
  }

   /**
   * Get watchedPrecedenceOverMuted
   * @return watchedPrecedenceOverMuted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getWatchedPrecedenceOverMuted() {
    return watchedPrecedenceOverMuted;
  }


  public void setWatchedPrecedenceOverMuted(Object watchedPrecedenceOverMuted) {
    
    
    
    this.watchedPrecedenceOverMuted = watchedPrecedenceOverMuted;
  }


  public UsersGetUserByUsernameResponseUserUserOption seenPopups(Object seenPopups) {
    
    
    
    
    this.seenPopups = seenPopups;
    return this;
  }

   /**
   * Get seenPopups
   * @return seenPopups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getSeenPopups() {
    return seenPopups;
  }


  public void setSeenPopups(Object seenPopups) {
    
    
    
    this.seenPopups = seenPopups;
  }


  public UsersGetUserByUsernameResponseUserUserOption topicsUnreadWhenClosed(Boolean topicsUnreadWhenClosed) {
    
    
    
    
    this.topicsUnreadWhenClosed = topicsUnreadWhenClosed;
    return this;
  }

   /**
   * Get topicsUnreadWhenClosed
   * @return topicsUnreadWhenClosed
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getTopicsUnreadWhenClosed() {
    return topicsUnreadWhenClosed;
  }


  public void setTopicsUnreadWhenClosed(Boolean topicsUnreadWhenClosed) {
    
    
    
    this.topicsUnreadWhenClosed = topicsUnreadWhenClosed;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the UsersGetUserByUsernameResponseUserUserOption instance itself
   */
  public UsersGetUserByUsernameResponseUserUserOption putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsersGetUserByUsernameResponseUserUserOption usersGetUserByUsernameResponseUserUserOption = (UsersGetUserByUsernameResponseUserUserOption) o;
    return Objects.equals(this.userId, usersGetUserByUsernameResponseUserUserOption.userId) &&
        Objects.equals(this.mailingListMode, usersGetUserByUsernameResponseUserUserOption.mailingListMode) &&
        Objects.equals(this.mailingListModeFrequency, usersGetUserByUsernameResponseUserUserOption.mailingListModeFrequency) &&
        Objects.equals(this.emailDigests, usersGetUserByUsernameResponseUserUserOption.emailDigests) &&
        Objects.equals(this.emailLevel, usersGetUserByUsernameResponseUserUserOption.emailLevel) &&
        Objects.equals(this.emailMessagesLevel, usersGetUserByUsernameResponseUserUserOption.emailMessagesLevel) &&
        Objects.equals(this.externalLinksInNewTab, usersGetUserByUsernameResponseUserUserOption.externalLinksInNewTab) &&
        Objects.equals(this.bookmarkAutoDeletePreference, usersGetUserByUsernameResponseUserUserOption.bookmarkAutoDeletePreference) &&
        Objects.equals(this.colorSchemeId, usersGetUserByUsernameResponseUserUserOption.colorSchemeId) &&
        Objects.equals(this.darkSchemeId, usersGetUserByUsernameResponseUserUserOption.darkSchemeId) &&
        Objects.equals(this.dynamicFavicon, usersGetUserByUsernameResponseUserUserOption.dynamicFavicon) &&
        Objects.equals(this.enableQuoting, usersGetUserByUsernameResponseUserUserOption.enableQuoting) &&
        Objects.equals(this.enableDefer, usersGetUserByUsernameResponseUserUserOption.enableDefer) &&
        Objects.equals(this.digestAfterMinutes, usersGetUserByUsernameResponseUserUserOption.digestAfterMinutes) &&
        Objects.equals(this.automaticallyUnpinTopics, usersGetUserByUsernameResponseUserUserOption.automaticallyUnpinTopics) &&
        Objects.equals(this.autoTrackTopicsAfterMsecs, usersGetUserByUsernameResponseUserUserOption.autoTrackTopicsAfterMsecs) &&
        Objects.equals(this.notificationLevelWhenReplying, usersGetUserByUsernameResponseUserUserOption.notificationLevelWhenReplying) &&
        Objects.equals(this.newTopicDurationMinutes, usersGetUserByUsernameResponseUserUserOption.newTopicDurationMinutes) &&
        Objects.equals(this.emailPreviousReplies, usersGetUserByUsernameResponseUserUserOption.emailPreviousReplies) &&
        Objects.equals(this.emailInReplyTo, usersGetUserByUsernameResponseUserUserOption.emailInReplyTo) &&
        Objects.equals(this.likeNotificationFrequency, usersGetUserByUsernameResponseUserUserOption.likeNotificationFrequency) &&
        Objects.equals(this.includeTl0InDigests, usersGetUserByUsernameResponseUserUserOption.includeTl0InDigests) &&
        Objects.equals(this.themeIds, usersGetUserByUsernameResponseUserUserOption.themeIds) &&
        Objects.equals(this.themeKeySeq, usersGetUserByUsernameResponseUserUserOption.themeKeySeq) &&
        Objects.equals(this.allowPrivateMessages, usersGetUserByUsernameResponseUserUserOption.allowPrivateMessages) &&
        Objects.equals(this.enableAllowedPmUsers, usersGetUserByUsernameResponseUserUserOption.enableAllowedPmUsers) &&
        Objects.equals(this.homepageId, usersGetUserByUsernameResponseUserUserOption.homepageId) &&
        Objects.equals(this.hideProfileAndPresence, usersGetUserByUsernameResponseUserUserOption.hideProfileAndPresence) &&
        Objects.equals(this.textSize, usersGetUserByUsernameResponseUserUserOption.textSize) &&
        Objects.equals(this.textSizeSeq, usersGetUserByUsernameResponseUserUserOption.textSizeSeq) &&
        Objects.equals(this.titleCountMode, usersGetUserByUsernameResponseUserUserOption.titleCountMode) &&
        Objects.equals(this.timezone, usersGetUserByUsernameResponseUserUserOption.timezone) &&
        Objects.equals(this.skipNewUserTips, usersGetUserByUsernameResponseUserUserOption.skipNewUserTips) &&
        Objects.equals(this.defaultCalendar, usersGetUserByUsernameResponseUserUserOption.defaultCalendar) &&
        Objects.equals(this.oldestSearchLogDate, usersGetUserByUsernameResponseUserUserOption.oldestSearchLogDate) &&
        Objects.equals(this.sidebarLinkToFilteredList, usersGetUserByUsernameResponseUserUserOption.sidebarLinkToFilteredList) &&
        Objects.equals(this.sidebarShowCountOfNewItems, usersGetUserByUsernameResponseUserUserOption.sidebarShowCountOfNewItems) &&
        Objects.equals(this.watchedPrecedenceOverMuted, usersGetUserByUsernameResponseUserUserOption.watchedPrecedenceOverMuted) &&
        Objects.equals(this.seenPopups, usersGetUserByUsernameResponseUserUserOption.seenPopups) &&
        Objects.equals(this.topicsUnreadWhenClosed, usersGetUserByUsernameResponseUserUserOption.topicsUnreadWhenClosed)&&
        Objects.equals(this.additionalProperties, usersGetUserByUsernameResponseUserUserOption.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, mailingListMode, mailingListModeFrequency, emailDigests, emailLevel, emailMessagesLevel, externalLinksInNewTab, bookmarkAutoDeletePreference, colorSchemeId, darkSchemeId, dynamicFavicon, enableQuoting, enableDefer, digestAfterMinutes, automaticallyUnpinTopics, autoTrackTopicsAfterMsecs, notificationLevelWhenReplying, newTopicDurationMinutes, emailPreviousReplies, emailInReplyTo, likeNotificationFrequency, includeTl0InDigests, themeIds, themeKeySeq, allowPrivateMessages, enableAllowedPmUsers, homepageId, hideProfileAndPresence, textSize, textSizeSeq, titleCountMode, timezone, skipNewUserTips, defaultCalendar, oldestSearchLogDate, sidebarLinkToFilteredList, sidebarShowCountOfNewItems, watchedPrecedenceOverMuted, seenPopups, topicsUnreadWhenClosed, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsersGetUserByUsernameResponseUserUserOption {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    mailingListMode: ").append(toIndentedString(mailingListMode)).append("\n");
    sb.append("    mailingListModeFrequency: ").append(toIndentedString(mailingListModeFrequency)).append("\n");
    sb.append("    emailDigests: ").append(toIndentedString(emailDigests)).append("\n");
    sb.append("    emailLevel: ").append(toIndentedString(emailLevel)).append("\n");
    sb.append("    emailMessagesLevel: ").append(toIndentedString(emailMessagesLevel)).append("\n");
    sb.append("    externalLinksInNewTab: ").append(toIndentedString(externalLinksInNewTab)).append("\n");
    sb.append("    bookmarkAutoDeletePreference: ").append(toIndentedString(bookmarkAutoDeletePreference)).append("\n");
    sb.append("    colorSchemeId: ").append(toIndentedString(colorSchemeId)).append("\n");
    sb.append("    darkSchemeId: ").append(toIndentedString(darkSchemeId)).append("\n");
    sb.append("    dynamicFavicon: ").append(toIndentedString(dynamicFavicon)).append("\n");
    sb.append("    enableQuoting: ").append(toIndentedString(enableQuoting)).append("\n");
    sb.append("    enableDefer: ").append(toIndentedString(enableDefer)).append("\n");
    sb.append("    digestAfterMinutes: ").append(toIndentedString(digestAfterMinutes)).append("\n");
    sb.append("    automaticallyUnpinTopics: ").append(toIndentedString(automaticallyUnpinTopics)).append("\n");
    sb.append("    autoTrackTopicsAfterMsecs: ").append(toIndentedString(autoTrackTopicsAfterMsecs)).append("\n");
    sb.append("    notificationLevelWhenReplying: ").append(toIndentedString(notificationLevelWhenReplying)).append("\n");
    sb.append("    newTopicDurationMinutes: ").append(toIndentedString(newTopicDurationMinutes)).append("\n");
    sb.append("    emailPreviousReplies: ").append(toIndentedString(emailPreviousReplies)).append("\n");
    sb.append("    emailInReplyTo: ").append(toIndentedString(emailInReplyTo)).append("\n");
    sb.append("    likeNotificationFrequency: ").append(toIndentedString(likeNotificationFrequency)).append("\n");
    sb.append("    includeTl0InDigests: ").append(toIndentedString(includeTl0InDigests)).append("\n");
    sb.append("    themeIds: ").append(toIndentedString(themeIds)).append("\n");
    sb.append("    themeKeySeq: ").append(toIndentedString(themeKeySeq)).append("\n");
    sb.append("    allowPrivateMessages: ").append(toIndentedString(allowPrivateMessages)).append("\n");
    sb.append("    enableAllowedPmUsers: ").append(toIndentedString(enableAllowedPmUsers)).append("\n");
    sb.append("    homepageId: ").append(toIndentedString(homepageId)).append("\n");
    sb.append("    hideProfileAndPresence: ").append(toIndentedString(hideProfileAndPresence)).append("\n");
    sb.append("    textSize: ").append(toIndentedString(textSize)).append("\n");
    sb.append("    textSizeSeq: ").append(toIndentedString(textSizeSeq)).append("\n");
    sb.append("    titleCountMode: ").append(toIndentedString(titleCountMode)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    skipNewUserTips: ").append(toIndentedString(skipNewUserTips)).append("\n");
    sb.append("    defaultCalendar: ").append(toIndentedString(defaultCalendar)).append("\n");
    sb.append("    oldestSearchLogDate: ").append(toIndentedString(oldestSearchLogDate)).append("\n");
    sb.append("    sidebarLinkToFilteredList: ").append(toIndentedString(sidebarLinkToFilteredList)).append("\n");
    sb.append("    sidebarShowCountOfNewItems: ").append(toIndentedString(sidebarShowCountOfNewItems)).append("\n");
    sb.append("    watchedPrecedenceOverMuted: ").append(toIndentedString(watchedPrecedenceOverMuted)).append("\n");
    sb.append("    seenPopups: ").append(toIndentedString(seenPopups)).append("\n");
    sb.append("    topicsUnreadWhenClosed: ").append(toIndentedString(topicsUnreadWhenClosed)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("user_id");
    openapiFields.add("mailing_list_mode");
    openapiFields.add("mailing_list_mode_frequency");
    openapiFields.add("email_digests");
    openapiFields.add("email_level");
    openapiFields.add("email_messages_level");
    openapiFields.add("external_links_in_new_tab");
    openapiFields.add("bookmark_auto_delete_preference");
    openapiFields.add("color_scheme_id");
    openapiFields.add("dark_scheme_id");
    openapiFields.add("dynamic_favicon");
    openapiFields.add("enable_quoting");
    openapiFields.add("enable_defer");
    openapiFields.add("digest_after_minutes");
    openapiFields.add("automatically_unpin_topics");
    openapiFields.add("auto_track_topics_after_msecs");
    openapiFields.add("notification_level_when_replying");
    openapiFields.add("new_topic_duration_minutes");
    openapiFields.add("email_previous_replies");
    openapiFields.add("email_in_reply_to");
    openapiFields.add("like_notification_frequency");
    openapiFields.add("include_tl0_in_digests");
    openapiFields.add("theme_ids");
    openapiFields.add("theme_key_seq");
    openapiFields.add("allow_private_messages");
    openapiFields.add("enable_allowed_pm_users");
    openapiFields.add("homepage_id");
    openapiFields.add("hide_profile_and_presence");
    openapiFields.add("text_size");
    openapiFields.add("text_size_seq");
    openapiFields.add("title_count_mode");
    openapiFields.add("timezone");
    openapiFields.add("skip_new_user_tips");
    openapiFields.add("default_calendar");
    openapiFields.add("oldest_search_log_date");
    openapiFields.add("sidebar_link_to_filtered_list");
    openapiFields.add("sidebar_show_count_of_new_items");
    openapiFields.add("watched_precedence_over_muted");
    openapiFields.add("seen_popups");
    openapiFields.add("topics_unread_when_closed");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("user_id");
    openapiRequiredFields.add("mailing_list_mode");
    openapiRequiredFields.add("mailing_list_mode_frequency");
    openapiRequiredFields.add("email_digests");
    openapiRequiredFields.add("email_level");
    openapiRequiredFields.add("email_messages_level");
    openapiRequiredFields.add("external_links_in_new_tab");
    openapiRequiredFields.add("color_scheme_id");
    openapiRequiredFields.add("dark_scheme_id");
    openapiRequiredFields.add("dynamic_favicon");
    openapiRequiredFields.add("enable_quoting");
    openapiRequiredFields.add("enable_defer");
    openapiRequiredFields.add("digest_after_minutes");
    openapiRequiredFields.add("automatically_unpin_topics");
    openapiRequiredFields.add("auto_track_topics_after_msecs");
    openapiRequiredFields.add("notification_level_when_replying");
    openapiRequiredFields.add("new_topic_duration_minutes");
    openapiRequiredFields.add("email_previous_replies");
    openapiRequiredFields.add("email_in_reply_to");
    openapiRequiredFields.add("like_notification_frequency");
    openapiRequiredFields.add("include_tl0_in_digests");
    openapiRequiredFields.add("theme_ids");
    openapiRequiredFields.add("theme_key_seq");
    openapiRequiredFields.add("allow_private_messages");
    openapiRequiredFields.add("enable_allowed_pm_users");
    openapiRequiredFields.add("homepage_id");
    openapiRequiredFields.add("hide_profile_and_presence");
    openapiRequiredFields.add("text_size");
    openapiRequiredFields.add("text_size_seq");
    openapiRequiredFields.add("title_count_mode");
    openapiRequiredFields.add("timezone");
    openapiRequiredFields.add("skip_new_user_tips");
    openapiRequiredFields.add("topics_unread_when_closed");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UsersGetUserByUsernameResponseUserUserOption
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UsersGetUserByUsernameResponseUserUserOption.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UsersGetUserByUsernameResponseUserUserOption is not found in the empty JSON string", UsersGetUserByUsernameResponseUserUserOption.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UsersGetUserByUsernameResponseUserUserOption.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // ensure the required json array is present
      if (jsonObj.get("theme_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("theme_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `theme_ids` to be an array in the JSON string but got `%s`", jsonObj.get("theme_ids").toString()));
      }
      if (!jsonObj.get("text_size").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text_size` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text_size").toString()));
      }
      if (!jsonObj.get("title_count_mode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title_count_mode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title_count_mode").toString()));
      }
      if ((jsonObj.get("default_calendar") != null && !jsonObj.get("default_calendar").isJsonNull()) && !jsonObj.get("default_calendar").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_calendar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_calendar").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UsersGetUserByUsernameResponseUserUserOption.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UsersGetUserByUsernameResponseUserUserOption' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UsersGetUserByUsernameResponseUserUserOption> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UsersGetUserByUsernameResponseUserUserOption.class));

       return (TypeAdapter<T>) new TypeAdapter<UsersGetUserByUsernameResponseUserUserOption>() {
           @Override
           public void write(JsonWriter out, UsersGetUserByUsernameResponseUserUserOption value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public UsersGetUserByUsernameResponseUserUserOption read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             UsersGetUserByUsernameResponseUserUserOption instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UsersGetUserByUsernameResponseUserUserOption given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UsersGetUserByUsernameResponseUserUserOption
  * @throws IOException if the JSON string is invalid with respect to UsersGetUserByUsernameResponseUserUserOption
  */
  public static UsersGetUserByUsernameResponseUserUserOption fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UsersGetUserByUsernameResponseUserUserOption.class);
  }

 /**
  * Convert an instance of UsersGetUserByUsernameResponseUserUserOption to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

