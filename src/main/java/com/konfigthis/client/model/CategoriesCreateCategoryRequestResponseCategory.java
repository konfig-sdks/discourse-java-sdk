/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CategoriesCreateCategoryRequestResponseCategoryGroupPermissionsInner;
import com.konfigthis.client.model.CategoriesCreateCategoryRequestResponseCategoryRequiredTagGroupsInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CategoriesCreateCategoryRequestResponseCategory
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CategoriesCreateCategoryRequestResponseCategory {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private Object description = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_COLOR = "color";
  @SerializedName(SERIALIZED_NAME_COLOR)
  private String color;

  public static final String SERIALIZED_NAME_TEXT_COLOR = "text_color";
  @SerializedName(SERIALIZED_NAME_TEXT_COLOR)
  private String textColor;

  public static final String SERIALIZED_NAME_SLUG = "slug";
  @SerializedName(SERIALIZED_NAME_SLUG)
  private String slug;

  public static final String SERIALIZED_NAME_TOPIC_COUNT = "topic_count";
  @SerializedName(SERIALIZED_NAME_TOPIC_COUNT)
  private Integer topicCount;

  public static final String SERIALIZED_NAME_POST_COUNT = "post_count";
  @SerializedName(SERIALIZED_NAME_POST_COUNT)
  private Integer postCount;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private Integer position;

  public static final String SERIALIZED_NAME_DESCRIPTION_TEXT = "description_text";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_TEXT)
  private Object descriptionText = null;

  public static final String SERIALIZED_NAME_DESCRIPTION_EXCERPT = "description_excerpt";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_EXCERPT)
  private Object descriptionExcerpt = null;

  public static final String SERIALIZED_NAME_TOPIC_URL = "topic_url";
  @SerializedName(SERIALIZED_NAME_TOPIC_URL)
  private Object topicUrl = null;

  public static final String SERIALIZED_NAME_READ_RESTRICTED = "read_restricted";
  @SerializedName(SERIALIZED_NAME_READ_RESTRICTED)
  private Boolean readRestricted;

  public static final String SERIALIZED_NAME_PERMISSION = "permission";
  @SerializedName(SERIALIZED_NAME_PERMISSION)
  private Object permission = null;

  public static final String SERIALIZED_NAME_NOTIFICATION_LEVEL = "notification_level";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_LEVEL)
  private Integer notificationLevel;

  public static final String SERIALIZED_NAME_CAN_EDIT = "can_edit";
  @SerializedName(SERIALIZED_NAME_CAN_EDIT)
  private Boolean canEdit;

  public static final String SERIALIZED_NAME_TOPIC_TEMPLATE = "topic_template";
  @SerializedName(SERIALIZED_NAME_TOPIC_TEMPLATE)
  private Object topicTemplate = null;

  public static final String SERIALIZED_NAME_FORM_TEMPLATE_IDS = "form_template_ids";
  @SerializedName(SERIALIZED_NAME_FORM_TEMPLATE_IDS)
  private List<Object> formTemplateIds = null;

  public static final String SERIALIZED_NAME_HAS_CHILDREN = "has_children";
  @SerializedName(SERIALIZED_NAME_HAS_CHILDREN)
  private Object hasChildren = null;

  public static final String SERIALIZED_NAME_SORT_ORDER = "sort_order";
  @SerializedName(SERIALIZED_NAME_SORT_ORDER)
  private Object sortOrder = null;

  public static final String SERIALIZED_NAME_SORT_ASCENDING = "sort_ascending";
  @SerializedName(SERIALIZED_NAME_SORT_ASCENDING)
  private Object sortAscending = null;

  public static final String SERIALIZED_NAME_SHOW_SUBCATEGORY_LIST = "show_subcategory_list";
  @SerializedName(SERIALIZED_NAME_SHOW_SUBCATEGORY_LIST)
  private Boolean showSubcategoryList;

  public static final String SERIALIZED_NAME_NUM_FEATURED_TOPICS = "num_featured_topics";
  @SerializedName(SERIALIZED_NAME_NUM_FEATURED_TOPICS)
  private Integer numFeaturedTopics;

  public static final String SERIALIZED_NAME_DEFAULT_VIEW = "default_view";
  @SerializedName(SERIALIZED_NAME_DEFAULT_VIEW)
  private Object defaultView = null;

  public static final String SERIALIZED_NAME_SUBCATEGORY_LIST_STYLE = "subcategory_list_style";
  @SerializedName(SERIALIZED_NAME_SUBCATEGORY_LIST_STYLE)
  private String subcategoryListStyle;

  public static final String SERIALIZED_NAME_DEFAULT_TOP_PERIOD = "default_top_period";
  @SerializedName(SERIALIZED_NAME_DEFAULT_TOP_PERIOD)
  private String defaultTopPeriod;

  public static final String SERIALIZED_NAME_DEFAULT_LIST_FILTER = "default_list_filter";
  @SerializedName(SERIALIZED_NAME_DEFAULT_LIST_FILTER)
  private String defaultListFilter;

  public static final String SERIALIZED_NAME_MINIMUM_REQUIRED_TAGS = "minimum_required_tags";
  @SerializedName(SERIALIZED_NAME_MINIMUM_REQUIRED_TAGS)
  private Integer minimumRequiredTags;

  public static final String SERIALIZED_NAME_NAVIGATE_TO_FIRST_POST_AFTER_READ = "navigate_to_first_post_after_read";
  @SerializedName(SERIALIZED_NAME_NAVIGATE_TO_FIRST_POST_AFTER_READ)
  private Boolean navigateToFirstPostAfterRead;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "custom_fields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Object customFields;

  public static final String SERIALIZED_NAME_ALLOWED_TAGS = "allowed_tags";
  @SerializedName(SERIALIZED_NAME_ALLOWED_TAGS)
  private List<Object> allowedTags = null;

  public static final String SERIALIZED_NAME_ALLOWED_TAG_GROUPS = "allowed_tag_groups";
  @SerializedName(SERIALIZED_NAME_ALLOWED_TAG_GROUPS)
  private List<Object> allowedTagGroups = null;

  public static final String SERIALIZED_NAME_ALLOW_GLOBAL_TAGS = "allow_global_tags";
  @SerializedName(SERIALIZED_NAME_ALLOW_GLOBAL_TAGS)
  private Boolean allowGlobalTags;

  public static final String SERIALIZED_NAME_REQUIRED_TAG_GROUPS = "required_tag_groups";
  @SerializedName(SERIALIZED_NAME_REQUIRED_TAG_GROUPS)
  private List<CategoriesCreateCategoryRequestResponseCategoryRequiredTagGroupsInner> requiredTagGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_CATEGORY_SETTING = "category_setting";
  @SerializedName(SERIALIZED_NAME_CATEGORY_SETTING)
  private Object categorySetting = null;

  public static final String SERIALIZED_NAME_READ_ONLY_BANNER = "read_only_banner";
  @SerializedName(SERIALIZED_NAME_READ_ONLY_BANNER)
  private Object readOnlyBanner = null;

  public static final String SERIALIZED_NAME_AVAILABLE_GROUPS = "available_groups";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_GROUPS)
  private List<Object> availableGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_AUTO_CLOSE_HOURS = "auto_close_hours";
  @SerializedName(SERIALIZED_NAME_AUTO_CLOSE_HOURS)
  private Object autoCloseHours = null;

  public static final String SERIALIZED_NAME_AUTO_CLOSE_BASED_ON_LAST_POST = "auto_close_based_on_last_post";
  @SerializedName(SERIALIZED_NAME_AUTO_CLOSE_BASED_ON_LAST_POST)
  private Boolean autoCloseBasedOnLastPost;

  public static final String SERIALIZED_NAME_ALLOW_UNLIMITED_OWNER_EDITS_ON_FIRST_POST = "allow_unlimited_owner_edits_on_first_post";
  @SerializedName(SERIALIZED_NAME_ALLOW_UNLIMITED_OWNER_EDITS_ON_FIRST_POST)
  private Boolean allowUnlimitedOwnerEditsOnFirstPost;

  public static final String SERIALIZED_NAME_DEFAULT_SLOW_MODE_SECONDS = "default_slow_mode_seconds";
  @SerializedName(SERIALIZED_NAME_DEFAULT_SLOW_MODE_SECONDS)
  private Object defaultSlowModeSeconds = null;

  public static final String SERIALIZED_NAME_GROUP_PERMISSIONS = "group_permissions";
  @SerializedName(SERIALIZED_NAME_GROUP_PERMISSIONS)
  private List<CategoriesCreateCategoryRequestResponseCategoryGroupPermissionsInner> groupPermissions = new ArrayList<>();

  public static final String SERIALIZED_NAME_EMAIL_IN = "email_in";
  @SerializedName(SERIALIZED_NAME_EMAIL_IN)
  private Object emailIn = null;

  public static final String SERIALIZED_NAME_EMAIL_IN_ALLOW_STRANGERS = "email_in_allow_strangers";
  @SerializedName(SERIALIZED_NAME_EMAIL_IN_ALLOW_STRANGERS)
  private Boolean emailInAllowStrangers;

  public static final String SERIALIZED_NAME_MAILINGLIST_MIRROR = "mailinglist_mirror";
  @SerializedName(SERIALIZED_NAME_MAILINGLIST_MIRROR)
  private Boolean mailinglistMirror;

  public static final String SERIALIZED_NAME_ALL_TOPICS_WIKI = "all_topics_wiki";
  @SerializedName(SERIALIZED_NAME_ALL_TOPICS_WIKI)
  private Boolean allTopicsWiki;

  public static final String SERIALIZED_NAME_CAN_DELETE = "can_delete";
  @SerializedName(SERIALIZED_NAME_CAN_DELETE)
  private Boolean canDelete;

  public static final String SERIALIZED_NAME_ALLOW_BADGES = "allow_badges";
  @SerializedName(SERIALIZED_NAME_ALLOW_BADGES)
  private Boolean allowBadges;

  public static final String SERIALIZED_NAME_TOPIC_FEATURED_LINK_ALLOWED = "topic_featured_link_allowed";
  @SerializedName(SERIALIZED_NAME_TOPIC_FEATURED_LINK_ALLOWED)
  private Boolean topicFeaturedLinkAllowed;

  public static final String SERIALIZED_NAME_SEARCH_PRIORITY = "search_priority";
  @SerializedName(SERIALIZED_NAME_SEARCH_PRIORITY)
  private Integer searchPriority;

  public static final String SERIALIZED_NAME_UPLOADED_LOGO = "uploaded_logo";
  @SerializedName(SERIALIZED_NAME_UPLOADED_LOGO)
  private Object uploadedLogo = null;

  public static final String SERIALIZED_NAME_UPLOADED_LOGO_DARK = "uploaded_logo_dark";
  @SerializedName(SERIALIZED_NAME_UPLOADED_LOGO_DARK)
  private Object uploadedLogoDark = null;

  public static final String SERIALIZED_NAME_UPLOADED_BACKGROUND = "uploaded_background";
  @SerializedName(SERIALIZED_NAME_UPLOADED_BACKGROUND)
  private Object uploadedBackground = null;

  public static final String SERIALIZED_NAME_UPLOADED_BACKGROUND_DARK = "uploaded_background_dark";
  @SerializedName(SERIALIZED_NAME_UPLOADED_BACKGROUND_DARK)
  private Object uploadedBackgroundDark = null;

  public CategoriesCreateCategoryRequestResponseCategory() {
  }

  public CategoriesCreateCategoryRequestResponseCategory description(Object description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getDescription() {
    return description;
  }


  public void setDescription(Object description) {
    
    
    
    this.description = description;
  }


  public CategoriesCreateCategoryRequestResponseCategory id(Integer id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    
    
    
    this.id = id;
  }


  public CategoriesCreateCategoryRequestResponseCategory name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public CategoriesCreateCategoryRequestResponseCategory color(String color) {
    
    
    
    
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getColor() {
    return color;
  }


  public void setColor(String color) {
    
    
    
    this.color = color;
  }


  public CategoriesCreateCategoryRequestResponseCategory textColor(String textColor) {
    
    
    
    
    this.textColor = textColor;
    return this;
  }

   /**
   * Get textColor
   * @return textColor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getTextColor() {
    return textColor;
  }


  public void setTextColor(String textColor) {
    
    
    
    this.textColor = textColor;
  }


  public CategoriesCreateCategoryRequestResponseCategory slug(String slug) {
    
    
    
    
    this.slug = slug;
    return this;
  }

   /**
   * Get slug
   * @return slug
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getSlug() {
    return slug;
  }


  public void setSlug(String slug) {
    
    
    
    this.slug = slug;
  }


  public CategoriesCreateCategoryRequestResponseCategory topicCount(Integer topicCount) {
    
    
    
    
    this.topicCount = topicCount;
    return this;
  }

   /**
   * Get topicCount
   * @return topicCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getTopicCount() {
    return topicCount;
  }


  public void setTopicCount(Integer topicCount) {
    
    
    
    this.topicCount = topicCount;
  }


  public CategoriesCreateCategoryRequestResponseCategory postCount(Integer postCount) {
    
    
    
    
    this.postCount = postCount;
    return this;
  }

   /**
   * Get postCount
   * @return postCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getPostCount() {
    return postCount;
  }


  public void setPostCount(Integer postCount) {
    
    
    
    this.postCount = postCount;
  }


  public CategoriesCreateCategoryRequestResponseCategory position(Integer position) {
    
    
    
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getPosition() {
    return position;
  }


  public void setPosition(Integer position) {
    
    
    
    this.position = position;
  }


  public CategoriesCreateCategoryRequestResponseCategory descriptionText(Object descriptionText) {
    
    
    
    
    this.descriptionText = descriptionText;
    return this;
  }

   /**
   * Get descriptionText
   * @return descriptionText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getDescriptionText() {
    return descriptionText;
  }


  public void setDescriptionText(Object descriptionText) {
    
    
    
    this.descriptionText = descriptionText;
  }


  public CategoriesCreateCategoryRequestResponseCategory descriptionExcerpt(Object descriptionExcerpt) {
    
    
    
    
    this.descriptionExcerpt = descriptionExcerpt;
    return this;
  }

   /**
   * Get descriptionExcerpt
   * @return descriptionExcerpt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getDescriptionExcerpt() {
    return descriptionExcerpt;
  }


  public void setDescriptionExcerpt(Object descriptionExcerpt) {
    
    
    
    this.descriptionExcerpt = descriptionExcerpt;
  }


  public CategoriesCreateCategoryRequestResponseCategory topicUrl(Object topicUrl) {
    
    
    
    
    this.topicUrl = topicUrl;
    return this;
  }

   /**
   * Get topicUrl
   * @return topicUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getTopicUrl() {
    return topicUrl;
  }


  public void setTopicUrl(Object topicUrl) {
    
    
    
    this.topicUrl = topicUrl;
  }


  public CategoriesCreateCategoryRequestResponseCategory readRestricted(Boolean readRestricted) {
    
    
    
    
    this.readRestricted = readRestricted;
    return this;
  }

   /**
   * Get readRestricted
   * @return readRestricted
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getReadRestricted() {
    return readRestricted;
  }


  public void setReadRestricted(Boolean readRestricted) {
    
    
    
    this.readRestricted = readRestricted;
  }


  public CategoriesCreateCategoryRequestResponseCategory permission(Object permission) {
    
    
    
    
    this.permission = permission;
    return this;
  }

   /**
   * Get permission
   * @return permission
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getPermission() {
    return permission;
  }


  public void setPermission(Object permission) {
    
    
    
    this.permission = permission;
  }


  public CategoriesCreateCategoryRequestResponseCategory notificationLevel(Integer notificationLevel) {
    
    
    
    
    this.notificationLevel = notificationLevel;
    return this;
  }

   /**
   * Get notificationLevel
   * @return notificationLevel
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getNotificationLevel() {
    return notificationLevel;
  }


  public void setNotificationLevel(Integer notificationLevel) {
    
    
    
    this.notificationLevel = notificationLevel;
  }


  public CategoriesCreateCategoryRequestResponseCategory canEdit(Boolean canEdit) {
    
    
    
    
    this.canEdit = canEdit;
    return this;
  }

   /**
   * Get canEdit
   * @return canEdit
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanEdit() {
    return canEdit;
  }


  public void setCanEdit(Boolean canEdit) {
    
    
    
    this.canEdit = canEdit;
  }


  public CategoriesCreateCategoryRequestResponseCategory topicTemplate(Object topicTemplate) {
    
    
    
    
    this.topicTemplate = topicTemplate;
    return this;
  }

   /**
   * Get topicTemplate
   * @return topicTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getTopicTemplate() {
    return topicTemplate;
  }


  public void setTopicTemplate(Object topicTemplate) {
    
    
    
    this.topicTemplate = topicTemplate;
  }


  public CategoriesCreateCategoryRequestResponseCategory formTemplateIds(List<Object> formTemplateIds) {
    
    
    
    
    this.formTemplateIds = formTemplateIds;
    return this;
  }

  public CategoriesCreateCategoryRequestResponseCategory addFormTemplateIdsItem(Object formTemplateIdsItem) {
    if (this.formTemplateIds == null) {
      this.formTemplateIds = new ArrayList<>();
    }
    this.formTemplateIds.add(formTemplateIdsItem);
    return this;
  }

   /**
   * Get formTemplateIds
   * @return formTemplateIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getFormTemplateIds() {
    return formTemplateIds;
  }


  public void setFormTemplateIds(List<Object> formTemplateIds) {
    
    
    
    this.formTemplateIds = formTemplateIds;
  }


  public CategoriesCreateCategoryRequestResponseCategory hasChildren(Object hasChildren) {
    
    
    
    
    this.hasChildren = hasChildren;
    return this;
  }

   /**
   * Get hasChildren
   * @return hasChildren
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getHasChildren() {
    return hasChildren;
  }


  public void setHasChildren(Object hasChildren) {
    
    
    
    this.hasChildren = hasChildren;
  }


  public CategoriesCreateCategoryRequestResponseCategory sortOrder(Object sortOrder) {
    
    
    
    
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Get sortOrder
   * @return sortOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getSortOrder() {
    return sortOrder;
  }


  public void setSortOrder(Object sortOrder) {
    
    
    
    this.sortOrder = sortOrder;
  }


  public CategoriesCreateCategoryRequestResponseCategory sortAscending(Object sortAscending) {
    
    
    
    
    this.sortAscending = sortAscending;
    return this;
  }

   /**
   * Get sortAscending
   * @return sortAscending
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getSortAscending() {
    return sortAscending;
  }


  public void setSortAscending(Object sortAscending) {
    
    
    
    this.sortAscending = sortAscending;
  }


  public CategoriesCreateCategoryRequestResponseCategory showSubcategoryList(Boolean showSubcategoryList) {
    
    
    
    
    this.showSubcategoryList = showSubcategoryList;
    return this;
  }

   /**
   * Get showSubcategoryList
   * @return showSubcategoryList
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getShowSubcategoryList() {
    return showSubcategoryList;
  }


  public void setShowSubcategoryList(Boolean showSubcategoryList) {
    
    
    
    this.showSubcategoryList = showSubcategoryList;
  }


  public CategoriesCreateCategoryRequestResponseCategory numFeaturedTopics(Integer numFeaturedTopics) {
    
    
    
    
    this.numFeaturedTopics = numFeaturedTopics;
    return this;
  }

   /**
   * Get numFeaturedTopics
   * @return numFeaturedTopics
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getNumFeaturedTopics() {
    return numFeaturedTopics;
  }


  public void setNumFeaturedTopics(Integer numFeaturedTopics) {
    
    
    
    this.numFeaturedTopics = numFeaturedTopics;
  }


  public CategoriesCreateCategoryRequestResponseCategory defaultView(Object defaultView) {
    
    
    
    
    this.defaultView = defaultView;
    return this;
  }

   /**
   * Get defaultView
   * @return defaultView
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getDefaultView() {
    return defaultView;
  }


  public void setDefaultView(Object defaultView) {
    
    
    
    this.defaultView = defaultView;
  }


  public CategoriesCreateCategoryRequestResponseCategory subcategoryListStyle(String subcategoryListStyle) {
    
    
    
    
    this.subcategoryListStyle = subcategoryListStyle;
    return this;
  }

   /**
   * Get subcategoryListStyle
   * @return subcategoryListStyle
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getSubcategoryListStyle() {
    return subcategoryListStyle;
  }


  public void setSubcategoryListStyle(String subcategoryListStyle) {
    
    
    
    this.subcategoryListStyle = subcategoryListStyle;
  }


  public CategoriesCreateCategoryRequestResponseCategory defaultTopPeriod(String defaultTopPeriod) {
    
    
    
    
    this.defaultTopPeriod = defaultTopPeriod;
    return this;
  }

   /**
   * Get defaultTopPeriod
   * @return defaultTopPeriod
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDefaultTopPeriod() {
    return defaultTopPeriod;
  }


  public void setDefaultTopPeriod(String defaultTopPeriod) {
    
    
    
    this.defaultTopPeriod = defaultTopPeriod;
  }


  public CategoriesCreateCategoryRequestResponseCategory defaultListFilter(String defaultListFilter) {
    
    
    
    
    this.defaultListFilter = defaultListFilter;
    return this;
  }

   /**
   * Get defaultListFilter
   * @return defaultListFilter
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDefaultListFilter() {
    return defaultListFilter;
  }


  public void setDefaultListFilter(String defaultListFilter) {
    
    
    
    this.defaultListFilter = defaultListFilter;
  }


  public CategoriesCreateCategoryRequestResponseCategory minimumRequiredTags(Integer minimumRequiredTags) {
    
    
    
    
    this.minimumRequiredTags = minimumRequiredTags;
    return this;
  }

   /**
   * Get minimumRequiredTags
   * @return minimumRequiredTags
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getMinimumRequiredTags() {
    return minimumRequiredTags;
  }


  public void setMinimumRequiredTags(Integer minimumRequiredTags) {
    
    
    
    this.minimumRequiredTags = minimumRequiredTags;
  }


  public CategoriesCreateCategoryRequestResponseCategory navigateToFirstPostAfterRead(Boolean navigateToFirstPostAfterRead) {
    
    
    
    
    this.navigateToFirstPostAfterRead = navigateToFirstPostAfterRead;
    return this;
  }

   /**
   * Get navigateToFirstPostAfterRead
   * @return navigateToFirstPostAfterRead
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getNavigateToFirstPostAfterRead() {
    return navigateToFirstPostAfterRead;
  }


  public void setNavigateToFirstPostAfterRead(Boolean navigateToFirstPostAfterRead) {
    
    
    
    this.navigateToFirstPostAfterRead = navigateToFirstPostAfterRead;
  }


  public CategoriesCreateCategoryRequestResponseCategory customFields(Object customFields) {
    
    
    
    
    this.customFields = customFields;
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Object getCustomFields() {
    return customFields;
  }


  public void setCustomFields(Object customFields) {
    
    
    
    this.customFields = customFields;
  }


  public CategoriesCreateCategoryRequestResponseCategory allowedTags(List<Object> allowedTags) {
    
    
    
    
    this.allowedTags = allowedTags;
    return this;
  }

  public CategoriesCreateCategoryRequestResponseCategory addAllowedTagsItem(Object allowedTagsItem) {
    if (this.allowedTags == null) {
      this.allowedTags = new ArrayList<>();
    }
    this.allowedTags.add(allowedTagsItem);
    return this;
  }

   /**
   * Get allowedTags
   * @return allowedTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getAllowedTags() {
    return allowedTags;
  }


  public void setAllowedTags(List<Object> allowedTags) {
    
    
    
    this.allowedTags = allowedTags;
  }


  public CategoriesCreateCategoryRequestResponseCategory allowedTagGroups(List<Object> allowedTagGroups) {
    
    
    
    
    this.allowedTagGroups = allowedTagGroups;
    return this;
  }

  public CategoriesCreateCategoryRequestResponseCategory addAllowedTagGroupsItem(Object allowedTagGroupsItem) {
    if (this.allowedTagGroups == null) {
      this.allowedTagGroups = new ArrayList<>();
    }
    this.allowedTagGroups.add(allowedTagGroupsItem);
    return this;
  }

   /**
   * Get allowedTagGroups
   * @return allowedTagGroups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getAllowedTagGroups() {
    return allowedTagGroups;
  }


  public void setAllowedTagGroups(List<Object> allowedTagGroups) {
    
    
    
    this.allowedTagGroups = allowedTagGroups;
  }


  public CategoriesCreateCategoryRequestResponseCategory allowGlobalTags(Boolean allowGlobalTags) {
    
    
    
    
    this.allowGlobalTags = allowGlobalTags;
    return this;
  }

   /**
   * Get allowGlobalTags
   * @return allowGlobalTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowGlobalTags() {
    return allowGlobalTags;
  }


  public void setAllowGlobalTags(Boolean allowGlobalTags) {
    
    
    
    this.allowGlobalTags = allowGlobalTags;
  }


  public CategoriesCreateCategoryRequestResponseCategory requiredTagGroups(List<CategoriesCreateCategoryRequestResponseCategoryRequiredTagGroupsInner> requiredTagGroups) {
    
    
    
    
    this.requiredTagGroups = requiredTagGroups;
    return this;
  }

  public CategoriesCreateCategoryRequestResponseCategory addRequiredTagGroupsItem(CategoriesCreateCategoryRequestResponseCategoryRequiredTagGroupsInner requiredTagGroupsItem) {
    this.requiredTagGroups.add(requiredTagGroupsItem);
    return this;
  }

   /**
   * Get requiredTagGroups
   * @return requiredTagGroups
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<CategoriesCreateCategoryRequestResponseCategoryRequiredTagGroupsInner> getRequiredTagGroups() {
    return requiredTagGroups;
  }


  public void setRequiredTagGroups(List<CategoriesCreateCategoryRequestResponseCategoryRequiredTagGroupsInner> requiredTagGroups) {
    
    
    
    this.requiredTagGroups = requiredTagGroups;
  }


  public CategoriesCreateCategoryRequestResponseCategory categorySetting(Object categorySetting) {
    
    
    
    
    this.categorySetting = categorySetting;
    return this;
  }

   /**
   * Get categorySetting
   * @return categorySetting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getCategorySetting() {
    return categorySetting;
  }


  public void setCategorySetting(Object categorySetting) {
    
    
    
    this.categorySetting = categorySetting;
  }


  public CategoriesCreateCategoryRequestResponseCategory readOnlyBanner(Object readOnlyBanner) {
    
    
    
    
    this.readOnlyBanner = readOnlyBanner;
    return this;
  }

   /**
   * Get readOnlyBanner
   * @return readOnlyBanner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getReadOnlyBanner() {
    return readOnlyBanner;
  }


  public void setReadOnlyBanner(Object readOnlyBanner) {
    
    
    
    this.readOnlyBanner = readOnlyBanner;
  }


  public CategoriesCreateCategoryRequestResponseCategory availableGroups(List<Object> availableGroups) {
    
    
    
    
    this.availableGroups = availableGroups;
    return this;
  }

  public CategoriesCreateCategoryRequestResponseCategory addAvailableGroupsItem(Object availableGroupsItem) {
    this.availableGroups.add(availableGroupsItem);
    return this;
  }

   /**
   * Get availableGroups
   * @return availableGroups
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getAvailableGroups() {
    return availableGroups;
  }


  public void setAvailableGroups(List<Object> availableGroups) {
    
    
    
    this.availableGroups = availableGroups;
  }


  public CategoriesCreateCategoryRequestResponseCategory autoCloseHours(Object autoCloseHours) {
    
    
    
    
    this.autoCloseHours = autoCloseHours;
    return this;
  }

   /**
   * Get autoCloseHours
   * @return autoCloseHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getAutoCloseHours() {
    return autoCloseHours;
  }


  public void setAutoCloseHours(Object autoCloseHours) {
    
    
    
    this.autoCloseHours = autoCloseHours;
  }


  public CategoriesCreateCategoryRequestResponseCategory autoCloseBasedOnLastPost(Boolean autoCloseBasedOnLastPost) {
    
    
    
    
    this.autoCloseBasedOnLastPost = autoCloseBasedOnLastPost;
    return this;
  }

   /**
   * Get autoCloseBasedOnLastPost
   * @return autoCloseBasedOnLastPost
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getAutoCloseBasedOnLastPost() {
    return autoCloseBasedOnLastPost;
  }


  public void setAutoCloseBasedOnLastPost(Boolean autoCloseBasedOnLastPost) {
    
    
    
    this.autoCloseBasedOnLastPost = autoCloseBasedOnLastPost;
  }


  public CategoriesCreateCategoryRequestResponseCategory allowUnlimitedOwnerEditsOnFirstPost(Boolean allowUnlimitedOwnerEditsOnFirstPost) {
    
    
    
    
    this.allowUnlimitedOwnerEditsOnFirstPost = allowUnlimitedOwnerEditsOnFirstPost;
    return this;
  }

   /**
   * Get allowUnlimitedOwnerEditsOnFirstPost
   * @return allowUnlimitedOwnerEditsOnFirstPost
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getAllowUnlimitedOwnerEditsOnFirstPost() {
    return allowUnlimitedOwnerEditsOnFirstPost;
  }


  public void setAllowUnlimitedOwnerEditsOnFirstPost(Boolean allowUnlimitedOwnerEditsOnFirstPost) {
    
    
    
    this.allowUnlimitedOwnerEditsOnFirstPost = allowUnlimitedOwnerEditsOnFirstPost;
  }


  public CategoriesCreateCategoryRequestResponseCategory defaultSlowModeSeconds(Object defaultSlowModeSeconds) {
    
    
    
    
    this.defaultSlowModeSeconds = defaultSlowModeSeconds;
    return this;
  }

   /**
   * Get defaultSlowModeSeconds
   * @return defaultSlowModeSeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getDefaultSlowModeSeconds() {
    return defaultSlowModeSeconds;
  }


  public void setDefaultSlowModeSeconds(Object defaultSlowModeSeconds) {
    
    
    
    this.defaultSlowModeSeconds = defaultSlowModeSeconds;
  }


  public CategoriesCreateCategoryRequestResponseCategory groupPermissions(List<CategoriesCreateCategoryRequestResponseCategoryGroupPermissionsInner> groupPermissions) {
    
    
    
    
    this.groupPermissions = groupPermissions;
    return this;
  }

  public CategoriesCreateCategoryRequestResponseCategory addGroupPermissionsItem(CategoriesCreateCategoryRequestResponseCategoryGroupPermissionsInner groupPermissionsItem) {
    this.groupPermissions.add(groupPermissionsItem);
    return this;
  }

   /**
   * Get groupPermissions
   * @return groupPermissions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<CategoriesCreateCategoryRequestResponseCategoryGroupPermissionsInner> getGroupPermissions() {
    return groupPermissions;
  }


  public void setGroupPermissions(List<CategoriesCreateCategoryRequestResponseCategoryGroupPermissionsInner> groupPermissions) {
    
    
    
    this.groupPermissions = groupPermissions;
  }


  public CategoriesCreateCategoryRequestResponseCategory emailIn(Object emailIn) {
    
    
    
    
    this.emailIn = emailIn;
    return this;
  }

   /**
   * Get emailIn
   * @return emailIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getEmailIn() {
    return emailIn;
  }


  public void setEmailIn(Object emailIn) {
    
    
    
    this.emailIn = emailIn;
  }


  public CategoriesCreateCategoryRequestResponseCategory emailInAllowStrangers(Boolean emailInAllowStrangers) {
    
    
    
    
    this.emailInAllowStrangers = emailInAllowStrangers;
    return this;
  }

   /**
   * Get emailInAllowStrangers
   * @return emailInAllowStrangers
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getEmailInAllowStrangers() {
    return emailInAllowStrangers;
  }


  public void setEmailInAllowStrangers(Boolean emailInAllowStrangers) {
    
    
    
    this.emailInAllowStrangers = emailInAllowStrangers;
  }


  public CategoriesCreateCategoryRequestResponseCategory mailinglistMirror(Boolean mailinglistMirror) {
    
    
    
    
    this.mailinglistMirror = mailinglistMirror;
    return this;
  }

   /**
   * Get mailinglistMirror
   * @return mailinglistMirror
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getMailinglistMirror() {
    return mailinglistMirror;
  }


  public void setMailinglistMirror(Boolean mailinglistMirror) {
    
    
    
    this.mailinglistMirror = mailinglistMirror;
  }


  public CategoriesCreateCategoryRequestResponseCategory allTopicsWiki(Boolean allTopicsWiki) {
    
    
    
    
    this.allTopicsWiki = allTopicsWiki;
    return this;
  }

   /**
   * Get allTopicsWiki
   * @return allTopicsWiki
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getAllTopicsWiki() {
    return allTopicsWiki;
  }


  public void setAllTopicsWiki(Boolean allTopicsWiki) {
    
    
    
    this.allTopicsWiki = allTopicsWiki;
  }


  public CategoriesCreateCategoryRequestResponseCategory canDelete(Boolean canDelete) {
    
    
    
    
    this.canDelete = canDelete;
    return this;
  }

   /**
   * Get canDelete
   * @return canDelete
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanDelete() {
    return canDelete;
  }


  public void setCanDelete(Boolean canDelete) {
    
    
    
    this.canDelete = canDelete;
  }


  public CategoriesCreateCategoryRequestResponseCategory allowBadges(Boolean allowBadges) {
    
    
    
    
    this.allowBadges = allowBadges;
    return this;
  }

   /**
   * Get allowBadges
   * @return allowBadges
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getAllowBadges() {
    return allowBadges;
  }


  public void setAllowBadges(Boolean allowBadges) {
    
    
    
    this.allowBadges = allowBadges;
  }


  public CategoriesCreateCategoryRequestResponseCategory topicFeaturedLinkAllowed(Boolean topicFeaturedLinkAllowed) {
    
    
    
    
    this.topicFeaturedLinkAllowed = topicFeaturedLinkAllowed;
    return this;
  }

   /**
   * Get topicFeaturedLinkAllowed
   * @return topicFeaturedLinkAllowed
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getTopicFeaturedLinkAllowed() {
    return topicFeaturedLinkAllowed;
  }


  public void setTopicFeaturedLinkAllowed(Boolean topicFeaturedLinkAllowed) {
    
    
    
    this.topicFeaturedLinkAllowed = topicFeaturedLinkAllowed;
  }


  public CategoriesCreateCategoryRequestResponseCategory searchPriority(Integer searchPriority) {
    
    
    
    
    this.searchPriority = searchPriority;
    return this;
  }

   /**
   * Get searchPriority
   * @return searchPriority
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getSearchPriority() {
    return searchPriority;
  }


  public void setSearchPriority(Integer searchPriority) {
    
    
    
    this.searchPriority = searchPriority;
  }


  public CategoriesCreateCategoryRequestResponseCategory uploadedLogo(Object uploadedLogo) {
    
    
    
    
    this.uploadedLogo = uploadedLogo;
    return this;
  }

   /**
   * Get uploadedLogo
   * @return uploadedLogo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getUploadedLogo() {
    return uploadedLogo;
  }


  public void setUploadedLogo(Object uploadedLogo) {
    
    
    
    this.uploadedLogo = uploadedLogo;
  }


  public CategoriesCreateCategoryRequestResponseCategory uploadedLogoDark(Object uploadedLogoDark) {
    
    
    
    
    this.uploadedLogoDark = uploadedLogoDark;
    return this;
  }

   /**
   * Get uploadedLogoDark
   * @return uploadedLogoDark
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getUploadedLogoDark() {
    return uploadedLogoDark;
  }


  public void setUploadedLogoDark(Object uploadedLogoDark) {
    
    
    
    this.uploadedLogoDark = uploadedLogoDark;
  }


  public CategoriesCreateCategoryRequestResponseCategory uploadedBackground(Object uploadedBackground) {
    
    
    
    
    this.uploadedBackground = uploadedBackground;
    return this;
  }

   /**
   * Get uploadedBackground
   * @return uploadedBackground
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getUploadedBackground() {
    return uploadedBackground;
  }


  public void setUploadedBackground(Object uploadedBackground) {
    
    
    
    this.uploadedBackground = uploadedBackground;
  }


  public CategoriesCreateCategoryRequestResponseCategory uploadedBackgroundDark(Object uploadedBackgroundDark) {
    
    
    
    
    this.uploadedBackgroundDark = uploadedBackgroundDark;
    return this;
  }

   /**
   * Get uploadedBackgroundDark
   * @return uploadedBackgroundDark
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getUploadedBackgroundDark() {
    return uploadedBackgroundDark;
  }


  public void setUploadedBackgroundDark(Object uploadedBackgroundDark) {
    
    
    
    this.uploadedBackgroundDark = uploadedBackgroundDark;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CategoriesCreateCategoryRequestResponseCategory instance itself
   */
  public CategoriesCreateCategoryRequestResponseCategory putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CategoriesCreateCategoryRequestResponseCategory categoriesCreateCategoryRequestResponseCategory = (CategoriesCreateCategoryRequestResponseCategory) o;
    return Objects.equals(this.description, categoriesCreateCategoryRequestResponseCategory.description) &&
        Objects.equals(this.id, categoriesCreateCategoryRequestResponseCategory.id) &&
        Objects.equals(this.name, categoriesCreateCategoryRequestResponseCategory.name) &&
        Objects.equals(this.color, categoriesCreateCategoryRequestResponseCategory.color) &&
        Objects.equals(this.textColor, categoriesCreateCategoryRequestResponseCategory.textColor) &&
        Objects.equals(this.slug, categoriesCreateCategoryRequestResponseCategory.slug) &&
        Objects.equals(this.topicCount, categoriesCreateCategoryRequestResponseCategory.topicCount) &&
        Objects.equals(this.postCount, categoriesCreateCategoryRequestResponseCategory.postCount) &&
        Objects.equals(this.position, categoriesCreateCategoryRequestResponseCategory.position) &&
        Objects.equals(this.descriptionText, categoriesCreateCategoryRequestResponseCategory.descriptionText) &&
        Objects.equals(this.descriptionExcerpt, categoriesCreateCategoryRequestResponseCategory.descriptionExcerpt) &&
        Objects.equals(this.topicUrl, categoriesCreateCategoryRequestResponseCategory.topicUrl) &&
        Objects.equals(this.readRestricted, categoriesCreateCategoryRequestResponseCategory.readRestricted) &&
        Objects.equals(this.permission, categoriesCreateCategoryRequestResponseCategory.permission) &&
        Objects.equals(this.notificationLevel, categoriesCreateCategoryRequestResponseCategory.notificationLevel) &&
        Objects.equals(this.canEdit, categoriesCreateCategoryRequestResponseCategory.canEdit) &&
        Objects.equals(this.topicTemplate, categoriesCreateCategoryRequestResponseCategory.topicTemplate) &&
        Objects.equals(this.formTemplateIds, categoriesCreateCategoryRequestResponseCategory.formTemplateIds) &&
        Objects.equals(this.hasChildren, categoriesCreateCategoryRequestResponseCategory.hasChildren) &&
        Objects.equals(this.sortOrder, categoriesCreateCategoryRequestResponseCategory.sortOrder) &&
        Objects.equals(this.sortAscending, categoriesCreateCategoryRequestResponseCategory.sortAscending) &&
        Objects.equals(this.showSubcategoryList, categoriesCreateCategoryRequestResponseCategory.showSubcategoryList) &&
        Objects.equals(this.numFeaturedTopics, categoriesCreateCategoryRequestResponseCategory.numFeaturedTopics) &&
        Objects.equals(this.defaultView, categoriesCreateCategoryRequestResponseCategory.defaultView) &&
        Objects.equals(this.subcategoryListStyle, categoriesCreateCategoryRequestResponseCategory.subcategoryListStyle) &&
        Objects.equals(this.defaultTopPeriod, categoriesCreateCategoryRequestResponseCategory.defaultTopPeriod) &&
        Objects.equals(this.defaultListFilter, categoriesCreateCategoryRequestResponseCategory.defaultListFilter) &&
        Objects.equals(this.minimumRequiredTags, categoriesCreateCategoryRequestResponseCategory.minimumRequiredTags) &&
        Objects.equals(this.navigateToFirstPostAfterRead, categoriesCreateCategoryRequestResponseCategory.navigateToFirstPostAfterRead) &&
        Objects.equals(this.customFields, categoriesCreateCategoryRequestResponseCategory.customFields) &&
        Objects.equals(this.allowedTags, categoriesCreateCategoryRequestResponseCategory.allowedTags) &&
        Objects.equals(this.allowedTagGroups, categoriesCreateCategoryRequestResponseCategory.allowedTagGroups) &&
        Objects.equals(this.allowGlobalTags, categoriesCreateCategoryRequestResponseCategory.allowGlobalTags) &&
        Objects.equals(this.requiredTagGroups, categoriesCreateCategoryRequestResponseCategory.requiredTagGroups) &&
        Objects.equals(this.categorySetting, categoriesCreateCategoryRequestResponseCategory.categorySetting) &&
        Objects.equals(this.readOnlyBanner, categoriesCreateCategoryRequestResponseCategory.readOnlyBanner) &&
        Objects.equals(this.availableGroups, categoriesCreateCategoryRequestResponseCategory.availableGroups) &&
        Objects.equals(this.autoCloseHours, categoriesCreateCategoryRequestResponseCategory.autoCloseHours) &&
        Objects.equals(this.autoCloseBasedOnLastPost, categoriesCreateCategoryRequestResponseCategory.autoCloseBasedOnLastPost) &&
        Objects.equals(this.allowUnlimitedOwnerEditsOnFirstPost, categoriesCreateCategoryRequestResponseCategory.allowUnlimitedOwnerEditsOnFirstPost) &&
        Objects.equals(this.defaultSlowModeSeconds, categoriesCreateCategoryRequestResponseCategory.defaultSlowModeSeconds) &&
        Objects.equals(this.groupPermissions, categoriesCreateCategoryRequestResponseCategory.groupPermissions) &&
        Objects.equals(this.emailIn, categoriesCreateCategoryRequestResponseCategory.emailIn) &&
        Objects.equals(this.emailInAllowStrangers, categoriesCreateCategoryRequestResponseCategory.emailInAllowStrangers) &&
        Objects.equals(this.mailinglistMirror, categoriesCreateCategoryRequestResponseCategory.mailinglistMirror) &&
        Objects.equals(this.allTopicsWiki, categoriesCreateCategoryRequestResponseCategory.allTopicsWiki) &&
        Objects.equals(this.canDelete, categoriesCreateCategoryRequestResponseCategory.canDelete) &&
        Objects.equals(this.allowBadges, categoriesCreateCategoryRequestResponseCategory.allowBadges) &&
        Objects.equals(this.topicFeaturedLinkAllowed, categoriesCreateCategoryRequestResponseCategory.topicFeaturedLinkAllowed) &&
        Objects.equals(this.searchPriority, categoriesCreateCategoryRequestResponseCategory.searchPriority) &&
        Objects.equals(this.uploadedLogo, categoriesCreateCategoryRequestResponseCategory.uploadedLogo) &&
        Objects.equals(this.uploadedLogoDark, categoriesCreateCategoryRequestResponseCategory.uploadedLogoDark) &&
        Objects.equals(this.uploadedBackground, categoriesCreateCategoryRequestResponseCategory.uploadedBackground) &&
        Objects.equals(this.uploadedBackgroundDark, categoriesCreateCategoryRequestResponseCategory.uploadedBackgroundDark)&&
        Objects.equals(this.additionalProperties, categoriesCreateCategoryRequestResponseCategory.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, id, name, color, textColor, slug, topicCount, postCount, position, descriptionText, descriptionExcerpt, topicUrl, readRestricted, permission, notificationLevel, canEdit, topicTemplate, formTemplateIds, hasChildren, sortOrder, sortAscending, showSubcategoryList, numFeaturedTopics, defaultView, subcategoryListStyle, defaultTopPeriod, defaultListFilter, minimumRequiredTags, navigateToFirstPostAfterRead, customFields, allowedTags, allowedTagGroups, allowGlobalTags, requiredTagGroups, categorySetting, readOnlyBanner, availableGroups, autoCloseHours, autoCloseBasedOnLastPost, allowUnlimitedOwnerEditsOnFirstPost, defaultSlowModeSeconds, groupPermissions, emailIn, emailInAllowStrangers, mailinglistMirror, allTopicsWiki, canDelete, allowBadges, topicFeaturedLinkAllowed, searchPriority, uploadedLogo, uploadedLogoDark, uploadedBackground, uploadedBackgroundDark, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CategoriesCreateCategoryRequestResponseCategory {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    textColor: ").append(toIndentedString(textColor)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    topicCount: ").append(toIndentedString(topicCount)).append("\n");
    sb.append("    postCount: ").append(toIndentedString(postCount)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    descriptionText: ").append(toIndentedString(descriptionText)).append("\n");
    sb.append("    descriptionExcerpt: ").append(toIndentedString(descriptionExcerpt)).append("\n");
    sb.append("    topicUrl: ").append(toIndentedString(topicUrl)).append("\n");
    sb.append("    readRestricted: ").append(toIndentedString(readRestricted)).append("\n");
    sb.append("    permission: ").append(toIndentedString(permission)).append("\n");
    sb.append("    notificationLevel: ").append(toIndentedString(notificationLevel)).append("\n");
    sb.append("    canEdit: ").append(toIndentedString(canEdit)).append("\n");
    sb.append("    topicTemplate: ").append(toIndentedString(topicTemplate)).append("\n");
    sb.append("    formTemplateIds: ").append(toIndentedString(formTemplateIds)).append("\n");
    sb.append("    hasChildren: ").append(toIndentedString(hasChildren)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    sortAscending: ").append(toIndentedString(sortAscending)).append("\n");
    sb.append("    showSubcategoryList: ").append(toIndentedString(showSubcategoryList)).append("\n");
    sb.append("    numFeaturedTopics: ").append(toIndentedString(numFeaturedTopics)).append("\n");
    sb.append("    defaultView: ").append(toIndentedString(defaultView)).append("\n");
    sb.append("    subcategoryListStyle: ").append(toIndentedString(subcategoryListStyle)).append("\n");
    sb.append("    defaultTopPeriod: ").append(toIndentedString(defaultTopPeriod)).append("\n");
    sb.append("    defaultListFilter: ").append(toIndentedString(defaultListFilter)).append("\n");
    sb.append("    minimumRequiredTags: ").append(toIndentedString(minimumRequiredTags)).append("\n");
    sb.append("    navigateToFirstPostAfterRead: ").append(toIndentedString(navigateToFirstPostAfterRead)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    allowedTags: ").append(toIndentedString(allowedTags)).append("\n");
    sb.append("    allowedTagGroups: ").append(toIndentedString(allowedTagGroups)).append("\n");
    sb.append("    allowGlobalTags: ").append(toIndentedString(allowGlobalTags)).append("\n");
    sb.append("    requiredTagGroups: ").append(toIndentedString(requiredTagGroups)).append("\n");
    sb.append("    categorySetting: ").append(toIndentedString(categorySetting)).append("\n");
    sb.append("    readOnlyBanner: ").append(toIndentedString(readOnlyBanner)).append("\n");
    sb.append("    availableGroups: ").append(toIndentedString(availableGroups)).append("\n");
    sb.append("    autoCloseHours: ").append(toIndentedString(autoCloseHours)).append("\n");
    sb.append("    autoCloseBasedOnLastPost: ").append(toIndentedString(autoCloseBasedOnLastPost)).append("\n");
    sb.append("    allowUnlimitedOwnerEditsOnFirstPost: ").append(toIndentedString(allowUnlimitedOwnerEditsOnFirstPost)).append("\n");
    sb.append("    defaultSlowModeSeconds: ").append(toIndentedString(defaultSlowModeSeconds)).append("\n");
    sb.append("    groupPermissions: ").append(toIndentedString(groupPermissions)).append("\n");
    sb.append("    emailIn: ").append(toIndentedString(emailIn)).append("\n");
    sb.append("    emailInAllowStrangers: ").append(toIndentedString(emailInAllowStrangers)).append("\n");
    sb.append("    mailinglistMirror: ").append(toIndentedString(mailinglistMirror)).append("\n");
    sb.append("    allTopicsWiki: ").append(toIndentedString(allTopicsWiki)).append("\n");
    sb.append("    canDelete: ").append(toIndentedString(canDelete)).append("\n");
    sb.append("    allowBadges: ").append(toIndentedString(allowBadges)).append("\n");
    sb.append("    topicFeaturedLinkAllowed: ").append(toIndentedString(topicFeaturedLinkAllowed)).append("\n");
    sb.append("    searchPriority: ").append(toIndentedString(searchPriority)).append("\n");
    sb.append("    uploadedLogo: ").append(toIndentedString(uploadedLogo)).append("\n");
    sb.append("    uploadedLogoDark: ").append(toIndentedString(uploadedLogoDark)).append("\n");
    sb.append("    uploadedBackground: ").append(toIndentedString(uploadedBackground)).append("\n");
    sb.append("    uploadedBackgroundDark: ").append(toIndentedString(uploadedBackgroundDark)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("color");
    openapiFields.add("text_color");
    openapiFields.add("slug");
    openapiFields.add("topic_count");
    openapiFields.add("post_count");
    openapiFields.add("position");
    openapiFields.add("description_text");
    openapiFields.add("description_excerpt");
    openapiFields.add("topic_url");
    openapiFields.add("read_restricted");
    openapiFields.add("permission");
    openapiFields.add("notification_level");
    openapiFields.add("can_edit");
    openapiFields.add("topic_template");
    openapiFields.add("form_template_ids");
    openapiFields.add("has_children");
    openapiFields.add("sort_order");
    openapiFields.add("sort_ascending");
    openapiFields.add("show_subcategory_list");
    openapiFields.add("num_featured_topics");
    openapiFields.add("default_view");
    openapiFields.add("subcategory_list_style");
    openapiFields.add("default_top_period");
    openapiFields.add("default_list_filter");
    openapiFields.add("minimum_required_tags");
    openapiFields.add("navigate_to_first_post_after_read");
    openapiFields.add("custom_fields");
    openapiFields.add("allowed_tags");
    openapiFields.add("allowed_tag_groups");
    openapiFields.add("allow_global_tags");
    openapiFields.add("required_tag_groups");
    openapiFields.add("category_setting");
    openapiFields.add("read_only_banner");
    openapiFields.add("available_groups");
    openapiFields.add("auto_close_hours");
    openapiFields.add("auto_close_based_on_last_post");
    openapiFields.add("allow_unlimited_owner_edits_on_first_post");
    openapiFields.add("default_slow_mode_seconds");
    openapiFields.add("group_permissions");
    openapiFields.add("email_in");
    openapiFields.add("email_in_allow_strangers");
    openapiFields.add("mailinglist_mirror");
    openapiFields.add("all_topics_wiki");
    openapiFields.add("can_delete");
    openapiFields.add("allow_badges");
    openapiFields.add("topic_featured_link_allowed");
    openapiFields.add("search_priority");
    openapiFields.add("uploaded_logo");
    openapiFields.add("uploaded_logo_dark");
    openapiFields.add("uploaded_background");
    openapiFields.add("uploaded_background_dark");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("color");
    openapiRequiredFields.add("text_color");
    openapiRequiredFields.add("slug");
    openapiRequiredFields.add("topic_count");
    openapiRequiredFields.add("post_count");
    openapiRequiredFields.add("position");
    openapiRequiredFields.add("description_text");
    openapiRequiredFields.add("description_excerpt");
    openapiRequiredFields.add("topic_url");
    openapiRequiredFields.add("read_restricted");
    openapiRequiredFields.add("permission");
    openapiRequiredFields.add("notification_level");
    openapiRequiredFields.add("can_edit");
    openapiRequiredFields.add("topic_template");
    openapiRequiredFields.add("has_children");
    openapiRequiredFields.add("sort_order");
    openapiRequiredFields.add("sort_ascending");
    openapiRequiredFields.add("show_subcategory_list");
    openapiRequiredFields.add("num_featured_topics");
    openapiRequiredFields.add("default_view");
    openapiRequiredFields.add("subcategory_list_style");
    openapiRequiredFields.add("default_top_period");
    openapiRequiredFields.add("default_list_filter");
    openapiRequiredFields.add("minimum_required_tags");
    openapiRequiredFields.add("navigate_to_first_post_after_read");
    openapiRequiredFields.add("custom_fields");
    openapiRequiredFields.add("required_tag_groups");
    openapiRequiredFields.add("read_only_banner");
    openapiRequiredFields.add("available_groups");
    openapiRequiredFields.add("auto_close_hours");
    openapiRequiredFields.add("auto_close_based_on_last_post");
    openapiRequiredFields.add("allow_unlimited_owner_edits_on_first_post");
    openapiRequiredFields.add("default_slow_mode_seconds");
    openapiRequiredFields.add("group_permissions");
    openapiRequiredFields.add("email_in");
    openapiRequiredFields.add("email_in_allow_strangers");
    openapiRequiredFields.add("mailinglist_mirror");
    openapiRequiredFields.add("all_topics_wiki");
    openapiRequiredFields.add("can_delete");
    openapiRequiredFields.add("allow_badges");
    openapiRequiredFields.add("topic_featured_link_allowed");
    openapiRequiredFields.add("search_priority");
    openapiRequiredFields.add("uploaded_logo");
    openapiRequiredFields.add("uploaded_logo_dark");
    openapiRequiredFields.add("uploaded_background");
    openapiRequiredFields.add("uploaded_background_dark");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CategoriesCreateCategoryRequestResponseCategory
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CategoriesCreateCategoryRequestResponseCategory.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CategoriesCreateCategoryRequestResponseCategory is not found in the empty JSON string", CategoriesCreateCategoryRequestResponseCategory.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CategoriesCreateCategoryRequestResponseCategory.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("color").toString()));
      }
      if (!jsonObj.get("text_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text_color").toString()));
      }
      if (!jsonObj.get("slug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slug").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("form_template_ids") != null && !jsonObj.get("form_template_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `form_template_ids` to be an array in the JSON string but got `%s`", jsonObj.get("form_template_ids").toString()));
      }
      if (!jsonObj.get("subcategory_list_style").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subcategory_list_style` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subcategory_list_style").toString()));
      }
      if (!jsonObj.get("default_top_period").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_top_period` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_top_period").toString()));
      }
      if (!jsonObj.get("default_list_filter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_list_filter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_list_filter").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("allowed_tags") != null && !jsonObj.get("allowed_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowed_tags` to be an array in the JSON string but got `%s`", jsonObj.get("allowed_tags").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("allowed_tag_groups") != null && !jsonObj.get("allowed_tag_groups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowed_tag_groups` to be an array in the JSON string but got `%s`", jsonObj.get("allowed_tag_groups").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("required_tag_groups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `required_tag_groups` to be an array in the JSON string but got `%s`", jsonObj.get("required_tag_groups").toString()));
      }

      JsonArray jsonArrayrequiredTagGroups = jsonObj.getAsJsonArray("required_tag_groups");
      // validate the required field `required_tag_groups` (array)
      for (int i = 0; i < jsonArrayrequiredTagGroups.size(); i++) {
        CategoriesCreateCategoryRequestResponseCategoryRequiredTagGroupsInner.validateJsonObject(jsonArrayrequiredTagGroups.get(i).getAsJsonObject());
      };
      // ensure the required json array is present
      if (jsonObj.get("available_groups") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("available_groups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `available_groups` to be an array in the JSON string but got `%s`", jsonObj.get("available_groups").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("group_permissions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `group_permissions` to be an array in the JSON string but got `%s`", jsonObj.get("group_permissions").toString()));
      }

      JsonArray jsonArraygroupPermissions = jsonObj.getAsJsonArray("group_permissions");
      // validate the required field `group_permissions` (array)
      for (int i = 0; i < jsonArraygroupPermissions.size(); i++) {
        CategoriesCreateCategoryRequestResponseCategoryGroupPermissionsInner.validateJsonObject(jsonArraygroupPermissions.get(i).getAsJsonObject());
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CategoriesCreateCategoryRequestResponseCategory.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CategoriesCreateCategoryRequestResponseCategory' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CategoriesCreateCategoryRequestResponseCategory> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CategoriesCreateCategoryRequestResponseCategory.class));

       return (TypeAdapter<T>) new TypeAdapter<CategoriesCreateCategoryRequestResponseCategory>() {
           @Override
           public void write(JsonWriter out, CategoriesCreateCategoryRequestResponseCategory value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CategoriesCreateCategoryRequestResponseCategory read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CategoriesCreateCategoryRequestResponseCategory instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CategoriesCreateCategoryRequestResponseCategory given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CategoriesCreateCategoryRequestResponseCategory
  * @throws IOException if the JSON string is invalid with respect to CategoriesCreateCategoryRequestResponseCategory
  */
  public static CategoriesCreateCategoryRequestResponseCategory fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CategoriesCreateCategoryRequestResponseCategory.class);
  }

 /**
  * Convert an instance of CategoriesCreateCategoryRequestResponseCategory to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

