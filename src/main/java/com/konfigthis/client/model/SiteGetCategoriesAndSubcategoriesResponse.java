/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.SiteGetCategoriesAndSubcategoriesResponseArchetypesInner;
import com.konfigthis.client.model.SiteGetCategoriesAndSubcategoriesResponseCategoriesInner;
import com.konfigthis.client.model.SiteGetCategoriesAndSubcategoriesResponseGroupsInner;
import com.konfigthis.client.model.SiteGetCategoriesAndSubcategoriesResponseNotificationTypes;
import com.konfigthis.client.model.SiteGetCategoriesAndSubcategoriesResponsePostActionTypesInner;
import com.konfigthis.client.model.SiteGetCategoriesAndSubcategoriesResponsePostTypes;
import com.konfigthis.client.model.SiteGetCategoriesAndSubcategoriesResponseTrustLevels;
import com.konfigthis.client.model.SiteGetCategoriesAndSubcategoriesResponseUserColorSchemesInner;
import com.konfigthis.client.model.SiteGetCategoriesAndSubcategoriesResponseUserThemesInner;
import com.konfigthis.client.model.SiteGetCategoriesAndSubcategoriesResponseUserTips;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * SiteGetCategoriesAndSubcategoriesResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class SiteGetCategoriesAndSubcategoriesResponse {
  public static final String SERIALIZED_NAME_DEFAULT_ARCHETYPE = "default_archetype";
  @SerializedName(SERIALIZED_NAME_DEFAULT_ARCHETYPE)
  private String defaultArchetype;

  public static final String SERIALIZED_NAME_NOTIFICATION_TYPES = "notification_types";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_TYPES)
  private SiteGetCategoriesAndSubcategoriesResponseNotificationTypes notificationTypes;

  public static final String SERIALIZED_NAME_POST_TYPES = "post_types";
  @SerializedName(SERIALIZED_NAME_POST_TYPES)
  private SiteGetCategoriesAndSubcategoriesResponsePostTypes postTypes;

  public static final String SERIALIZED_NAME_TRUST_LEVELS = "trust_levels";
  @SerializedName(SERIALIZED_NAME_TRUST_LEVELS)
  private SiteGetCategoriesAndSubcategoriesResponseTrustLevels trustLevels;

  public static final String SERIALIZED_NAME_USER_TIPS = "user_tips";
  @SerializedName(SERIALIZED_NAME_USER_TIPS)
  private SiteGetCategoriesAndSubcategoriesResponseUserTips userTips;

  public static final String SERIALIZED_NAME_GROUPS = "groups";
  @SerializedName(SERIALIZED_NAME_GROUPS)
  private List<SiteGetCategoriesAndSubcategoriesResponseGroupsInner> groups = new ArrayList<>();

  public static final String SERIALIZED_NAME_FILTERS = "filters";
  @SerializedName(SERIALIZED_NAME_FILTERS)
  private List<Object> filters = new ArrayList<>();

  public static final String SERIALIZED_NAME_PERIODS = "periods";
  @SerializedName(SERIALIZED_NAME_PERIODS)
  private List<Object> periods = new ArrayList<>();

  public static final String SERIALIZED_NAME_TOP_MENU_ITEMS = "top_menu_items";
  @SerializedName(SERIALIZED_NAME_TOP_MENU_ITEMS)
  private List<Object> topMenuItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_ANONYMOUS_TOP_MENU_ITEMS = "anonymous_top_menu_items";
  @SerializedName(SERIALIZED_NAME_ANONYMOUS_TOP_MENU_ITEMS)
  private List<Object> anonymousTopMenuItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_UNCATEGORIZED_CATEGORY_ID = "uncategorized_category_id";
  @SerializedName(SERIALIZED_NAME_UNCATEGORIZED_CATEGORY_ID)
  private Integer uncategorizedCategoryId;

  public static final String SERIALIZED_NAME_USER_FIELD_MAX_LENGTH = "user_field_max_length";
  @SerializedName(SERIALIZED_NAME_USER_FIELD_MAX_LENGTH)
  private Integer userFieldMaxLength;

  public static final String SERIALIZED_NAME_POST_ACTION_TYPES = "post_action_types";
  @SerializedName(SERIALIZED_NAME_POST_ACTION_TYPES)
  private List<SiteGetCategoriesAndSubcategoriesResponsePostActionTypesInner> postActionTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_TOPIC_FLAG_TYPES = "topic_flag_types";
  @SerializedName(SERIALIZED_NAME_TOPIC_FLAG_TYPES)
  private List<SiteGetCategoriesAndSubcategoriesResponsePostActionTypesInner> topicFlagTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_CAN_CREATE_TAG = "can_create_tag";
  @SerializedName(SERIALIZED_NAME_CAN_CREATE_TAG)
  private Boolean canCreateTag;

  public static final String SERIALIZED_NAME_CAN_TAG_TOPICS = "can_tag_topics";
  @SerializedName(SERIALIZED_NAME_CAN_TAG_TOPICS)
  private Boolean canTagTopics;

  public static final String SERIALIZED_NAME_CAN_TAG_PMS = "can_tag_pms";
  @SerializedName(SERIALIZED_NAME_CAN_TAG_PMS)
  private Boolean canTagPms;

  public static final String SERIALIZED_NAME_TAGS_FILTER_REGEXP = "tags_filter_regexp";
  @SerializedName(SERIALIZED_NAME_TAGS_FILTER_REGEXP)
  private String tagsFilterRegexp;

  public static final String SERIALIZED_NAME_TOP_TAGS = "top_tags";
  @SerializedName(SERIALIZED_NAME_TOP_TAGS)
  private List<Object> topTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_WIZARD_REQUIRED = "wizard_required";
  @SerializedName(SERIALIZED_NAME_WIZARD_REQUIRED)
  private Boolean wizardRequired;

  public static final String SERIALIZED_NAME_CAN_ASSOCIATE_GROUPS = "can_associate_groups";
  @SerializedName(SERIALIZED_NAME_CAN_ASSOCIATE_GROUPS)
  private Boolean canAssociateGroups;

  public static final String SERIALIZED_NAME_TOPIC_FEATURED_LINK_ALLOWED_CATEGORY_IDS = "topic_featured_link_allowed_category_ids";
  @SerializedName(SERIALIZED_NAME_TOPIC_FEATURED_LINK_ALLOWED_CATEGORY_IDS)
  private List<Object> topicFeaturedLinkAllowedCategoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_USER_THEMES = "user_themes";
  @SerializedName(SERIALIZED_NAME_USER_THEMES)
  private List<SiteGetCategoriesAndSubcategoriesResponseUserThemesInner> userThemes = new ArrayList<>();

  public static final String SERIALIZED_NAME_USER_COLOR_SCHEMES = "user_color_schemes";
  @SerializedName(SERIALIZED_NAME_USER_COLOR_SCHEMES)
  private List<SiteGetCategoriesAndSubcategoriesResponseUserColorSchemesInner> userColorSchemes = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEFAULT_DARK_COLOR_SCHEME = "default_dark_color_scheme";
  @SerializedName(SERIALIZED_NAME_DEFAULT_DARK_COLOR_SCHEME)
  private Object defaultDarkColorScheme = null;

  public static final String SERIALIZED_NAME_CENSORED_REGEXP = "censored_regexp";
  @SerializedName(SERIALIZED_NAME_CENSORED_REGEXP)
  private List<Object> censoredRegexp = new ArrayList<>();

  public static final String SERIALIZED_NAME_CUSTOM_EMOJI_TRANSLATION = "custom_emoji_translation";
  @SerializedName(SERIALIZED_NAME_CUSTOM_EMOJI_TRANSLATION)
  private Object customEmojiTranslation;

  public static final String SERIALIZED_NAME_WATCHED_WORDS_REPLACE = "watched_words_replace";
  @SerializedName(SERIALIZED_NAME_WATCHED_WORDS_REPLACE)
  private Object watchedWordsReplace = null;

  public static final String SERIALIZED_NAME_WATCHED_WORDS_LINK = "watched_words_link";
  @SerializedName(SERIALIZED_NAME_WATCHED_WORDS_LINK)
  private Object watchedWordsLink = null;

  public static final String SERIALIZED_NAME_MARKDOWN_ADDITIONAL_OPTIONS = "markdown_additional_options";
  @SerializedName(SERIALIZED_NAME_MARKDOWN_ADDITIONAL_OPTIONS)
  private Object markdownAdditionalOptions;

  public static final String SERIALIZED_NAME_HASHTAG_CONFIGURATIONS = "hashtag_configurations";
  @SerializedName(SERIALIZED_NAME_HASHTAG_CONFIGURATIONS)
  private Object hashtagConfigurations;

  public static final String SERIALIZED_NAME_HASHTAG_ICONS = "hashtag_icons";
  @SerializedName(SERIALIZED_NAME_HASHTAG_ICONS)
  private Object hashtagIcons;

  public static final String SERIALIZED_NAME_DISPLAYED_ABOUT_PLUGIN_STAT_GROUPS = "displayed_about_plugin_stat_groups";
  @SerializedName(SERIALIZED_NAME_DISPLAYED_ABOUT_PLUGIN_STAT_GROUPS)
  private List displayedAboutPluginStatGroups = null;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<SiteGetCategoriesAndSubcategoriesResponseCategoriesInner> categories = new ArrayList<>();

  public static final String SERIALIZED_NAME_ARCHETYPES = "archetypes";
  @SerializedName(SERIALIZED_NAME_ARCHETYPES)
  private List<SiteGetCategoriesAndSubcategoriesResponseArchetypesInner> archetypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_USER_FIELDS = "user_fields";
  @SerializedName(SERIALIZED_NAME_USER_FIELDS)
  private List<Object> userFields = new ArrayList<>();

  public static final String SERIALIZED_NAME_AUTH_PROVIDERS = "auth_providers";
  @SerializedName(SERIALIZED_NAME_AUTH_PROVIDERS)
  private List<Object> authProviders = new ArrayList<>();

  public static final String SERIALIZED_NAME_WHISPERS_ALLOWED_GROUPS_NAMES = "whispers_allowed_groups_names";
  @SerializedName(SERIALIZED_NAME_WHISPERS_ALLOWED_GROUPS_NAMES)
  private List whispersAllowedGroupsNames = null;

  public static final String SERIALIZED_NAME_DENIED_EMOJIS = "denied_emojis";
  @SerializedName(SERIALIZED_NAME_DENIED_EMOJIS)
  private List deniedEmojis = null;

  public static final String SERIALIZED_NAME_NAVIGATION_MENU_SITE_TOP_TAGS = "navigation_menu_site_top_tags";
  @SerializedName(SERIALIZED_NAME_NAVIGATION_MENU_SITE_TOP_TAGS)
  private List navigationMenuSiteTopTags = null;

  public SiteGetCategoriesAndSubcategoriesResponse() {
  }

  public SiteGetCategoriesAndSubcategoriesResponse defaultArchetype(String defaultArchetype) {
    
    
    
    
    this.defaultArchetype = defaultArchetype;
    return this;
  }

   /**
   * Get defaultArchetype
   * @return defaultArchetype
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDefaultArchetype() {
    return defaultArchetype;
  }


  public void setDefaultArchetype(String defaultArchetype) {
    
    
    
    this.defaultArchetype = defaultArchetype;
  }


  public SiteGetCategoriesAndSubcategoriesResponse notificationTypes(SiteGetCategoriesAndSubcategoriesResponseNotificationTypes notificationTypes) {
    
    
    
    
    this.notificationTypes = notificationTypes;
    return this;
  }

   /**
   * Get notificationTypes
   * @return notificationTypes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public SiteGetCategoriesAndSubcategoriesResponseNotificationTypes getNotificationTypes() {
    return notificationTypes;
  }


  public void setNotificationTypes(SiteGetCategoriesAndSubcategoriesResponseNotificationTypes notificationTypes) {
    
    
    
    this.notificationTypes = notificationTypes;
  }


  public SiteGetCategoriesAndSubcategoriesResponse postTypes(SiteGetCategoriesAndSubcategoriesResponsePostTypes postTypes) {
    
    
    
    
    this.postTypes = postTypes;
    return this;
  }

   /**
   * Get postTypes
   * @return postTypes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public SiteGetCategoriesAndSubcategoriesResponsePostTypes getPostTypes() {
    return postTypes;
  }


  public void setPostTypes(SiteGetCategoriesAndSubcategoriesResponsePostTypes postTypes) {
    
    
    
    this.postTypes = postTypes;
  }


  public SiteGetCategoriesAndSubcategoriesResponse trustLevels(SiteGetCategoriesAndSubcategoriesResponseTrustLevels trustLevels) {
    
    
    
    
    this.trustLevels = trustLevels;
    return this;
  }

   /**
   * Get trustLevels
   * @return trustLevels
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public SiteGetCategoriesAndSubcategoriesResponseTrustLevels getTrustLevels() {
    return trustLevels;
  }


  public void setTrustLevels(SiteGetCategoriesAndSubcategoriesResponseTrustLevels trustLevels) {
    
    
    
    this.trustLevels = trustLevels;
  }


  public SiteGetCategoriesAndSubcategoriesResponse userTips(SiteGetCategoriesAndSubcategoriesResponseUserTips userTips) {
    
    
    
    
    this.userTips = userTips;
    return this;
  }

   /**
   * Get userTips
   * @return userTips
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SiteGetCategoriesAndSubcategoriesResponseUserTips getUserTips() {
    return userTips;
  }


  public void setUserTips(SiteGetCategoriesAndSubcategoriesResponseUserTips userTips) {
    
    
    
    this.userTips = userTips;
  }


  public SiteGetCategoriesAndSubcategoriesResponse groups(List<SiteGetCategoriesAndSubcategoriesResponseGroupsInner> groups) {
    
    
    
    
    this.groups = groups;
    return this;
  }

  public SiteGetCategoriesAndSubcategoriesResponse addGroupsItem(SiteGetCategoriesAndSubcategoriesResponseGroupsInner groupsItem) {
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * Get groups
   * @return groups
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<SiteGetCategoriesAndSubcategoriesResponseGroupsInner> getGroups() {
    return groups;
  }


  public void setGroups(List<SiteGetCategoriesAndSubcategoriesResponseGroupsInner> groups) {
    
    
    
    this.groups = groups;
  }


  public SiteGetCategoriesAndSubcategoriesResponse filters(List<Object> filters) {
    
    
    
    
    this.filters = filters;
    return this;
  }

  public SiteGetCategoriesAndSubcategoriesResponse addFiltersItem(Object filtersItem) {
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * Get filters
   * @return filters
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getFilters() {
    return filters;
  }


  public void setFilters(List<Object> filters) {
    
    
    
    this.filters = filters;
  }


  public SiteGetCategoriesAndSubcategoriesResponse periods(List<Object> periods) {
    
    
    
    
    this.periods = periods;
    return this;
  }

  public SiteGetCategoriesAndSubcategoriesResponse addPeriodsItem(Object periodsItem) {
    this.periods.add(periodsItem);
    return this;
  }

   /**
   * Get periods
   * @return periods
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getPeriods() {
    return periods;
  }


  public void setPeriods(List<Object> periods) {
    
    
    
    this.periods = periods;
  }


  public SiteGetCategoriesAndSubcategoriesResponse topMenuItems(List<Object> topMenuItems) {
    
    
    
    
    this.topMenuItems = topMenuItems;
    return this;
  }

  public SiteGetCategoriesAndSubcategoriesResponse addTopMenuItemsItem(Object topMenuItemsItem) {
    this.topMenuItems.add(topMenuItemsItem);
    return this;
  }

   /**
   * Get topMenuItems
   * @return topMenuItems
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getTopMenuItems() {
    return topMenuItems;
  }


  public void setTopMenuItems(List<Object> topMenuItems) {
    
    
    
    this.topMenuItems = topMenuItems;
  }


  public SiteGetCategoriesAndSubcategoriesResponse anonymousTopMenuItems(List<Object> anonymousTopMenuItems) {
    
    
    
    
    this.anonymousTopMenuItems = anonymousTopMenuItems;
    return this;
  }

  public SiteGetCategoriesAndSubcategoriesResponse addAnonymousTopMenuItemsItem(Object anonymousTopMenuItemsItem) {
    this.anonymousTopMenuItems.add(anonymousTopMenuItemsItem);
    return this;
  }

   /**
   * Get anonymousTopMenuItems
   * @return anonymousTopMenuItems
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getAnonymousTopMenuItems() {
    return anonymousTopMenuItems;
  }


  public void setAnonymousTopMenuItems(List<Object> anonymousTopMenuItems) {
    
    
    
    this.anonymousTopMenuItems = anonymousTopMenuItems;
  }


  public SiteGetCategoriesAndSubcategoriesResponse uncategorizedCategoryId(Integer uncategorizedCategoryId) {
    
    
    
    
    this.uncategorizedCategoryId = uncategorizedCategoryId;
    return this;
  }

   /**
   * Get uncategorizedCategoryId
   * @return uncategorizedCategoryId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getUncategorizedCategoryId() {
    return uncategorizedCategoryId;
  }


  public void setUncategorizedCategoryId(Integer uncategorizedCategoryId) {
    
    
    
    this.uncategorizedCategoryId = uncategorizedCategoryId;
  }


  public SiteGetCategoriesAndSubcategoriesResponse userFieldMaxLength(Integer userFieldMaxLength) {
    
    
    
    
    this.userFieldMaxLength = userFieldMaxLength;
    return this;
  }

   /**
   * Get userFieldMaxLength
   * @return userFieldMaxLength
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getUserFieldMaxLength() {
    return userFieldMaxLength;
  }


  public void setUserFieldMaxLength(Integer userFieldMaxLength) {
    
    
    
    this.userFieldMaxLength = userFieldMaxLength;
  }


  public SiteGetCategoriesAndSubcategoriesResponse postActionTypes(List<SiteGetCategoriesAndSubcategoriesResponsePostActionTypesInner> postActionTypes) {
    
    
    
    
    this.postActionTypes = postActionTypes;
    return this;
  }

  public SiteGetCategoriesAndSubcategoriesResponse addPostActionTypesItem(SiteGetCategoriesAndSubcategoriesResponsePostActionTypesInner postActionTypesItem) {
    this.postActionTypes.add(postActionTypesItem);
    return this;
  }

   /**
   * Get postActionTypes
   * @return postActionTypes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<SiteGetCategoriesAndSubcategoriesResponsePostActionTypesInner> getPostActionTypes() {
    return postActionTypes;
  }


  public void setPostActionTypes(List<SiteGetCategoriesAndSubcategoriesResponsePostActionTypesInner> postActionTypes) {
    
    
    
    this.postActionTypes = postActionTypes;
  }


  public SiteGetCategoriesAndSubcategoriesResponse topicFlagTypes(List<SiteGetCategoriesAndSubcategoriesResponsePostActionTypesInner> topicFlagTypes) {
    
    
    
    
    this.topicFlagTypes = topicFlagTypes;
    return this;
  }

  public SiteGetCategoriesAndSubcategoriesResponse addTopicFlagTypesItem(SiteGetCategoriesAndSubcategoriesResponsePostActionTypesInner topicFlagTypesItem) {
    this.topicFlagTypes.add(topicFlagTypesItem);
    return this;
  }

   /**
   * Get topicFlagTypes
   * @return topicFlagTypes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<SiteGetCategoriesAndSubcategoriesResponsePostActionTypesInner> getTopicFlagTypes() {
    return topicFlagTypes;
  }


  public void setTopicFlagTypes(List<SiteGetCategoriesAndSubcategoriesResponsePostActionTypesInner> topicFlagTypes) {
    
    
    
    this.topicFlagTypes = topicFlagTypes;
  }


  public SiteGetCategoriesAndSubcategoriesResponse canCreateTag(Boolean canCreateTag) {
    
    
    
    
    this.canCreateTag = canCreateTag;
    return this;
  }

   /**
   * Get canCreateTag
   * @return canCreateTag
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanCreateTag() {
    return canCreateTag;
  }


  public void setCanCreateTag(Boolean canCreateTag) {
    
    
    
    this.canCreateTag = canCreateTag;
  }


  public SiteGetCategoriesAndSubcategoriesResponse canTagTopics(Boolean canTagTopics) {
    
    
    
    
    this.canTagTopics = canTagTopics;
    return this;
  }

   /**
   * Get canTagTopics
   * @return canTagTopics
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanTagTopics() {
    return canTagTopics;
  }


  public void setCanTagTopics(Boolean canTagTopics) {
    
    
    
    this.canTagTopics = canTagTopics;
  }


  public SiteGetCategoriesAndSubcategoriesResponse canTagPms(Boolean canTagPms) {
    
    
    
    
    this.canTagPms = canTagPms;
    return this;
  }

   /**
   * Get canTagPms
   * @return canTagPms
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanTagPms() {
    return canTagPms;
  }


  public void setCanTagPms(Boolean canTagPms) {
    
    
    
    this.canTagPms = canTagPms;
  }


  public SiteGetCategoriesAndSubcategoriesResponse tagsFilterRegexp(String tagsFilterRegexp) {
    
    
    
    
    this.tagsFilterRegexp = tagsFilterRegexp;
    return this;
  }

   /**
   * Get tagsFilterRegexp
   * @return tagsFilterRegexp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getTagsFilterRegexp() {
    return tagsFilterRegexp;
  }


  public void setTagsFilterRegexp(String tagsFilterRegexp) {
    
    
    
    this.tagsFilterRegexp = tagsFilterRegexp;
  }


  public SiteGetCategoriesAndSubcategoriesResponse topTags(List<Object> topTags) {
    
    
    
    
    this.topTags = topTags;
    return this;
  }

  public SiteGetCategoriesAndSubcategoriesResponse addTopTagsItem(Object topTagsItem) {
    this.topTags.add(topTagsItem);
    return this;
  }

   /**
   * Get topTags
   * @return topTags
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getTopTags() {
    return topTags;
  }


  public void setTopTags(List<Object> topTags) {
    
    
    
    this.topTags = topTags;
  }


  public SiteGetCategoriesAndSubcategoriesResponse wizardRequired(Boolean wizardRequired) {
    
    
    
    
    this.wizardRequired = wizardRequired;
    return this;
  }

   /**
   * Get wizardRequired
   * @return wizardRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getWizardRequired() {
    return wizardRequired;
  }


  public void setWizardRequired(Boolean wizardRequired) {
    
    
    
    this.wizardRequired = wizardRequired;
  }


  public SiteGetCategoriesAndSubcategoriesResponse canAssociateGroups(Boolean canAssociateGroups) {
    
    
    
    
    this.canAssociateGroups = canAssociateGroups;
    return this;
  }

   /**
   * Get canAssociateGroups
   * @return canAssociateGroups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCanAssociateGroups() {
    return canAssociateGroups;
  }


  public void setCanAssociateGroups(Boolean canAssociateGroups) {
    
    
    
    this.canAssociateGroups = canAssociateGroups;
  }


  public SiteGetCategoriesAndSubcategoriesResponse topicFeaturedLinkAllowedCategoryIds(List<Object> topicFeaturedLinkAllowedCategoryIds) {
    
    
    
    
    this.topicFeaturedLinkAllowedCategoryIds = topicFeaturedLinkAllowedCategoryIds;
    return this;
  }

  public SiteGetCategoriesAndSubcategoriesResponse addTopicFeaturedLinkAllowedCategoryIdsItem(Object topicFeaturedLinkAllowedCategoryIdsItem) {
    this.topicFeaturedLinkAllowedCategoryIds.add(topicFeaturedLinkAllowedCategoryIdsItem);
    return this;
  }

   /**
   * Get topicFeaturedLinkAllowedCategoryIds
   * @return topicFeaturedLinkAllowedCategoryIds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getTopicFeaturedLinkAllowedCategoryIds() {
    return topicFeaturedLinkAllowedCategoryIds;
  }


  public void setTopicFeaturedLinkAllowedCategoryIds(List<Object> topicFeaturedLinkAllowedCategoryIds) {
    
    
    
    this.topicFeaturedLinkAllowedCategoryIds = topicFeaturedLinkAllowedCategoryIds;
  }


  public SiteGetCategoriesAndSubcategoriesResponse userThemes(List<SiteGetCategoriesAndSubcategoriesResponseUserThemesInner> userThemes) {
    
    
    
    
    this.userThemes = userThemes;
    return this;
  }

  public SiteGetCategoriesAndSubcategoriesResponse addUserThemesItem(SiteGetCategoriesAndSubcategoriesResponseUserThemesInner userThemesItem) {
    this.userThemes.add(userThemesItem);
    return this;
  }

   /**
   * Get userThemes
   * @return userThemes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<SiteGetCategoriesAndSubcategoriesResponseUserThemesInner> getUserThemes() {
    return userThemes;
  }


  public void setUserThemes(List<SiteGetCategoriesAndSubcategoriesResponseUserThemesInner> userThemes) {
    
    
    
    this.userThemes = userThemes;
  }


  public SiteGetCategoriesAndSubcategoriesResponse userColorSchemes(List<SiteGetCategoriesAndSubcategoriesResponseUserColorSchemesInner> userColorSchemes) {
    
    
    
    
    this.userColorSchemes = userColorSchemes;
    return this;
  }

  public SiteGetCategoriesAndSubcategoriesResponse addUserColorSchemesItem(SiteGetCategoriesAndSubcategoriesResponseUserColorSchemesInner userColorSchemesItem) {
    this.userColorSchemes.add(userColorSchemesItem);
    return this;
  }

   /**
   * Get userColorSchemes
   * @return userColorSchemes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<SiteGetCategoriesAndSubcategoriesResponseUserColorSchemesInner> getUserColorSchemes() {
    return userColorSchemes;
  }


  public void setUserColorSchemes(List<SiteGetCategoriesAndSubcategoriesResponseUserColorSchemesInner> userColorSchemes) {
    
    
    
    this.userColorSchemes = userColorSchemes;
  }


  public SiteGetCategoriesAndSubcategoriesResponse defaultDarkColorScheme(Object defaultDarkColorScheme) {
    
    
    
    
    this.defaultDarkColorScheme = defaultDarkColorScheme;
    return this;
  }

   /**
   * Get defaultDarkColorScheme
   * @return defaultDarkColorScheme
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getDefaultDarkColorScheme() {
    return defaultDarkColorScheme;
  }


  public void setDefaultDarkColorScheme(Object defaultDarkColorScheme) {
    
    
    
    this.defaultDarkColorScheme = defaultDarkColorScheme;
  }


  public SiteGetCategoriesAndSubcategoriesResponse censoredRegexp(List<Object> censoredRegexp) {
    
    
    
    
    this.censoredRegexp = censoredRegexp;
    return this;
  }

  public SiteGetCategoriesAndSubcategoriesResponse addCensoredRegexpItem(Object censoredRegexpItem) {
    this.censoredRegexp.add(censoredRegexpItem);
    return this;
  }

   /**
   * Get censoredRegexp
   * @return censoredRegexp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getCensoredRegexp() {
    return censoredRegexp;
  }


  public void setCensoredRegexp(List<Object> censoredRegexp) {
    
    
    
    this.censoredRegexp = censoredRegexp;
  }


  public SiteGetCategoriesAndSubcategoriesResponse customEmojiTranslation(Object customEmojiTranslation) {
    
    
    
    
    this.customEmojiTranslation = customEmojiTranslation;
    return this;
  }

   /**
   * Get customEmojiTranslation
   * @return customEmojiTranslation
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Object getCustomEmojiTranslation() {
    return customEmojiTranslation;
  }


  public void setCustomEmojiTranslation(Object customEmojiTranslation) {
    
    
    
    this.customEmojiTranslation = customEmojiTranslation;
  }


  public SiteGetCategoriesAndSubcategoriesResponse watchedWordsReplace(Object watchedWordsReplace) {
    
    
    
    
    this.watchedWordsReplace = watchedWordsReplace;
    return this;
  }

   /**
   * Get watchedWordsReplace
   * @return watchedWordsReplace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getWatchedWordsReplace() {
    return watchedWordsReplace;
  }


  public void setWatchedWordsReplace(Object watchedWordsReplace) {
    
    
    
    this.watchedWordsReplace = watchedWordsReplace;
  }


  public SiteGetCategoriesAndSubcategoriesResponse watchedWordsLink(Object watchedWordsLink) {
    
    
    
    
    this.watchedWordsLink = watchedWordsLink;
    return this;
  }

   /**
   * Get watchedWordsLink
   * @return watchedWordsLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getWatchedWordsLink() {
    return watchedWordsLink;
  }


  public void setWatchedWordsLink(Object watchedWordsLink) {
    
    
    
    this.watchedWordsLink = watchedWordsLink;
  }


  public SiteGetCategoriesAndSubcategoriesResponse markdownAdditionalOptions(Object markdownAdditionalOptions) {
    
    
    
    
    this.markdownAdditionalOptions = markdownAdditionalOptions;
    return this;
  }

   /**
   * Get markdownAdditionalOptions
   * @return markdownAdditionalOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getMarkdownAdditionalOptions() {
    return markdownAdditionalOptions;
  }


  public void setMarkdownAdditionalOptions(Object markdownAdditionalOptions) {
    
    
    
    this.markdownAdditionalOptions = markdownAdditionalOptions;
  }


  public SiteGetCategoriesAndSubcategoriesResponse hashtagConfigurations(Object hashtagConfigurations) {
    
    
    
    
    this.hashtagConfigurations = hashtagConfigurations;
    return this;
  }

   /**
   * Get hashtagConfigurations
   * @return hashtagConfigurations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getHashtagConfigurations() {
    return hashtagConfigurations;
  }


  public void setHashtagConfigurations(Object hashtagConfigurations) {
    
    
    
    this.hashtagConfigurations = hashtagConfigurations;
  }


  public SiteGetCategoriesAndSubcategoriesResponse hashtagIcons(Object hashtagIcons) {
    
    
    
    
    this.hashtagIcons = hashtagIcons;
    return this;
  }

   /**
   * Get hashtagIcons
   * @return hashtagIcons
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getHashtagIcons() {
    return hashtagIcons;
  }


  public void setHashtagIcons(Object hashtagIcons) {
    
    
    
    this.hashtagIcons = hashtagIcons;
  }


  public SiteGetCategoriesAndSubcategoriesResponse displayedAboutPluginStatGroups(List displayedAboutPluginStatGroups) {
    
    
    
    
    this.displayedAboutPluginStatGroups = displayedAboutPluginStatGroups;
    return this;
  }

   /**
   * Get displayedAboutPluginStatGroups
   * @return displayedAboutPluginStatGroups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List getDisplayedAboutPluginStatGroups() {
    return displayedAboutPluginStatGroups;
  }


  public void setDisplayedAboutPluginStatGroups(List displayedAboutPluginStatGroups) {
    
    
    
    this.displayedAboutPluginStatGroups = displayedAboutPluginStatGroups;
  }


  public SiteGetCategoriesAndSubcategoriesResponse categories(List<SiteGetCategoriesAndSubcategoriesResponseCategoriesInner> categories) {
    
    
    
    
    this.categories = categories;
    return this;
  }

  public SiteGetCategoriesAndSubcategoriesResponse addCategoriesItem(SiteGetCategoriesAndSubcategoriesResponseCategoriesInner categoriesItem) {
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Get categories
   * @return categories
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<SiteGetCategoriesAndSubcategoriesResponseCategoriesInner> getCategories() {
    return categories;
  }


  public void setCategories(List<SiteGetCategoriesAndSubcategoriesResponseCategoriesInner> categories) {
    
    
    
    this.categories = categories;
  }


  public SiteGetCategoriesAndSubcategoriesResponse archetypes(List<SiteGetCategoriesAndSubcategoriesResponseArchetypesInner> archetypes) {
    
    
    
    
    this.archetypes = archetypes;
    return this;
  }

  public SiteGetCategoriesAndSubcategoriesResponse addArchetypesItem(SiteGetCategoriesAndSubcategoriesResponseArchetypesInner archetypesItem) {
    this.archetypes.add(archetypesItem);
    return this;
  }

   /**
   * Get archetypes
   * @return archetypes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<SiteGetCategoriesAndSubcategoriesResponseArchetypesInner> getArchetypes() {
    return archetypes;
  }


  public void setArchetypes(List<SiteGetCategoriesAndSubcategoriesResponseArchetypesInner> archetypes) {
    
    
    
    this.archetypes = archetypes;
  }


  public SiteGetCategoriesAndSubcategoriesResponse userFields(List<Object> userFields) {
    
    
    
    
    this.userFields = userFields;
    return this;
  }

  public SiteGetCategoriesAndSubcategoriesResponse addUserFieldsItem(Object userFieldsItem) {
    this.userFields.add(userFieldsItem);
    return this;
  }

   /**
   * Get userFields
   * @return userFields
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getUserFields() {
    return userFields;
  }


  public void setUserFields(List<Object> userFields) {
    
    
    
    this.userFields = userFields;
  }


  public SiteGetCategoriesAndSubcategoriesResponse authProviders(List<Object> authProviders) {
    
    
    
    
    this.authProviders = authProviders;
    return this;
  }

  public SiteGetCategoriesAndSubcategoriesResponse addAuthProvidersItem(Object authProvidersItem) {
    this.authProviders.add(authProvidersItem);
    return this;
  }

   /**
   * Get authProviders
   * @return authProviders
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getAuthProviders() {
    return authProviders;
  }


  public void setAuthProviders(List<Object> authProviders) {
    
    
    
    this.authProviders = authProviders;
  }


  public SiteGetCategoriesAndSubcategoriesResponse whispersAllowedGroupsNames(List whispersAllowedGroupsNames) {
    
    
    
    
    this.whispersAllowedGroupsNames = whispersAllowedGroupsNames;
    return this;
  }

   /**
   * Get whispersAllowedGroupsNames
   * @return whispersAllowedGroupsNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List getWhispersAllowedGroupsNames() {
    return whispersAllowedGroupsNames;
  }


  public void setWhispersAllowedGroupsNames(List whispersAllowedGroupsNames) {
    
    
    
    this.whispersAllowedGroupsNames = whispersAllowedGroupsNames;
  }


  public SiteGetCategoriesAndSubcategoriesResponse deniedEmojis(List deniedEmojis) {
    
    
    
    
    this.deniedEmojis = deniedEmojis;
    return this;
  }

   /**
   * Get deniedEmojis
   * @return deniedEmojis
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List getDeniedEmojis() {
    return deniedEmojis;
  }


  public void setDeniedEmojis(List deniedEmojis) {
    
    
    
    this.deniedEmojis = deniedEmojis;
  }


  public SiteGetCategoriesAndSubcategoriesResponse navigationMenuSiteTopTags(List navigationMenuSiteTopTags) {
    
    
    
    
    this.navigationMenuSiteTopTags = navigationMenuSiteTopTags;
    return this;
  }

   /**
   * Get navigationMenuSiteTopTags
   * @return navigationMenuSiteTopTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List getNavigationMenuSiteTopTags() {
    return navigationMenuSiteTopTags;
  }


  public void setNavigationMenuSiteTopTags(List navigationMenuSiteTopTags) {
    
    
    
    this.navigationMenuSiteTopTags = navigationMenuSiteTopTags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SiteGetCategoriesAndSubcategoriesResponse siteGetCategoriesAndSubcategoriesResponse = (SiteGetCategoriesAndSubcategoriesResponse) o;
    return Objects.equals(this.defaultArchetype, siteGetCategoriesAndSubcategoriesResponse.defaultArchetype) &&
        Objects.equals(this.notificationTypes, siteGetCategoriesAndSubcategoriesResponse.notificationTypes) &&
        Objects.equals(this.postTypes, siteGetCategoriesAndSubcategoriesResponse.postTypes) &&
        Objects.equals(this.trustLevels, siteGetCategoriesAndSubcategoriesResponse.trustLevels) &&
        Objects.equals(this.userTips, siteGetCategoriesAndSubcategoriesResponse.userTips) &&
        Objects.equals(this.groups, siteGetCategoriesAndSubcategoriesResponse.groups) &&
        Objects.equals(this.filters, siteGetCategoriesAndSubcategoriesResponse.filters) &&
        Objects.equals(this.periods, siteGetCategoriesAndSubcategoriesResponse.periods) &&
        Objects.equals(this.topMenuItems, siteGetCategoriesAndSubcategoriesResponse.topMenuItems) &&
        Objects.equals(this.anonymousTopMenuItems, siteGetCategoriesAndSubcategoriesResponse.anonymousTopMenuItems) &&
        Objects.equals(this.uncategorizedCategoryId, siteGetCategoriesAndSubcategoriesResponse.uncategorizedCategoryId) &&
        Objects.equals(this.userFieldMaxLength, siteGetCategoriesAndSubcategoriesResponse.userFieldMaxLength) &&
        Objects.equals(this.postActionTypes, siteGetCategoriesAndSubcategoriesResponse.postActionTypes) &&
        Objects.equals(this.topicFlagTypes, siteGetCategoriesAndSubcategoriesResponse.topicFlagTypes) &&
        Objects.equals(this.canCreateTag, siteGetCategoriesAndSubcategoriesResponse.canCreateTag) &&
        Objects.equals(this.canTagTopics, siteGetCategoriesAndSubcategoriesResponse.canTagTopics) &&
        Objects.equals(this.canTagPms, siteGetCategoriesAndSubcategoriesResponse.canTagPms) &&
        Objects.equals(this.tagsFilterRegexp, siteGetCategoriesAndSubcategoriesResponse.tagsFilterRegexp) &&
        Objects.equals(this.topTags, siteGetCategoriesAndSubcategoriesResponse.topTags) &&
        Objects.equals(this.wizardRequired, siteGetCategoriesAndSubcategoriesResponse.wizardRequired) &&
        Objects.equals(this.canAssociateGroups, siteGetCategoriesAndSubcategoriesResponse.canAssociateGroups) &&
        Objects.equals(this.topicFeaturedLinkAllowedCategoryIds, siteGetCategoriesAndSubcategoriesResponse.topicFeaturedLinkAllowedCategoryIds) &&
        Objects.equals(this.userThemes, siteGetCategoriesAndSubcategoriesResponse.userThemes) &&
        Objects.equals(this.userColorSchemes, siteGetCategoriesAndSubcategoriesResponse.userColorSchemes) &&
        Objects.equals(this.defaultDarkColorScheme, siteGetCategoriesAndSubcategoriesResponse.defaultDarkColorScheme) &&
        Objects.equals(this.censoredRegexp, siteGetCategoriesAndSubcategoriesResponse.censoredRegexp) &&
        Objects.equals(this.customEmojiTranslation, siteGetCategoriesAndSubcategoriesResponse.customEmojiTranslation) &&
        Objects.equals(this.watchedWordsReplace, siteGetCategoriesAndSubcategoriesResponse.watchedWordsReplace) &&
        Objects.equals(this.watchedWordsLink, siteGetCategoriesAndSubcategoriesResponse.watchedWordsLink) &&
        Objects.equals(this.markdownAdditionalOptions, siteGetCategoriesAndSubcategoriesResponse.markdownAdditionalOptions) &&
        Objects.equals(this.hashtagConfigurations, siteGetCategoriesAndSubcategoriesResponse.hashtagConfigurations) &&
        Objects.equals(this.hashtagIcons, siteGetCategoriesAndSubcategoriesResponse.hashtagIcons) &&
        Objects.equals(this.displayedAboutPluginStatGroups, siteGetCategoriesAndSubcategoriesResponse.displayedAboutPluginStatGroups) &&
        Objects.equals(this.categories, siteGetCategoriesAndSubcategoriesResponse.categories) &&
        Objects.equals(this.archetypes, siteGetCategoriesAndSubcategoriesResponse.archetypes) &&
        Objects.equals(this.userFields, siteGetCategoriesAndSubcategoriesResponse.userFields) &&
        Objects.equals(this.authProviders, siteGetCategoriesAndSubcategoriesResponse.authProviders) &&
        Objects.equals(this.whispersAllowedGroupsNames, siteGetCategoriesAndSubcategoriesResponse.whispersAllowedGroupsNames) &&
        Objects.equals(this.deniedEmojis, siteGetCategoriesAndSubcategoriesResponse.deniedEmojis) &&
        Objects.equals(this.navigationMenuSiteTopTags, siteGetCategoriesAndSubcategoriesResponse.navigationMenuSiteTopTags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultArchetype, notificationTypes, postTypes, trustLevels, userTips, groups, filters, periods, topMenuItems, anonymousTopMenuItems, uncategorizedCategoryId, userFieldMaxLength, postActionTypes, topicFlagTypes, canCreateTag, canTagTopics, canTagPms, tagsFilterRegexp, topTags, wizardRequired, canAssociateGroups, topicFeaturedLinkAllowedCategoryIds, userThemes, userColorSchemes, defaultDarkColorScheme, censoredRegexp, customEmojiTranslation, watchedWordsReplace, watchedWordsLink, markdownAdditionalOptions, hashtagConfigurations, hashtagIcons, displayedAboutPluginStatGroups, categories, archetypes, userFields, authProviders, whispersAllowedGroupsNames, deniedEmojis, navigationMenuSiteTopTags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SiteGetCategoriesAndSubcategoriesResponse {\n");
    sb.append("    defaultArchetype: ").append(toIndentedString(defaultArchetype)).append("\n");
    sb.append("    notificationTypes: ").append(toIndentedString(notificationTypes)).append("\n");
    sb.append("    postTypes: ").append(toIndentedString(postTypes)).append("\n");
    sb.append("    trustLevels: ").append(toIndentedString(trustLevels)).append("\n");
    sb.append("    userTips: ").append(toIndentedString(userTips)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    periods: ").append(toIndentedString(periods)).append("\n");
    sb.append("    topMenuItems: ").append(toIndentedString(topMenuItems)).append("\n");
    sb.append("    anonymousTopMenuItems: ").append(toIndentedString(anonymousTopMenuItems)).append("\n");
    sb.append("    uncategorizedCategoryId: ").append(toIndentedString(uncategorizedCategoryId)).append("\n");
    sb.append("    userFieldMaxLength: ").append(toIndentedString(userFieldMaxLength)).append("\n");
    sb.append("    postActionTypes: ").append(toIndentedString(postActionTypes)).append("\n");
    sb.append("    topicFlagTypes: ").append(toIndentedString(topicFlagTypes)).append("\n");
    sb.append("    canCreateTag: ").append(toIndentedString(canCreateTag)).append("\n");
    sb.append("    canTagTopics: ").append(toIndentedString(canTagTopics)).append("\n");
    sb.append("    canTagPms: ").append(toIndentedString(canTagPms)).append("\n");
    sb.append("    tagsFilterRegexp: ").append(toIndentedString(tagsFilterRegexp)).append("\n");
    sb.append("    topTags: ").append(toIndentedString(topTags)).append("\n");
    sb.append("    wizardRequired: ").append(toIndentedString(wizardRequired)).append("\n");
    sb.append("    canAssociateGroups: ").append(toIndentedString(canAssociateGroups)).append("\n");
    sb.append("    topicFeaturedLinkAllowedCategoryIds: ").append(toIndentedString(topicFeaturedLinkAllowedCategoryIds)).append("\n");
    sb.append("    userThemes: ").append(toIndentedString(userThemes)).append("\n");
    sb.append("    userColorSchemes: ").append(toIndentedString(userColorSchemes)).append("\n");
    sb.append("    defaultDarkColorScheme: ").append(toIndentedString(defaultDarkColorScheme)).append("\n");
    sb.append("    censoredRegexp: ").append(toIndentedString(censoredRegexp)).append("\n");
    sb.append("    customEmojiTranslation: ").append(toIndentedString(customEmojiTranslation)).append("\n");
    sb.append("    watchedWordsReplace: ").append(toIndentedString(watchedWordsReplace)).append("\n");
    sb.append("    watchedWordsLink: ").append(toIndentedString(watchedWordsLink)).append("\n");
    sb.append("    markdownAdditionalOptions: ").append(toIndentedString(markdownAdditionalOptions)).append("\n");
    sb.append("    hashtagConfigurations: ").append(toIndentedString(hashtagConfigurations)).append("\n");
    sb.append("    hashtagIcons: ").append(toIndentedString(hashtagIcons)).append("\n");
    sb.append("    displayedAboutPluginStatGroups: ").append(toIndentedString(displayedAboutPluginStatGroups)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    archetypes: ").append(toIndentedString(archetypes)).append("\n");
    sb.append("    userFields: ").append(toIndentedString(userFields)).append("\n");
    sb.append("    authProviders: ").append(toIndentedString(authProviders)).append("\n");
    sb.append("    whispersAllowedGroupsNames: ").append(toIndentedString(whispersAllowedGroupsNames)).append("\n");
    sb.append("    deniedEmojis: ").append(toIndentedString(deniedEmojis)).append("\n");
    sb.append("    navigationMenuSiteTopTags: ").append(toIndentedString(navigationMenuSiteTopTags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("default_archetype");
    openapiFields.add("notification_types");
    openapiFields.add("post_types");
    openapiFields.add("trust_levels");
    openapiFields.add("user_tips");
    openapiFields.add("groups");
    openapiFields.add("filters");
    openapiFields.add("periods");
    openapiFields.add("top_menu_items");
    openapiFields.add("anonymous_top_menu_items");
    openapiFields.add("uncategorized_category_id");
    openapiFields.add("user_field_max_length");
    openapiFields.add("post_action_types");
    openapiFields.add("topic_flag_types");
    openapiFields.add("can_create_tag");
    openapiFields.add("can_tag_topics");
    openapiFields.add("can_tag_pms");
    openapiFields.add("tags_filter_regexp");
    openapiFields.add("top_tags");
    openapiFields.add("wizard_required");
    openapiFields.add("can_associate_groups");
    openapiFields.add("topic_featured_link_allowed_category_ids");
    openapiFields.add("user_themes");
    openapiFields.add("user_color_schemes");
    openapiFields.add("default_dark_color_scheme");
    openapiFields.add("censored_regexp");
    openapiFields.add("custom_emoji_translation");
    openapiFields.add("watched_words_replace");
    openapiFields.add("watched_words_link");
    openapiFields.add("markdown_additional_options");
    openapiFields.add("hashtag_configurations");
    openapiFields.add("hashtag_icons");
    openapiFields.add("displayed_about_plugin_stat_groups");
    openapiFields.add("categories");
    openapiFields.add("archetypes");
    openapiFields.add("user_fields");
    openapiFields.add("auth_providers");
    openapiFields.add("whispers_allowed_groups_names");
    openapiFields.add("denied_emojis");
    openapiFields.add("navigation_menu_site_top_tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("default_archetype");
    openapiRequiredFields.add("notification_types");
    openapiRequiredFields.add("post_types");
    openapiRequiredFields.add("trust_levels");
    openapiRequiredFields.add("groups");
    openapiRequiredFields.add("filters");
    openapiRequiredFields.add("periods");
    openapiRequiredFields.add("top_menu_items");
    openapiRequiredFields.add("anonymous_top_menu_items");
    openapiRequiredFields.add("uncategorized_category_id");
    openapiRequiredFields.add("user_field_max_length");
    openapiRequiredFields.add("post_action_types");
    openapiRequiredFields.add("topic_flag_types");
    openapiRequiredFields.add("can_create_tag");
    openapiRequiredFields.add("can_tag_topics");
    openapiRequiredFields.add("can_tag_pms");
    openapiRequiredFields.add("tags_filter_regexp");
    openapiRequiredFields.add("top_tags");
    openapiRequiredFields.add("topic_featured_link_allowed_category_ids");
    openapiRequiredFields.add("user_themes");
    openapiRequiredFields.add("user_color_schemes");
    openapiRequiredFields.add("default_dark_color_scheme");
    openapiRequiredFields.add("censored_regexp");
    openapiRequiredFields.add("custom_emoji_translation");
    openapiRequiredFields.add("watched_words_replace");
    openapiRequiredFields.add("watched_words_link");
    openapiRequiredFields.add("categories");
    openapiRequiredFields.add("archetypes");
    openapiRequiredFields.add("user_fields");
    openapiRequiredFields.add("auth_providers");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SiteGetCategoriesAndSubcategoriesResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SiteGetCategoriesAndSubcategoriesResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SiteGetCategoriesAndSubcategoriesResponse is not found in the empty JSON string", SiteGetCategoriesAndSubcategoriesResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!SiteGetCategoriesAndSubcategoriesResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SiteGetCategoriesAndSubcategoriesResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SiteGetCategoriesAndSubcategoriesResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("default_archetype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_archetype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_archetype").toString()));
      }
      // validate the required field `notification_types`
      SiteGetCategoriesAndSubcategoriesResponseNotificationTypes.validateJsonObject(jsonObj.getAsJsonObject("notification_types"));
      // validate the required field `post_types`
      SiteGetCategoriesAndSubcategoriesResponsePostTypes.validateJsonObject(jsonObj.getAsJsonObject("post_types"));
      // validate the required field `trust_levels`
      SiteGetCategoriesAndSubcategoriesResponseTrustLevels.validateJsonObject(jsonObj.getAsJsonObject("trust_levels"));
      // validate the optional field `user_tips`
      if (jsonObj.get("user_tips") != null && !jsonObj.get("user_tips").isJsonNull()) {
        SiteGetCategoriesAndSubcategoriesResponseUserTips.validateJsonObject(jsonObj.getAsJsonObject("user_tips"));
      }
      // ensure the json data is an array
      if (!jsonObj.get("groups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `groups` to be an array in the JSON string but got `%s`", jsonObj.get("groups").toString()));
      }

      JsonArray jsonArraygroups = jsonObj.getAsJsonArray("groups");
      // validate the required field `groups` (array)
      for (int i = 0; i < jsonArraygroups.size(); i++) {
        SiteGetCategoriesAndSubcategoriesResponseGroupsInner.validateJsonObject(jsonArraygroups.get(i).getAsJsonObject());
      };
      // ensure the required json array is present
      if (jsonObj.get("filters") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("filters").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `filters` to be an array in the JSON string but got `%s`", jsonObj.get("filters").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("periods") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("periods").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `periods` to be an array in the JSON string but got `%s`", jsonObj.get("periods").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("top_menu_items") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("top_menu_items").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `top_menu_items` to be an array in the JSON string but got `%s`", jsonObj.get("top_menu_items").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("anonymous_top_menu_items") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("anonymous_top_menu_items").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `anonymous_top_menu_items` to be an array in the JSON string but got `%s`", jsonObj.get("anonymous_top_menu_items").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("post_action_types").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `post_action_types` to be an array in the JSON string but got `%s`", jsonObj.get("post_action_types").toString()));
      }

      JsonArray jsonArraypostActionTypes = jsonObj.getAsJsonArray("post_action_types");
      // validate the required field `post_action_types` (array)
      for (int i = 0; i < jsonArraypostActionTypes.size(); i++) {
        SiteGetCategoriesAndSubcategoriesResponsePostActionTypesInner.validateJsonObject(jsonArraypostActionTypes.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("topic_flag_types").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `topic_flag_types` to be an array in the JSON string but got `%s`", jsonObj.get("topic_flag_types").toString()));
      }

      JsonArray jsonArraytopicFlagTypes = jsonObj.getAsJsonArray("topic_flag_types");
      // validate the required field `topic_flag_types` (array)
      for (int i = 0; i < jsonArraytopicFlagTypes.size(); i++) {
        SiteGetCategoriesAndSubcategoriesResponsePostActionTypesInner.validateJsonObject(jsonArraytopicFlagTypes.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("tags_filter_regexp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags_filter_regexp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tags_filter_regexp").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("top_tags") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("top_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `top_tags` to be an array in the JSON string but got `%s`", jsonObj.get("top_tags").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("topic_featured_link_allowed_category_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("topic_featured_link_allowed_category_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `topic_featured_link_allowed_category_ids` to be an array in the JSON string but got `%s`", jsonObj.get("topic_featured_link_allowed_category_ids").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("user_themes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_themes` to be an array in the JSON string but got `%s`", jsonObj.get("user_themes").toString()));
      }

      JsonArray jsonArrayuserThemes = jsonObj.getAsJsonArray("user_themes");
      // validate the required field `user_themes` (array)
      for (int i = 0; i < jsonArrayuserThemes.size(); i++) {
        SiteGetCategoriesAndSubcategoriesResponseUserThemesInner.validateJsonObject(jsonArrayuserThemes.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("user_color_schemes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_color_schemes` to be an array in the JSON string but got `%s`", jsonObj.get("user_color_schemes").toString()));
      }

      JsonArray jsonArrayuserColorSchemes = jsonObj.getAsJsonArray("user_color_schemes");
      // validate the required field `user_color_schemes` (array)
      for (int i = 0; i < jsonArrayuserColorSchemes.size(); i++) {
        SiteGetCategoriesAndSubcategoriesResponseUserColorSchemesInner.validateJsonObject(jsonArrayuserColorSchemes.get(i).getAsJsonObject());
      };
      // ensure the required json array is present
      if (jsonObj.get("censored_regexp") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("censored_regexp").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `censored_regexp` to be an array in the JSON string but got `%s`", jsonObj.get("censored_regexp").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("categories").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `categories` to be an array in the JSON string but got `%s`", jsonObj.get("categories").toString()));
      }

      JsonArray jsonArraycategories = jsonObj.getAsJsonArray("categories");
      // validate the required field `categories` (array)
      for (int i = 0; i < jsonArraycategories.size(); i++) {
        SiteGetCategoriesAndSubcategoriesResponseCategoriesInner.validateJsonObject(jsonArraycategories.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("archetypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `archetypes` to be an array in the JSON string but got `%s`", jsonObj.get("archetypes").toString()));
      }

      JsonArray jsonArrayarchetypes = jsonObj.getAsJsonArray("archetypes");
      // validate the required field `archetypes` (array)
      for (int i = 0; i < jsonArrayarchetypes.size(); i++) {
        SiteGetCategoriesAndSubcategoriesResponseArchetypesInner.validateJsonObject(jsonArrayarchetypes.get(i).getAsJsonObject());
      };
      // ensure the required json array is present
      if (jsonObj.get("user_fields") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("user_fields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_fields` to be an array in the JSON string but got `%s`", jsonObj.get("user_fields").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("auth_providers") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("auth_providers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `auth_providers` to be an array in the JSON string but got `%s`", jsonObj.get("auth_providers").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SiteGetCategoriesAndSubcategoriesResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SiteGetCategoriesAndSubcategoriesResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SiteGetCategoriesAndSubcategoriesResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SiteGetCategoriesAndSubcategoriesResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<SiteGetCategoriesAndSubcategoriesResponse>() {
           @Override
           public void write(JsonWriter out, SiteGetCategoriesAndSubcategoriesResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SiteGetCategoriesAndSubcategoriesResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SiteGetCategoriesAndSubcategoriesResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SiteGetCategoriesAndSubcategoriesResponse
  * @throws IOException if the JSON string is invalid with respect to SiteGetCategoriesAndSubcategoriesResponse
  */
  public static SiteGetCategoriesAndSubcategoriesResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SiteGetCategoriesAndSubcategoriesResponse.class);
  }

 /**
  * Convert an instance of SiteGetCategoriesAndSubcategoriesResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

