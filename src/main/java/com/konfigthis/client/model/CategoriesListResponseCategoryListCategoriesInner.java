/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CategoriesListResponseCategoryListCategoriesInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CategoriesListResponseCategoryListCategoriesInner {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private Object description = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_COLOR = "color";
  @SerializedName(SERIALIZED_NAME_COLOR)
  private String color;

  public static final String SERIALIZED_NAME_TEXT_COLOR = "text_color";
  @SerializedName(SERIALIZED_NAME_TEXT_COLOR)
  private String textColor;

  public static final String SERIALIZED_NAME_SLUG = "slug";
  @SerializedName(SERIALIZED_NAME_SLUG)
  private String slug;

  public static final String SERIALIZED_NAME_TOPIC_COUNT = "topic_count";
  @SerializedName(SERIALIZED_NAME_TOPIC_COUNT)
  private Integer topicCount;

  public static final String SERIALIZED_NAME_POST_COUNT = "post_count";
  @SerializedName(SERIALIZED_NAME_POST_COUNT)
  private Integer postCount;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private Integer position;

  public static final String SERIALIZED_NAME_DESCRIPTION_TEXT = "description_text";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_TEXT)
  private Object descriptionText = null;

  public static final String SERIALIZED_NAME_DESCRIPTION_EXCERPT = "description_excerpt";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_EXCERPT)
  private Object descriptionExcerpt = null;

  public static final String SERIALIZED_NAME_TOPIC_URL = "topic_url";
  @SerializedName(SERIALIZED_NAME_TOPIC_URL)
  private Object topicUrl = null;

  public static final String SERIALIZED_NAME_READ_RESTRICTED = "read_restricted";
  @SerializedName(SERIALIZED_NAME_READ_RESTRICTED)
  private Boolean readRestricted;

  public static final String SERIALIZED_NAME_PERMISSION = "permission";
  @SerializedName(SERIALIZED_NAME_PERMISSION)
  private Integer permission;

  public static final String SERIALIZED_NAME_NOTIFICATION_LEVEL = "notification_level";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_LEVEL)
  private Integer notificationLevel;

  public static final String SERIALIZED_NAME_CAN_EDIT = "can_edit";
  @SerializedName(SERIALIZED_NAME_CAN_EDIT)
  private Boolean canEdit;

  public static final String SERIALIZED_NAME_TOPIC_TEMPLATE = "topic_template";
  @SerializedName(SERIALIZED_NAME_TOPIC_TEMPLATE)
  private Object topicTemplate = null;

  public static final String SERIALIZED_NAME_HAS_CHILDREN = "has_children";
  @SerializedName(SERIALIZED_NAME_HAS_CHILDREN)
  private Boolean hasChildren;

  public static final String SERIALIZED_NAME_SORT_ORDER = "sort_order";
  @SerializedName(SERIALIZED_NAME_SORT_ORDER)
  private Object sortOrder = null;

  public static final String SERIALIZED_NAME_SORT_ASCENDING = "sort_ascending";
  @SerializedName(SERIALIZED_NAME_SORT_ASCENDING)
  private Object sortAscending = null;

  public static final String SERIALIZED_NAME_SHOW_SUBCATEGORY_LIST = "show_subcategory_list";
  @SerializedName(SERIALIZED_NAME_SHOW_SUBCATEGORY_LIST)
  private Boolean showSubcategoryList;

  public static final String SERIALIZED_NAME_NUM_FEATURED_TOPICS = "num_featured_topics";
  @SerializedName(SERIALIZED_NAME_NUM_FEATURED_TOPICS)
  private Integer numFeaturedTopics;

  public static final String SERIALIZED_NAME_DEFAULT_VIEW = "default_view";
  @SerializedName(SERIALIZED_NAME_DEFAULT_VIEW)
  private Object defaultView = null;

  public static final String SERIALIZED_NAME_SUBCATEGORY_LIST_STYLE = "subcategory_list_style";
  @SerializedName(SERIALIZED_NAME_SUBCATEGORY_LIST_STYLE)
  private String subcategoryListStyle;

  public static final String SERIALIZED_NAME_DEFAULT_TOP_PERIOD = "default_top_period";
  @SerializedName(SERIALIZED_NAME_DEFAULT_TOP_PERIOD)
  private String defaultTopPeriod;

  public static final String SERIALIZED_NAME_DEFAULT_LIST_FILTER = "default_list_filter";
  @SerializedName(SERIALIZED_NAME_DEFAULT_LIST_FILTER)
  private String defaultListFilter;

  public static final String SERIALIZED_NAME_MINIMUM_REQUIRED_TAGS = "minimum_required_tags";
  @SerializedName(SERIALIZED_NAME_MINIMUM_REQUIRED_TAGS)
  private Integer minimumRequiredTags;

  public static final String SERIALIZED_NAME_NAVIGATE_TO_FIRST_POST_AFTER_READ = "navigate_to_first_post_after_read";
  @SerializedName(SERIALIZED_NAME_NAVIGATE_TO_FIRST_POST_AFTER_READ)
  private Boolean navigateToFirstPostAfterRead;

  public static final String SERIALIZED_NAME_TOPICS_DAY = "topics_day";
  @SerializedName(SERIALIZED_NAME_TOPICS_DAY)
  private Integer topicsDay;

  public static final String SERIALIZED_NAME_TOPICS_WEEK = "topics_week";
  @SerializedName(SERIALIZED_NAME_TOPICS_WEEK)
  private Integer topicsWeek;

  public static final String SERIALIZED_NAME_TOPICS_MONTH = "topics_month";
  @SerializedName(SERIALIZED_NAME_TOPICS_MONTH)
  private Integer topicsMonth;

  public static final String SERIALIZED_NAME_TOPICS_YEAR = "topics_year";
  @SerializedName(SERIALIZED_NAME_TOPICS_YEAR)
  private Integer topicsYear;

  public static final String SERIALIZED_NAME_TOPICS_ALL_TIME = "topics_all_time";
  @SerializedName(SERIALIZED_NAME_TOPICS_ALL_TIME)
  private Integer topicsAllTime;

  public static final String SERIALIZED_NAME_IS_UNCATEGORIZED = "is_uncategorized";
  @SerializedName(SERIALIZED_NAME_IS_UNCATEGORIZED)
  private Boolean isUncategorized;

  public static final String SERIALIZED_NAME_SUBCATEGORY_IDS = "subcategory_ids";
  @SerializedName(SERIALIZED_NAME_SUBCATEGORY_IDS)
  private List<Object> subcategoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUBCATEGORY_LIST = "subcategory_list";
  @SerializedName(SERIALIZED_NAME_SUBCATEGORY_LIST)
  private List<Object> subcategoryList = null;

  public static final String SERIALIZED_NAME_UPLOADED_LOGO = "uploaded_logo";
  @SerializedName(SERIALIZED_NAME_UPLOADED_LOGO)
  private Object uploadedLogo = null;

  public static final String SERIALIZED_NAME_UPLOADED_LOGO_DARK = "uploaded_logo_dark";
  @SerializedName(SERIALIZED_NAME_UPLOADED_LOGO_DARK)
  private Object uploadedLogoDark = null;

  public static final String SERIALIZED_NAME_UPLOADED_BACKGROUND = "uploaded_background";
  @SerializedName(SERIALIZED_NAME_UPLOADED_BACKGROUND)
  private Object uploadedBackground = null;

  public static final String SERIALIZED_NAME_UPLOADED_BACKGROUND_DARK = "uploaded_background_dark";
  @SerializedName(SERIALIZED_NAME_UPLOADED_BACKGROUND_DARK)
  private Object uploadedBackgroundDark = null;

  public CategoriesListResponseCategoryListCategoriesInner() {
  }

  public CategoriesListResponseCategoryListCategoriesInner description(Object description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getDescription() {
    return description;
  }


  public void setDescription(Object description) {
    
    
    
    this.description = description;
  }


  public CategoriesListResponseCategoryListCategoriesInner id(Integer id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    
    
    
    this.id = id;
  }


  public CategoriesListResponseCategoryListCategoriesInner name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public CategoriesListResponseCategoryListCategoriesInner color(String color) {
    
    
    
    
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getColor() {
    return color;
  }


  public void setColor(String color) {
    
    
    
    this.color = color;
  }


  public CategoriesListResponseCategoryListCategoriesInner textColor(String textColor) {
    
    
    
    
    this.textColor = textColor;
    return this;
  }

   /**
   * Get textColor
   * @return textColor
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getTextColor() {
    return textColor;
  }


  public void setTextColor(String textColor) {
    
    
    
    this.textColor = textColor;
  }


  public CategoriesListResponseCategoryListCategoriesInner slug(String slug) {
    
    
    
    
    this.slug = slug;
    return this;
  }

   /**
   * Get slug
   * @return slug
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getSlug() {
    return slug;
  }


  public void setSlug(String slug) {
    
    
    
    this.slug = slug;
  }


  public CategoriesListResponseCategoryListCategoriesInner topicCount(Integer topicCount) {
    
    
    
    
    this.topicCount = topicCount;
    return this;
  }

   /**
   * Get topicCount
   * @return topicCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getTopicCount() {
    return topicCount;
  }


  public void setTopicCount(Integer topicCount) {
    
    
    
    this.topicCount = topicCount;
  }


  public CategoriesListResponseCategoryListCategoriesInner postCount(Integer postCount) {
    
    
    
    
    this.postCount = postCount;
    return this;
  }

   /**
   * Get postCount
   * @return postCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getPostCount() {
    return postCount;
  }


  public void setPostCount(Integer postCount) {
    
    
    
    this.postCount = postCount;
  }


  public CategoriesListResponseCategoryListCategoriesInner position(Integer position) {
    
    
    
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getPosition() {
    return position;
  }


  public void setPosition(Integer position) {
    
    
    
    this.position = position;
  }


  public CategoriesListResponseCategoryListCategoriesInner descriptionText(Object descriptionText) {
    
    
    
    
    this.descriptionText = descriptionText;
    return this;
  }

   /**
   * Get descriptionText
   * @return descriptionText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getDescriptionText() {
    return descriptionText;
  }


  public void setDescriptionText(Object descriptionText) {
    
    
    
    this.descriptionText = descriptionText;
  }


  public CategoriesListResponseCategoryListCategoriesInner descriptionExcerpt(Object descriptionExcerpt) {
    
    
    
    
    this.descriptionExcerpt = descriptionExcerpt;
    return this;
  }

   /**
   * Get descriptionExcerpt
   * @return descriptionExcerpt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getDescriptionExcerpt() {
    return descriptionExcerpt;
  }


  public void setDescriptionExcerpt(Object descriptionExcerpt) {
    
    
    
    this.descriptionExcerpt = descriptionExcerpt;
  }


  public CategoriesListResponseCategoryListCategoriesInner topicUrl(Object topicUrl) {
    
    
    
    
    this.topicUrl = topicUrl;
    return this;
  }

   /**
   * Get topicUrl
   * @return topicUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getTopicUrl() {
    return topicUrl;
  }


  public void setTopicUrl(Object topicUrl) {
    
    
    
    this.topicUrl = topicUrl;
  }


  public CategoriesListResponseCategoryListCategoriesInner readRestricted(Boolean readRestricted) {
    
    
    
    
    this.readRestricted = readRestricted;
    return this;
  }

   /**
   * Get readRestricted
   * @return readRestricted
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getReadRestricted() {
    return readRestricted;
  }


  public void setReadRestricted(Boolean readRestricted) {
    
    
    
    this.readRestricted = readRestricted;
  }


  public CategoriesListResponseCategoryListCategoriesInner permission(Integer permission) {
    
    
    
    
    this.permission = permission;
    return this;
  }

   /**
   * Get permission
   * @return permission
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getPermission() {
    return permission;
  }


  public void setPermission(Integer permission) {
    
    
    
    this.permission = permission;
  }


  public CategoriesListResponseCategoryListCategoriesInner notificationLevel(Integer notificationLevel) {
    
    
    
    
    this.notificationLevel = notificationLevel;
    return this;
  }

   /**
   * Get notificationLevel
   * @return notificationLevel
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getNotificationLevel() {
    return notificationLevel;
  }


  public void setNotificationLevel(Integer notificationLevel) {
    
    
    
    this.notificationLevel = notificationLevel;
  }


  public CategoriesListResponseCategoryListCategoriesInner canEdit(Boolean canEdit) {
    
    
    
    
    this.canEdit = canEdit;
    return this;
  }

   /**
   * Get canEdit
   * @return canEdit
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanEdit() {
    return canEdit;
  }


  public void setCanEdit(Boolean canEdit) {
    
    
    
    this.canEdit = canEdit;
  }


  public CategoriesListResponseCategoryListCategoriesInner topicTemplate(Object topicTemplate) {
    
    
    
    
    this.topicTemplate = topicTemplate;
    return this;
  }

   /**
   * Get topicTemplate
   * @return topicTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getTopicTemplate() {
    return topicTemplate;
  }


  public void setTopicTemplate(Object topicTemplate) {
    
    
    
    this.topicTemplate = topicTemplate;
  }


  public CategoriesListResponseCategoryListCategoriesInner hasChildren(Boolean hasChildren) {
    
    
    
    
    this.hasChildren = hasChildren;
    return this;
  }

   /**
   * Get hasChildren
   * @return hasChildren
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getHasChildren() {
    return hasChildren;
  }


  public void setHasChildren(Boolean hasChildren) {
    
    
    
    this.hasChildren = hasChildren;
  }


  public CategoriesListResponseCategoryListCategoriesInner sortOrder(Object sortOrder) {
    
    
    
    
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Get sortOrder
   * @return sortOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getSortOrder() {
    return sortOrder;
  }


  public void setSortOrder(Object sortOrder) {
    
    
    
    this.sortOrder = sortOrder;
  }


  public CategoriesListResponseCategoryListCategoriesInner sortAscending(Object sortAscending) {
    
    
    
    
    this.sortAscending = sortAscending;
    return this;
  }

   /**
   * Get sortAscending
   * @return sortAscending
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getSortAscending() {
    return sortAscending;
  }


  public void setSortAscending(Object sortAscending) {
    
    
    
    this.sortAscending = sortAscending;
  }


  public CategoriesListResponseCategoryListCategoriesInner showSubcategoryList(Boolean showSubcategoryList) {
    
    
    
    
    this.showSubcategoryList = showSubcategoryList;
    return this;
  }

   /**
   * Get showSubcategoryList
   * @return showSubcategoryList
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getShowSubcategoryList() {
    return showSubcategoryList;
  }


  public void setShowSubcategoryList(Boolean showSubcategoryList) {
    
    
    
    this.showSubcategoryList = showSubcategoryList;
  }


  public CategoriesListResponseCategoryListCategoriesInner numFeaturedTopics(Integer numFeaturedTopics) {
    
    
    
    
    this.numFeaturedTopics = numFeaturedTopics;
    return this;
  }

   /**
   * Get numFeaturedTopics
   * @return numFeaturedTopics
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getNumFeaturedTopics() {
    return numFeaturedTopics;
  }


  public void setNumFeaturedTopics(Integer numFeaturedTopics) {
    
    
    
    this.numFeaturedTopics = numFeaturedTopics;
  }


  public CategoriesListResponseCategoryListCategoriesInner defaultView(Object defaultView) {
    
    
    
    
    this.defaultView = defaultView;
    return this;
  }

   /**
   * Get defaultView
   * @return defaultView
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getDefaultView() {
    return defaultView;
  }


  public void setDefaultView(Object defaultView) {
    
    
    
    this.defaultView = defaultView;
  }


  public CategoriesListResponseCategoryListCategoriesInner subcategoryListStyle(String subcategoryListStyle) {
    
    
    
    
    this.subcategoryListStyle = subcategoryListStyle;
    return this;
  }

   /**
   * Get subcategoryListStyle
   * @return subcategoryListStyle
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getSubcategoryListStyle() {
    return subcategoryListStyle;
  }


  public void setSubcategoryListStyle(String subcategoryListStyle) {
    
    
    
    this.subcategoryListStyle = subcategoryListStyle;
  }


  public CategoriesListResponseCategoryListCategoriesInner defaultTopPeriod(String defaultTopPeriod) {
    
    
    
    
    this.defaultTopPeriod = defaultTopPeriod;
    return this;
  }

   /**
   * Get defaultTopPeriod
   * @return defaultTopPeriod
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDefaultTopPeriod() {
    return defaultTopPeriod;
  }


  public void setDefaultTopPeriod(String defaultTopPeriod) {
    
    
    
    this.defaultTopPeriod = defaultTopPeriod;
  }


  public CategoriesListResponseCategoryListCategoriesInner defaultListFilter(String defaultListFilter) {
    
    
    
    
    this.defaultListFilter = defaultListFilter;
    return this;
  }

   /**
   * Get defaultListFilter
   * @return defaultListFilter
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getDefaultListFilter() {
    return defaultListFilter;
  }


  public void setDefaultListFilter(String defaultListFilter) {
    
    
    
    this.defaultListFilter = defaultListFilter;
  }


  public CategoriesListResponseCategoryListCategoriesInner minimumRequiredTags(Integer minimumRequiredTags) {
    
    
    
    
    this.minimumRequiredTags = minimumRequiredTags;
    return this;
  }

   /**
   * Get minimumRequiredTags
   * @return minimumRequiredTags
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getMinimumRequiredTags() {
    return minimumRequiredTags;
  }


  public void setMinimumRequiredTags(Integer minimumRequiredTags) {
    
    
    
    this.minimumRequiredTags = minimumRequiredTags;
  }


  public CategoriesListResponseCategoryListCategoriesInner navigateToFirstPostAfterRead(Boolean navigateToFirstPostAfterRead) {
    
    
    
    
    this.navigateToFirstPostAfterRead = navigateToFirstPostAfterRead;
    return this;
  }

   /**
   * Get navigateToFirstPostAfterRead
   * @return navigateToFirstPostAfterRead
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getNavigateToFirstPostAfterRead() {
    return navigateToFirstPostAfterRead;
  }


  public void setNavigateToFirstPostAfterRead(Boolean navigateToFirstPostAfterRead) {
    
    
    
    this.navigateToFirstPostAfterRead = navigateToFirstPostAfterRead;
  }


  public CategoriesListResponseCategoryListCategoriesInner topicsDay(Integer topicsDay) {
    
    
    
    
    this.topicsDay = topicsDay;
    return this;
  }

   /**
   * Get topicsDay
   * @return topicsDay
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getTopicsDay() {
    return topicsDay;
  }


  public void setTopicsDay(Integer topicsDay) {
    
    
    
    this.topicsDay = topicsDay;
  }


  public CategoriesListResponseCategoryListCategoriesInner topicsWeek(Integer topicsWeek) {
    
    
    
    
    this.topicsWeek = topicsWeek;
    return this;
  }

   /**
   * Get topicsWeek
   * @return topicsWeek
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getTopicsWeek() {
    return topicsWeek;
  }


  public void setTopicsWeek(Integer topicsWeek) {
    
    
    
    this.topicsWeek = topicsWeek;
  }


  public CategoriesListResponseCategoryListCategoriesInner topicsMonth(Integer topicsMonth) {
    
    
    
    
    this.topicsMonth = topicsMonth;
    return this;
  }

   /**
   * Get topicsMonth
   * @return topicsMonth
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getTopicsMonth() {
    return topicsMonth;
  }


  public void setTopicsMonth(Integer topicsMonth) {
    
    
    
    this.topicsMonth = topicsMonth;
  }


  public CategoriesListResponseCategoryListCategoriesInner topicsYear(Integer topicsYear) {
    
    
    
    
    this.topicsYear = topicsYear;
    return this;
  }

   /**
   * Get topicsYear
   * @return topicsYear
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getTopicsYear() {
    return topicsYear;
  }


  public void setTopicsYear(Integer topicsYear) {
    
    
    
    this.topicsYear = topicsYear;
  }


  public CategoriesListResponseCategoryListCategoriesInner topicsAllTime(Integer topicsAllTime) {
    
    
    
    
    this.topicsAllTime = topicsAllTime;
    return this;
  }

   /**
   * Get topicsAllTime
   * @return topicsAllTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getTopicsAllTime() {
    return topicsAllTime;
  }


  public void setTopicsAllTime(Integer topicsAllTime) {
    
    
    
    this.topicsAllTime = topicsAllTime;
  }


  public CategoriesListResponseCategoryListCategoriesInner isUncategorized(Boolean isUncategorized) {
    
    
    
    
    this.isUncategorized = isUncategorized;
    return this;
  }

   /**
   * Get isUncategorized
   * @return isUncategorized
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsUncategorized() {
    return isUncategorized;
  }


  public void setIsUncategorized(Boolean isUncategorized) {
    
    
    
    this.isUncategorized = isUncategorized;
  }


  public CategoriesListResponseCategoryListCategoriesInner subcategoryIds(List<Object> subcategoryIds) {
    
    
    
    
    this.subcategoryIds = subcategoryIds;
    return this;
  }

  public CategoriesListResponseCategoryListCategoriesInner addSubcategoryIdsItem(Object subcategoryIdsItem) {
    this.subcategoryIds.add(subcategoryIdsItem);
    return this;
  }

   /**
   * Get subcategoryIds
   * @return subcategoryIds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getSubcategoryIds() {
    return subcategoryIds;
  }


  public void setSubcategoryIds(List<Object> subcategoryIds) {
    
    
    
    this.subcategoryIds = subcategoryIds;
  }


  public CategoriesListResponseCategoryListCategoriesInner subcategoryList(List<Object> subcategoryList) {
    
    
    
    
    this.subcategoryList = subcategoryList;
    return this;
  }

  public CategoriesListResponseCategoryListCategoriesInner addSubcategoryListItem(Object subcategoryListItem) {
    if (this.subcategoryList == null) {
      this.subcategoryList = new ArrayList<>();
    }
    this.subcategoryList.add(subcategoryListItem);
    return this;
  }

   /**
   * Get subcategoryList
   * @return subcategoryList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getSubcategoryList() {
    return subcategoryList;
  }


  public void setSubcategoryList(List<Object> subcategoryList) {
    
    
    
    this.subcategoryList = subcategoryList;
  }


  public CategoriesListResponseCategoryListCategoriesInner uploadedLogo(Object uploadedLogo) {
    
    
    
    
    this.uploadedLogo = uploadedLogo;
    return this;
  }

   /**
   * Get uploadedLogo
   * @return uploadedLogo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getUploadedLogo() {
    return uploadedLogo;
  }


  public void setUploadedLogo(Object uploadedLogo) {
    
    
    
    this.uploadedLogo = uploadedLogo;
  }


  public CategoriesListResponseCategoryListCategoriesInner uploadedLogoDark(Object uploadedLogoDark) {
    
    
    
    
    this.uploadedLogoDark = uploadedLogoDark;
    return this;
  }

   /**
   * Get uploadedLogoDark
   * @return uploadedLogoDark
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getUploadedLogoDark() {
    return uploadedLogoDark;
  }


  public void setUploadedLogoDark(Object uploadedLogoDark) {
    
    
    
    this.uploadedLogoDark = uploadedLogoDark;
  }


  public CategoriesListResponseCategoryListCategoriesInner uploadedBackground(Object uploadedBackground) {
    
    
    
    
    this.uploadedBackground = uploadedBackground;
    return this;
  }

   /**
   * Get uploadedBackground
   * @return uploadedBackground
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getUploadedBackground() {
    return uploadedBackground;
  }


  public void setUploadedBackground(Object uploadedBackground) {
    
    
    
    this.uploadedBackground = uploadedBackground;
  }


  public CategoriesListResponseCategoryListCategoriesInner uploadedBackgroundDark(Object uploadedBackgroundDark) {
    
    
    
    
    this.uploadedBackgroundDark = uploadedBackgroundDark;
    return this;
  }

   /**
   * Get uploadedBackgroundDark
   * @return uploadedBackgroundDark
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getUploadedBackgroundDark() {
    return uploadedBackgroundDark;
  }


  public void setUploadedBackgroundDark(Object uploadedBackgroundDark) {
    
    
    
    this.uploadedBackgroundDark = uploadedBackgroundDark;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CategoriesListResponseCategoryListCategoriesInner instance itself
   */
  public CategoriesListResponseCategoryListCategoriesInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CategoriesListResponseCategoryListCategoriesInner categoriesListResponseCategoryListCategoriesInner = (CategoriesListResponseCategoryListCategoriesInner) o;
    return Objects.equals(this.description, categoriesListResponseCategoryListCategoriesInner.description) &&
        Objects.equals(this.id, categoriesListResponseCategoryListCategoriesInner.id) &&
        Objects.equals(this.name, categoriesListResponseCategoryListCategoriesInner.name) &&
        Objects.equals(this.color, categoriesListResponseCategoryListCategoriesInner.color) &&
        Objects.equals(this.textColor, categoriesListResponseCategoryListCategoriesInner.textColor) &&
        Objects.equals(this.slug, categoriesListResponseCategoryListCategoriesInner.slug) &&
        Objects.equals(this.topicCount, categoriesListResponseCategoryListCategoriesInner.topicCount) &&
        Objects.equals(this.postCount, categoriesListResponseCategoryListCategoriesInner.postCount) &&
        Objects.equals(this.position, categoriesListResponseCategoryListCategoriesInner.position) &&
        Objects.equals(this.descriptionText, categoriesListResponseCategoryListCategoriesInner.descriptionText) &&
        Objects.equals(this.descriptionExcerpt, categoriesListResponseCategoryListCategoriesInner.descriptionExcerpt) &&
        Objects.equals(this.topicUrl, categoriesListResponseCategoryListCategoriesInner.topicUrl) &&
        Objects.equals(this.readRestricted, categoriesListResponseCategoryListCategoriesInner.readRestricted) &&
        Objects.equals(this.permission, categoriesListResponseCategoryListCategoriesInner.permission) &&
        Objects.equals(this.notificationLevel, categoriesListResponseCategoryListCategoriesInner.notificationLevel) &&
        Objects.equals(this.canEdit, categoriesListResponseCategoryListCategoriesInner.canEdit) &&
        Objects.equals(this.topicTemplate, categoriesListResponseCategoryListCategoriesInner.topicTemplate) &&
        Objects.equals(this.hasChildren, categoriesListResponseCategoryListCategoriesInner.hasChildren) &&
        Objects.equals(this.sortOrder, categoriesListResponseCategoryListCategoriesInner.sortOrder) &&
        Objects.equals(this.sortAscending, categoriesListResponseCategoryListCategoriesInner.sortAscending) &&
        Objects.equals(this.showSubcategoryList, categoriesListResponseCategoryListCategoriesInner.showSubcategoryList) &&
        Objects.equals(this.numFeaturedTopics, categoriesListResponseCategoryListCategoriesInner.numFeaturedTopics) &&
        Objects.equals(this.defaultView, categoriesListResponseCategoryListCategoriesInner.defaultView) &&
        Objects.equals(this.subcategoryListStyle, categoriesListResponseCategoryListCategoriesInner.subcategoryListStyle) &&
        Objects.equals(this.defaultTopPeriod, categoriesListResponseCategoryListCategoriesInner.defaultTopPeriod) &&
        Objects.equals(this.defaultListFilter, categoriesListResponseCategoryListCategoriesInner.defaultListFilter) &&
        Objects.equals(this.minimumRequiredTags, categoriesListResponseCategoryListCategoriesInner.minimumRequiredTags) &&
        Objects.equals(this.navigateToFirstPostAfterRead, categoriesListResponseCategoryListCategoriesInner.navigateToFirstPostAfterRead) &&
        Objects.equals(this.topicsDay, categoriesListResponseCategoryListCategoriesInner.topicsDay) &&
        Objects.equals(this.topicsWeek, categoriesListResponseCategoryListCategoriesInner.topicsWeek) &&
        Objects.equals(this.topicsMonth, categoriesListResponseCategoryListCategoriesInner.topicsMonth) &&
        Objects.equals(this.topicsYear, categoriesListResponseCategoryListCategoriesInner.topicsYear) &&
        Objects.equals(this.topicsAllTime, categoriesListResponseCategoryListCategoriesInner.topicsAllTime) &&
        Objects.equals(this.isUncategorized, categoriesListResponseCategoryListCategoriesInner.isUncategorized) &&
        Objects.equals(this.subcategoryIds, categoriesListResponseCategoryListCategoriesInner.subcategoryIds) &&
        Objects.equals(this.subcategoryList, categoriesListResponseCategoryListCategoriesInner.subcategoryList) &&
        Objects.equals(this.uploadedLogo, categoriesListResponseCategoryListCategoriesInner.uploadedLogo) &&
        Objects.equals(this.uploadedLogoDark, categoriesListResponseCategoryListCategoriesInner.uploadedLogoDark) &&
        Objects.equals(this.uploadedBackground, categoriesListResponseCategoryListCategoriesInner.uploadedBackground) &&
        Objects.equals(this.uploadedBackgroundDark, categoriesListResponseCategoryListCategoriesInner.uploadedBackgroundDark)&&
        Objects.equals(this.additionalProperties, categoriesListResponseCategoryListCategoriesInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, id, name, color, textColor, slug, topicCount, postCount, position, descriptionText, descriptionExcerpt, topicUrl, readRestricted, permission, notificationLevel, canEdit, topicTemplate, hasChildren, sortOrder, sortAscending, showSubcategoryList, numFeaturedTopics, defaultView, subcategoryListStyle, defaultTopPeriod, defaultListFilter, minimumRequiredTags, navigateToFirstPostAfterRead, topicsDay, topicsWeek, topicsMonth, topicsYear, topicsAllTime, isUncategorized, subcategoryIds, subcategoryList, uploadedLogo, uploadedLogoDark, uploadedBackground, uploadedBackgroundDark, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CategoriesListResponseCategoryListCategoriesInner {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    textColor: ").append(toIndentedString(textColor)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    topicCount: ").append(toIndentedString(topicCount)).append("\n");
    sb.append("    postCount: ").append(toIndentedString(postCount)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    descriptionText: ").append(toIndentedString(descriptionText)).append("\n");
    sb.append("    descriptionExcerpt: ").append(toIndentedString(descriptionExcerpt)).append("\n");
    sb.append("    topicUrl: ").append(toIndentedString(topicUrl)).append("\n");
    sb.append("    readRestricted: ").append(toIndentedString(readRestricted)).append("\n");
    sb.append("    permission: ").append(toIndentedString(permission)).append("\n");
    sb.append("    notificationLevel: ").append(toIndentedString(notificationLevel)).append("\n");
    sb.append("    canEdit: ").append(toIndentedString(canEdit)).append("\n");
    sb.append("    topicTemplate: ").append(toIndentedString(topicTemplate)).append("\n");
    sb.append("    hasChildren: ").append(toIndentedString(hasChildren)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    sortAscending: ").append(toIndentedString(sortAscending)).append("\n");
    sb.append("    showSubcategoryList: ").append(toIndentedString(showSubcategoryList)).append("\n");
    sb.append("    numFeaturedTopics: ").append(toIndentedString(numFeaturedTopics)).append("\n");
    sb.append("    defaultView: ").append(toIndentedString(defaultView)).append("\n");
    sb.append("    subcategoryListStyle: ").append(toIndentedString(subcategoryListStyle)).append("\n");
    sb.append("    defaultTopPeriod: ").append(toIndentedString(defaultTopPeriod)).append("\n");
    sb.append("    defaultListFilter: ").append(toIndentedString(defaultListFilter)).append("\n");
    sb.append("    minimumRequiredTags: ").append(toIndentedString(minimumRequiredTags)).append("\n");
    sb.append("    navigateToFirstPostAfterRead: ").append(toIndentedString(navigateToFirstPostAfterRead)).append("\n");
    sb.append("    topicsDay: ").append(toIndentedString(topicsDay)).append("\n");
    sb.append("    topicsWeek: ").append(toIndentedString(topicsWeek)).append("\n");
    sb.append("    topicsMonth: ").append(toIndentedString(topicsMonth)).append("\n");
    sb.append("    topicsYear: ").append(toIndentedString(topicsYear)).append("\n");
    sb.append("    topicsAllTime: ").append(toIndentedString(topicsAllTime)).append("\n");
    sb.append("    isUncategorized: ").append(toIndentedString(isUncategorized)).append("\n");
    sb.append("    subcategoryIds: ").append(toIndentedString(subcategoryIds)).append("\n");
    sb.append("    subcategoryList: ").append(toIndentedString(subcategoryList)).append("\n");
    sb.append("    uploadedLogo: ").append(toIndentedString(uploadedLogo)).append("\n");
    sb.append("    uploadedLogoDark: ").append(toIndentedString(uploadedLogoDark)).append("\n");
    sb.append("    uploadedBackground: ").append(toIndentedString(uploadedBackground)).append("\n");
    sb.append("    uploadedBackgroundDark: ").append(toIndentedString(uploadedBackgroundDark)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("color");
    openapiFields.add("text_color");
    openapiFields.add("slug");
    openapiFields.add("topic_count");
    openapiFields.add("post_count");
    openapiFields.add("position");
    openapiFields.add("description_text");
    openapiFields.add("description_excerpt");
    openapiFields.add("topic_url");
    openapiFields.add("read_restricted");
    openapiFields.add("permission");
    openapiFields.add("notification_level");
    openapiFields.add("can_edit");
    openapiFields.add("topic_template");
    openapiFields.add("has_children");
    openapiFields.add("sort_order");
    openapiFields.add("sort_ascending");
    openapiFields.add("show_subcategory_list");
    openapiFields.add("num_featured_topics");
    openapiFields.add("default_view");
    openapiFields.add("subcategory_list_style");
    openapiFields.add("default_top_period");
    openapiFields.add("default_list_filter");
    openapiFields.add("minimum_required_tags");
    openapiFields.add("navigate_to_first_post_after_read");
    openapiFields.add("topics_day");
    openapiFields.add("topics_week");
    openapiFields.add("topics_month");
    openapiFields.add("topics_year");
    openapiFields.add("topics_all_time");
    openapiFields.add("is_uncategorized");
    openapiFields.add("subcategory_ids");
    openapiFields.add("subcategory_list");
    openapiFields.add("uploaded_logo");
    openapiFields.add("uploaded_logo_dark");
    openapiFields.add("uploaded_background");
    openapiFields.add("uploaded_background_dark");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("color");
    openapiRequiredFields.add("text_color");
    openapiRequiredFields.add("slug");
    openapiRequiredFields.add("topic_count");
    openapiRequiredFields.add("post_count");
    openapiRequiredFields.add("position");
    openapiRequiredFields.add("description_text");
    openapiRequiredFields.add("description_excerpt");
    openapiRequiredFields.add("topic_url");
    openapiRequiredFields.add("read_restricted");
    openapiRequiredFields.add("permission");
    openapiRequiredFields.add("notification_level");
    openapiRequiredFields.add("can_edit");
    openapiRequiredFields.add("topic_template");
    openapiRequiredFields.add("has_children");
    openapiRequiredFields.add("sort_order");
    openapiRequiredFields.add("sort_ascending");
    openapiRequiredFields.add("show_subcategory_list");
    openapiRequiredFields.add("num_featured_topics");
    openapiRequiredFields.add("default_view");
    openapiRequiredFields.add("subcategory_list_style");
    openapiRequiredFields.add("default_top_period");
    openapiRequiredFields.add("default_list_filter");
    openapiRequiredFields.add("minimum_required_tags");
    openapiRequiredFields.add("navigate_to_first_post_after_read");
    openapiRequiredFields.add("topics_day");
    openapiRequiredFields.add("topics_week");
    openapiRequiredFields.add("topics_month");
    openapiRequiredFields.add("topics_year");
    openapiRequiredFields.add("topics_all_time");
    openapiRequiredFields.add("subcategory_ids");
    openapiRequiredFields.add("uploaded_logo");
    openapiRequiredFields.add("uploaded_logo_dark");
    openapiRequiredFields.add("uploaded_background");
    openapiRequiredFields.add("uploaded_background_dark");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CategoriesListResponseCategoryListCategoriesInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CategoriesListResponseCategoryListCategoriesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CategoriesListResponseCategoryListCategoriesInner is not found in the empty JSON string", CategoriesListResponseCategoryListCategoriesInner.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CategoriesListResponseCategoryListCategoriesInner.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("color").toString()));
      }
      if (!jsonObj.get("text_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text_color").toString()));
      }
      if (!jsonObj.get("slug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slug").toString()));
      }
      if (!jsonObj.get("subcategory_list_style").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subcategory_list_style` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subcategory_list_style").toString()));
      }
      if (!jsonObj.get("default_top_period").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_top_period` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_top_period").toString()));
      }
      if (!jsonObj.get("default_list_filter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_list_filter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_list_filter").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("subcategory_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("subcategory_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `subcategory_ids` to be an array in the JSON string but got `%s`", jsonObj.get("subcategory_ids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("subcategory_list") != null && !jsonObj.get("subcategory_list").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `subcategory_list` to be an array in the JSON string but got `%s`", jsonObj.get("subcategory_list").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CategoriesListResponseCategoryListCategoriesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CategoriesListResponseCategoryListCategoriesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CategoriesListResponseCategoryListCategoriesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CategoriesListResponseCategoryListCategoriesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CategoriesListResponseCategoryListCategoriesInner>() {
           @Override
           public void write(JsonWriter out, CategoriesListResponseCategoryListCategoriesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CategoriesListResponseCategoryListCategoriesInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CategoriesListResponseCategoryListCategoriesInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CategoriesListResponseCategoryListCategoriesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CategoriesListResponseCategoryListCategoriesInner
  * @throws IOException if the JSON string is invalid with respect to CategoriesListResponseCategoryListCategoriesInner
  */
  public static CategoriesListResponseCategoryListCategoriesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CategoriesListResponseCategoryListCategoriesInner.class);
  }

 /**
  * Convert an instance of CategoriesListResponseCategoryListCategoriesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

