/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * InvitesCreateMultipleInvitesRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class InvitesCreateMultipleInvitesRequest {
  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_SKIP_EMAIL = "skip_email";
  @SerializedName(SERIALIZED_NAME_SKIP_EMAIL)
  private Boolean skipEmail = false;

  public static final String SERIALIZED_NAME_CUSTOM_MESSAGE = "custom_message";
  @SerializedName(SERIALIZED_NAME_CUSTOM_MESSAGE)
  private String customMessage;

  public static final String SERIALIZED_NAME_MAX_REDEMPTIONS_ALLOWED = "max_redemptions_allowed";
  @SerializedName(SERIALIZED_NAME_MAX_REDEMPTIONS_ALLOWED)
  private Integer maxRedemptionsAllowed = 1;

  public static final String SERIALIZED_NAME_TOPIC_ID = "topic_id";
  @SerializedName(SERIALIZED_NAME_TOPIC_ID)
  private Integer topicId;

  public static final String SERIALIZED_NAME_GROUP_IDS = "group_ids";
  @SerializedName(SERIALIZED_NAME_GROUP_IDS)
  private String groupIds;

  public static final String SERIALIZED_NAME_GROUP_NAMES = "group_names";
  @SerializedName(SERIALIZED_NAME_GROUP_NAMES)
  private String groupNames;

  public static final String SERIALIZED_NAME_EXPIRES_AT = "expires_at";
  @SerializedName(SERIALIZED_NAME_EXPIRES_AT)
  private String expiresAt;

  public InvitesCreateMultipleInvitesRequest() {
  }

  public InvitesCreateMultipleInvitesRequest email(String email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * pass 1 email per invite to be generated. other properties will be shared by each invite.
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"not-a-user-yet-1@example.com\",\"not-a-user-yet-2@example.com\"]", value = "pass 1 email per invite to be generated. other properties will be shared by each invite.")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    
    
    
    this.email = email;
  }


  public InvitesCreateMultipleInvitesRequest skipEmail(Boolean skipEmail) {
    
    
    
    
    this.skipEmail = skipEmail;
    return this;
  }

   /**
   * Get skipEmail
   * @return skipEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getSkipEmail() {
    return skipEmail;
  }


  public void setSkipEmail(Boolean skipEmail) {
    
    
    
    this.skipEmail = skipEmail;
  }


  public InvitesCreateMultipleInvitesRequest customMessage(String customMessage) {
    
    
    
    
    this.customMessage = customMessage;
    return this;
  }

   /**
   * optional, for email invites
   * @return customMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "optional, for email invites")

  public String getCustomMessage() {
    return customMessage;
  }


  public void setCustomMessage(String customMessage) {
    
    
    
    this.customMessage = customMessage;
  }


  public InvitesCreateMultipleInvitesRequest maxRedemptionsAllowed(Integer maxRedemptionsAllowed) {
    
    
    
    
    this.maxRedemptionsAllowed = maxRedemptionsAllowed;
    return this;
  }

   /**
   * optional, for link invites
   * @return maxRedemptionsAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "optional, for link invites")

  public Integer getMaxRedemptionsAllowed() {
    return maxRedemptionsAllowed;
  }


  public void setMaxRedemptionsAllowed(Integer maxRedemptionsAllowed) {
    
    
    
    this.maxRedemptionsAllowed = maxRedemptionsAllowed;
  }


  public InvitesCreateMultipleInvitesRequest topicId(Integer topicId) {
    
    
    
    
    this.topicId = topicId;
    return this;
  }

   /**
   * Get topicId
   * @return topicId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTopicId() {
    return topicId;
  }


  public void setTopicId(Integer topicId) {
    
    
    
    this.topicId = topicId;
  }


  public InvitesCreateMultipleInvitesRequest groupIds(String groupIds) {
    
    
    
    
    this.groupIds = groupIds;
    return this;
  }

   /**
   * Optional, either this or &#x60;group_names&#x60;. Comma separated list for multiple ids.
   * @return groupIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "42,43", value = "Optional, either this or `group_names`. Comma separated list for multiple ids.")

  public String getGroupIds() {
    return groupIds;
  }


  public void setGroupIds(String groupIds) {
    
    
    
    this.groupIds = groupIds;
  }


  public InvitesCreateMultipleInvitesRequest groupNames(String groupNames) {
    
    
    
    
    this.groupNames = groupNames;
    return this;
  }

   /**
   * Optional, either this or &#x60;group_ids&#x60;. Comma separated list for multiple names.
   * @return groupNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "foo,bar", value = "Optional, either this or `group_ids`. Comma separated list for multiple names.")

  public String getGroupNames() {
    return groupNames;
  }


  public void setGroupNames(String groupNames) {
    
    
    
    this.groupNames = groupNames;
  }


  public InvitesCreateMultipleInvitesRequest expiresAt(String expiresAt) {
    
    
    
    
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * optional, if not supplied, the invite_expiry_days site setting is used
   * @return expiresAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "optional, if not supplied, the invite_expiry_days site setting is used")

  public String getExpiresAt() {
    return expiresAt;
  }


  public void setExpiresAt(String expiresAt) {
    
    
    
    this.expiresAt = expiresAt;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the InvitesCreateMultipleInvitesRequest instance itself
   */
  public InvitesCreateMultipleInvitesRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvitesCreateMultipleInvitesRequest invitesCreateMultipleInvitesRequest = (InvitesCreateMultipleInvitesRequest) o;
    return Objects.equals(this.email, invitesCreateMultipleInvitesRequest.email) &&
        Objects.equals(this.skipEmail, invitesCreateMultipleInvitesRequest.skipEmail) &&
        Objects.equals(this.customMessage, invitesCreateMultipleInvitesRequest.customMessage) &&
        Objects.equals(this.maxRedemptionsAllowed, invitesCreateMultipleInvitesRequest.maxRedemptionsAllowed) &&
        Objects.equals(this.topicId, invitesCreateMultipleInvitesRequest.topicId) &&
        Objects.equals(this.groupIds, invitesCreateMultipleInvitesRequest.groupIds) &&
        Objects.equals(this.groupNames, invitesCreateMultipleInvitesRequest.groupNames) &&
        Objects.equals(this.expiresAt, invitesCreateMultipleInvitesRequest.expiresAt)&&
        Objects.equals(this.additionalProperties, invitesCreateMultipleInvitesRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, skipEmail, customMessage, maxRedemptionsAllowed, topicId, groupIds, groupNames, expiresAt, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvitesCreateMultipleInvitesRequest {\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    skipEmail: ").append(toIndentedString(skipEmail)).append("\n");
    sb.append("    customMessage: ").append(toIndentedString(customMessage)).append("\n");
    sb.append("    maxRedemptionsAllowed: ").append(toIndentedString(maxRedemptionsAllowed)).append("\n");
    sb.append("    topicId: ").append(toIndentedString(topicId)).append("\n");
    sb.append("    groupIds: ").append(toIndentedString(groupIds)).append("\n");
    sb.append("    groupNames: ").append(toIndentedString(groupNames)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("email");
    openapiFields.add("skip_email");
    openapiFields.add("custom_message");
    openapiFields.add("max_redemptions_allowed");
    openapiFields.add("topic_id");
    openapiFields.add("group_ids");
    openapiFields.add("group_names");
    openapiFields.add("expires_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to InvitesCreateMultipleInvitesRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!InvitesCreateMultipleInvitesRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InvitesCreateMultipleInvitesRequest is not found in the empty JSON string", InvitesCreateMultipleInvitesRequest.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("custom_message") != null && !jsonObj.get("custom_message").isJsonNull()) && !jsonObj.get("custom_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_message").toString()));
      }
      if ((jsonObj.get("group_ids") != null && !jsonObj.get("group_ids").isJsonNull()) && !jsonObj.get("group_ids").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `group_ids` to be a primitive type in the JSON string but got `%s`", jsonObj.get("group_ids").toString()));
      }
      if ((jsonObj.get("group_names") != null && !jsonObj.get("group_names").isJsonNull()) && !jsonObj.get("group_names").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `group_names` to be a primitive type in the JSON string but got `%s`", jsonObj.get("group_names").toString()));
      }
      if ((jsonObj.get("expires_at") != null && !jsonObj.get("expires_at").isJsonNull()) && !jsonObj.get("expires_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expires_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expires_at").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InvitesCreateMultipleInvitesRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InvitesCreateMultipleInvitesRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InvitesCreateMultipleInvitesRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InvitesCreateMultipleInvitesRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<InvitesCreateMultipleInvitesRequest>() {
           @Override
           public void write(JsonWriter out, InvitesCreateMultipleInvitesRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public InvitesCreateMultipleInvitesRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             InvitesCreateMultipleInvitesRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of InvitesCreateMultipleInvitesRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of InvitesCreateMultipleInvitesRequest
  * @throws IOException if the JSON string is invalid with respect to InvitesCreateMultipleInvitesRequest
  */
  public static InvitesCreateMultipleInvitesRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InvitesCreateMultipleInvitesRequest.class);
  }

 /**
  * Convert an instance of InvitesCreateMultipleInvitesRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

