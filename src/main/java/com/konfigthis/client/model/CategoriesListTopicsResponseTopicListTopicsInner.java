/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CategoriesListTopicsResponseTopicListTopicsInnerPostersInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CategoriesListTopicsResponseTopicListTopicsInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CategoriesListTopicsResponseTopicListTopicsInner {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_FANCY_TITLE = "fancy_title";
  @SerializedName(SERIALIZED_NAME_FANCY_TITLE)
  private String fancyTitle;

  public static final String SERIALIZED_NAME_SLUG = "slug";
  @SerializedName(SERIALIZED_NAME_SLUG)
  private String slug;

  public static final String SERIALIZED_NAME_POSTS_COUNT = "posts_count";
  @SerializedName(SERIALIZED_NAME_POSTS_COUNT)
  private Integer postsCount;

  public static final String SERIALIZED_NAME_REPLY_COUNT = "reply_count";
  @SerializedName(SERIALIZED_NAME_REPLY_COUNT)
  private Integer replyCount;

  public static final String SERIALIZED_NAME_HIGHEST_POST_NUMBER = "highest_post_number";
  @SerializedName(SERIALIZED_NAME_HIGHEST_POST_NUMBER)
  private Integer highestPostNumber;

  public static final String SERIALIZED_NAME_IMAGE_URL = "image_url";
  @SerializedName(SERIALIZED_NAME_IMAGE_URL)
  private Object imageUrl = null;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_LAST_POSTED_AT = "last_posted_at";
  @SerializedName(SERIALIZED_NAME_LAST_POSTED_AT)
  private String lastPostedAt;

  public static final String SERIALIZED_NAME_BUMPED = "bumped";
  @SerializedName(SERIALIZED_NAME_BUMPED)
  private Boolean bumped;

  public static final String SERIALIZED_NAME_BUMPED_AT = "bumped_at";
  @SerializedName(SERIALIZED_NAME_BUMPED_AT)
  private String bumpedAt;

  public static final String SERIALIZED_NAME_ARCHETYPE = "archetype";
  @SerializedName(SERIALIZED_NAME_ARCHETYPE)
  private String archetype;

  public static final String SERIALIZED_NAME_UNSEEN = "unseen";
  @SerializedName(SERIALIZED_NAME_UNSEEN)
  private Boolean unseen;

  public static final String SERIALIZED_NAME_PINNED = "pinned";
  @SerializedName(SERIALIZED_NAME_PINNED)
  private Boolean pinned;

  public static final String SERIALIZED_NAME_UNPINNED = "unpinned";
  @SerializedName(SERIALIZED_NAME_UNPINNED)
  private Object unpinned = null;

  public static final String SERIALIZED_NAME_EXCERPT = "excerpt";
  @SerializedName(SERIALIZED_NAME_EXCERPT)
  private String excerpt;

  public static final String SERIALIZED_NAME_VISIBLE = "visible";
  @SerializedName(SERIALIZED_NAME_VISIBLE)
  private Boolean visible;

  public static final String SERIALIZED_NAME_CLOSED = "closed";
  @SerializedName(SERIALIZED_NAME_CLOSED)
  private Boolean closed;

  public static final String SERIALIZED_NAME_ARCHIVED = "archived";
  @SerializedName(SERIALIZED_NAME_ARCHIVED)
  private Boolean archived;

  public static final String SERIALIZED_NAME_BOOKMARKED = "bookmarked";
  @SerializedName(SERIALIZED_NAME_BOOKMARKED)
  private Object bookmarked = null;

  public static final String SERIALIZED_NAME_LIKED = "liked";
  @SerializedName(SERIALIZED_NAME_LIKED)
  private Object liked = null;

  public static final String SERIALIZED_NAME_VIEWS = "views";
  @SerializedName(SERIALIZED_NAME_VIEWS)
  private Integer views;

  public static final String SERIALIZED_NAME_LIKE_COUNT = "like_count";
  @SerializedName(SERIALIZED_NAME_LIKE_COUNT)
  private Integer likeCount;

  public static final String SERIALIZED_NAME_HAS_SUMMARY = "has_summary";
  @SerializedName(SERIALIZED_NAME_HAS_SUMMARY)
  private Boolean hasSummary;

  public static final String SERIALIZED_NAME_LAST_POSTER_USERNAME = "last_poster_username";
  @SerializedName(SERIALIZED_NAME_LAST_POSTER_USERNAME)
  private String lastPosterUsername;

  public static final String SERIALIZED_NAME_CATEGORY_ID = "category_id";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private Integer categoryId;

  public static final String SERIALIZED_NAME_PINNED_GLOBALLY = "pinned_globally";
  @SerializedName(SERIALIZED_NAME_PINNED_GLOBALLY)
  private Boolean pinnedGlobally;

  public static final String SERIALIZED_NAME_FEATURED_LINK = "featured_link";
  @SerializedName(SERIALIZED_NAME_FEATURED_LINK)
  private Object featuredLink = null;

  public static final String SERIALIZED_NAME_POSTERS = "posters";
  @SerializedName(SERIALIZED_NAME_POSTERS)
  private List<CategoriesListTopicsResponseTopicListTopicsInnerPostersInner> posters = new ArrayList<>();

  public CategoriesListTopicsResponseTopicListTopicsInner() {
  }

  public CategoriesListTopicsResponseTopicListTopicsInner title(String title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    
    
    
    this.title = title;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner id(Integer id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    
    
    
    this.id = id;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner fancyTitle(String fancyTitle) {
    
    
    
    
    this.fancyTitle = fancyTitle;
    return this;
  }

   /**
   * Get fancyTitle
   * @return fancyTitle
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getFancyTitle() {
    return fancyTitle;
  }


  public void setFancyTitle(String fancyTitle) {
    
    
    
    this.fancyTitle = fancyTitle;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner slug(String slug) {
    
    
    
    
    this.slug = slug;
    return this;
  }

   /**
   * Get slug
   * @return slug
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getSlug() {
    return slug;
  }


  public void setSlug(String slug) {
    
    
    
    this.slug = slug;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner postsCount(Integer postsCount) {
    
    
    
    
    this.postsCount = postsCount;
    return this;
  }

   /**
   * Get postsCount
   * @return postsCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getPostsCount() {
    return postsCount;
  }


  public void setPostsCount(Integer postsCount) {
    
    
    
    this.postsCount = postsCount;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner replyCount(Integer replyCount) {
    
    
    
    
    this.replyCount = replyCount;
    return this;
  }

   /**
   * Get replyCount
   * @return replyCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getReplyCount() {
    return replyCount;
  }


  public void setReplyCount(Integer replyCount) {
    
    
    
    this.replyCount = replyCount;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner highestPostNumber(Integer highestPostNumber) {
    
    
    
    
    this.highestPostNumber = highestPostNumber;
    return this;
  }

   /**
   * Get highestPostNumber
   * @return highestPostNumber
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getHighestPostNumber() {
    return highestPostNumber;
  }


  public void setHighestPostNumber(Integer highestPostNumber) {
    
    
    
    this.highestPostNumber = highestPostNumber;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner imageUrl(Object imageUrl) {
    
    
    
    
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * Get imageUrl
   * @return imageUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getImageUrl() {
    return imageUrl;
  }


  public void setImageUrl(Object imageUrl) {
    
    
    
    this.imageUrl = imageUrl;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner createdAt(String createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner lastPostedAt(String lastPostedAt) {
    
    
    
    
    this.lastPostedAt = lastPostedAt;
    return this;
  }

   /**
   * Get lastPostedAt
   * @return lastPostedAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getLastPostedAt() {
    return lastPostedAt;
  }


  public void setLastPostedAt(String lastPostedAt) {
    
    
    
    this.lastPostedAt = lastPostedAt;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner bumped(Boolean bumped) {
    
    
    
    
    this.bumped = bumped;
    return this;
  }

   /**
   * Get bumped
   * @return bumped
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getBumped() {
    return bumped;
  }


  public void setBumped(Boolean bumped) {
    
    
    
    this.bumped = bumped;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner bumpedAt(String bumpedAt) {
    
    
    
    
    this.bumpedAt = bumpedAt;
    return this;
  }

   /**
   * Get bumpedAt
   * @return bumpedAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getBumpedAt() {
    return bumpedAt;
  }


  public void setBumpedAt(String bumpedAt) {
    
    
    
    this.bumpedAt = bumpedAt;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner archetype(String archetype) {
    
    
    
    
    this.archetype = archetype;
    return this;
  }

   /**
   * Get archetype
   * @return archetype
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getArchetype() {
    return archetype;
  }


  public void setArchetype(String archetype) {
    
    
    
    this.archetype = archetype;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner unseen(Boolean unseen) {
    
    
    
    
    this.unseen = unseen;
    return this;
  }

   /**
   * Get unseen
   * @return unseen
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getUnseen() {
    return unseen;
  }


  public void setUnseen(Boolean unseen) {
    
    
    
    this.unseen = unseen;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner pinned(Boolean pinned) {
    
    
    
    
    this.pinned = pinned;
    return this;
  }

   /**
   * Get pinned
   * @return pinned
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getPinned() {
    return pinned;
  }


  public void setPinned(Boolean pinned) {
    
    
    
    this.pinned = pinned;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner unpinned(Object unpinned) {
    
    
    
    
    this.unpinned = unpinned;
    return this;
  }

   /**
   * Get unpinned
   * @return unpinned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getUnpinned() {
    return unpinned;
  }


  public void setUnpinned(Object unpinned) {
    
    
    
    this.unpinned = unpinned;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner excerpt(String excerpt) {
    
    
    
    
    this.excerpt = excerpt;
    return this;
  }

   /**
   * Get excerpt
   * @return excerpt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getExcerpt() {
    return excerpt;
  }


  public void setExcerpt(String excerpt) {
    
    
    
    this.excerpt = excerpt;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner visible(Boolean visible) {
    
    
    
    
    this.visible = visible;
    return this;
  }

   /**
   * Get visible
   * @return visible
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getVisible() {
    return visible;
  }


  public void setVisible(Boolean visible) {
    
    
    
    this.visible = visible;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner closed(Boolean closed) {
    
    
    
    
    this.closed = closed;
    return this;
  }

   /**
   * Get closed
   * @return closed
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getClosed() {
    return closed;
  }


  public void setClosed(Boolean closed) {
    
    
    
    this.closed = closed;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner archived(Boolean archived) {
    
    
    
    
    this.archived = archived;
    return this;
  }

   /**
   * Get archived
   * @return archived
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getArchived() {
    return archived;
  }


  public void setArchived(Boolean archived) {
    
    
    
    this.archived = archived;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner bookmarked(Object bookmarked) {
    
    
    
    
    this.bookmarked = bookmarked;
    return this;
  }

   /**
   * Get bookmarked
   * @return bookmarked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getBookmarked() {
    return bookmarked;
  }


  public void setBookmarked(Object bookmarked) {
    
    
    
    this.bookmarked = bookmarked;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner liked(Object liked) {
    
    
    
    
    this.liked = liked;
    return this;
  }

   /**
   * Get liked
   * @return liked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getLiked() {
    return liked;
  }


  public void setLiked(Object liked) {
    
    
    
    this.liked = liked;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner views(Integer views) {
    
    
    
    
    this.views = views;
    return this;
  }

   /**
   * Get views
   * @return views
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getViews() {
    return views;
  }


  public void setViews(Integer views) {
    
    
    
    this.views = views;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner likeCount(Integer likeCount) {
    
    
    
    
    this.likeCount = likeCount;
    return this;
  }

   /**
   * Get likeCount
   * @return likeCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getLikeCount() {
    return likeCount;
  }


  public void setLikeCount(Integer likeCount) {
    
    
    
    this.likeCount = likeCount;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner hasSummary(Boolean hasSummary) {
    
    
    
    
    this.hasSummary = hasSummary;
    return this;
  }

   /**
   * Get hasSummary
   * @return hasSummary
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getHasSummary() {
    return hasSummary;
  }


  public void setHasSummary(Boolean hasSummary) {
    
    
    
    this.hasSummary = hasSummary;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner lastPosterUsername(String lastPosterUsername) {
    
    
    
    
    this.lastPosterUsername = lastPosterUsername;
    return this;
  }

   /**
   * Get lastPosterUsername
   * @return lastPosterUsername
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getLastPosterUsername() {
    return lastPosterUsername;
  }


  public void setLastPosterUsername(String lastPosterUsername) {
    
    
    
    this.lastPosterUsername = lastPosterUsername;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner categoryId(Integer categoryId) {
    
    
    
    
    this.categoryId = categoryId;
    return this;
  }

   /**
   * Get categoryId
   * @return categoryId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getCategoryId() {
    return categoryId;
  }


  public void setCategoryId(Integer categoryId) {
    
    
    
    this.categoryId = categoryId;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner pinnedGlobally(Boolean pinnedGlobally) {
    
    
    
    
    this.pinnedGlobally = pinnedGlobally;
    return this;
  }

   /**
   * Get pinnedGlobally
   * @return pinnedGlobally
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getPinnedGlobally() {
    return pinnedGlobally;
  }


  public void setPinnedGlobally(Boolean pinnedGlobally) {
    
    
    
    this.pinnedGlobally = pinnedGlobally;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner featuredLink(Object featuredLink) {
    
    
    
    
    this.featuredLink = featuredLink;
    return this;
  }

   /**
   * Get featuredLink
   * @return featuredLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getFeaturedLink() {
    return featuredLink;
  }


  public void setFeaturedLink(Object featuredLink) {
    
    
    
    this.featuredLink = featuredLink;
  }


  public CategoriesListTopicsResponseTopicListTopicsInner posters(List<CategoriesListTopicsResponseTopicListTopicsInnerPostersInner> posters) {
    
    
    
    
    this.posters = posters;
    return this;
  }

  public CategoriesListTopicsResponseTopicListTopicsInner addPostersItem(CategoriesListTopicsResponseTopicListTopicsInnerPostersInner postersItem) {
    this.posters.add(postersItem);
    return this;
  }

   /**
   * Get posters
   * @return posters
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<CategoriesListTopicsResponseTopicListTopicsInnerPostersInner> getPosters() {
    return posters;
  }


  public void setPosters(List<CategoriesListTopicsResponseTopicListTopicsInnerPostersInner> posters) {
    
    
    
    this.posters = posters;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CategoriesListTopicsResponseTopicListTopicsInner instance itself
   */
  public CategoriesListTopicsResponseTopicListTopicsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CategoriesListTopicsResponseTopicListTopicsInner categoriesListTopicsResponseTopicListTopicsInner = (CategoriesListTopicsResponseTopicListTopicsInner) o;
    return Objects.equals(this.title, categoriesListTopicsResponseTopicListTopicsInner.title) &&
        Objects.equals(this.id, categoriesListTopicsResponseTopicListTopicsInner.id) &&
        Objects.equals(this.fancyTitle, categoriesListTopicsResponseTopicListTopicsInner.fancyTitle) &&
        Objects.equals(this.slug, categoriesListTopicsResponseTopicListTopicsInner.slug) &&
        Objects.equals(this.postsCount, categoriesListTopicsResponseTopicListTopicsInner.postsCount) &&
        Objects.equals(this.replyCount, categoriesListTopicsResponseTopicListTopicsInner.replyCount) &&
        Objects.equals(this.highestPostNumber, categoriesListTopicsResponseTopicListTopicsInner.highestPostNumber) &&
        Objects.equals(this.imageUrl, categoriesListTopicsResponseTopicListTopicsInner.imageUrl) &&
        Objects.equals(this.createdAt, categoriesListTopicsResponseTopicListTopicsInner.createdAt) &&
        Objects.equals(this.lastPostedAt, categoriesListTopicsResponseTopicListTopicsInner.lastPostedAt) &&
        Objects.equals(this.bumped, categoriesListTopicsResponseTopicListTopicsInner.bumped) &&
        Objects.equals(this.bumpedAt, categoriesListTopicsResponseTopicListTopicsInner.bumpedAt) &&
        Objects.equals(this.archetype, categoriesListTopicsResponseTopicListTopicsInner.archetype) &&
        Objects.equals(this.unseen, categoriesListTopicsResponseTopicListTopicsInner.unseen) &&
        Objects.equals(this.pinned, categoriesListTopicsResponseTopicListTopicsInner.pinned) &&
        Objects.equals(this.unpinned, categoriesListTopicsResponseTopicListTopicsInner.unpinned) &&
        Objects.equals(this.excerpt, categoriesListTopicsResponseTopicListTopicsInner.excerpt) &&
        Objects.equals(this.visible, categoriesListTopicsResponseTopicListTopicsInner.visible) &&
        Objects.equals(this.closed, categoriesListTopicsResponseTopicListTopicsInner.closed) &&
        Objects.equals(this.archived, categoriesListTopicsResponseTopicListTopicsInner.archived) &&
        Objects.equals(this.bookmarked, categoriesListTopicsResponseTopicListTopicsInner.bookmarked) &&
        Objects.equals(this.liked, categoriesListTopicsResponseTopicListTopicsInner.liked) &&
        Objects.equals(this.views, categoriesListTopicsResponseTopicListTopicsInner.views) &&
        Objects.equals(this.likeCount, categoriesListTopicsResponseTopicListTopicsInner.likeCount) &&
        Objects.equals(this.hasSummary, categoriesListTopicsResponseTopicListTopicsInner.hasSummary) &&
        Objects.equals(this.lastPosterUsername, categoriesListTopicsResponseTopicListTopicsInner.lastPosterUsername) &&
        Objects.equals(this.categoryId, categoriesListTopicsResponseTopicListTopicsInner.categoryId) &&
        Objects.equals(this.pinnedGlobally, categoriesListTopicsResponseTopicListTopicsInner.pinnedGlobally) &&
        Objects.equals(this.featuredLink, categoriesListTopicsResponseTopicListTopicsInner.featuredLink) &&
        Objects.equals(this.posters, categoriesListTopicsResponseTopicListTopicsInner.posters)&&
        Objects.equals(this.additionalProperties, categoriesListTopicsResponseTopicListTopicsInner.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, id, fancyTitle, slug, postsCount, replyCount, highestPostNumber, imageUrl, createdAt, lastPostedAt, bumped, bumpedAt, archetype, unseen, pinned, unpinned, excerpt, visible, closed, archived, bookmarked, liked, views, likeCount, hasSummary, lastPosterUsername, categoryId, pinnedGlobally, featuredLink, posters, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CategoriesListTopicsResponseTopicListTopicsInner {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    fancyTitle: ").append(toIndentedString(fancyTitle)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    postsCount: ").append(toIndentedString(postsCount)).append("\n");
    sb.append("    replyCount: ").append(toIndentedString(replyCount)).append("\n");
    sb.append("    highestPostNumber: ").append(toIndentedString(highestPostNumber)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lastPostedAt: ").append(toIndentedString(lastPostedAt)).append("\n");
    sb.append("    bumped: ").append(toIndentedString(bumped)).append("\n");
    sb.append("    bumpedAt: ").append(toIndentedString(bumpedAt)).append("\n");
    sb.append("    archetype: ").append(toIndentedString(archetype)).append("\n");
    sb.append("    unseen: ").append(toIndentedString(unseen)).append("\n");
    sb.append("    pinned: ").append(toIndentedString(pinned)).append("\n");
    sb.append("    unpinned: ").append(toIndentedString(unpinned)).append("\n");
    sb.append("    excerpt: ").append(toIndentedString(excerpt)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    closed: ").append(toIndentedString(closed)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    bookmarked: ").append(toIndentedString(bookmarked)).append("\n");
    sb.append("    liked: ").append(toIndentedString(liked)).append("\n");
    sb.append("    views: ").append(toIndentedString(views)).append("\n");
    sb.append("    likeCount: ").append(toIndentedString(likeCount)).append("\n");
    sb.append("    hasSummary: ").append(toIndentedString(hasSummary)).append("\n");
    sb.append("    lastPosterUsername: ").append(toIndentedString(lastPosterUsername)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    pinnedGlobally: ").append(toIndentedString(pinnedGlobally)).append("\n");
    sb.append("    featuredLink: ").append(toIndentedString(featuredLink)).append("\n");
    sb.append("    posters: ").append(toIndentedString(posters)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("title");
    openapiFields.add("id");
    openapiFields.add("fancy_title");
    openapiFields.add("slug");
    openapiFields.add("posts_count");
    openapiFields.add("reply_count");
    openapiFields.add("highest_post_number");
    openapiFields.add("image_url");
    openapiFields.add("created_at");
    openapiFields.add("last_posted_at");
    openapiFields.add("bumped");
    openapiFields.add("bumped_at");
    openapiFields.add("archetype");
    openapiFields.add("unseen");
    openapiFields.add("pinned");
    openapiFields.add("unpinned");
    openapiFields.add("excerpt");
    openapiFields.add("visible");
    openapiFields.add("closed");
    openapiFields.add("archived");
    openapiFields.add("bookmarked");
    openapiFields.add("liked");
    openapiFields.add("views");
    openapiFields.add("like_count");
    openapiFields.add("has_summary");
    openapiFields.add("last_poster_username");
    openapiFields.add("category_id");
    openapiFields.add("pinned_globally");
    openapiFields.add("featured_link");
    openapiFields.add("posters");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("title");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("fancy_title");
    openapiRequiredFields.add("slug");
    openapiRequiredFields.add("posts_count");
    openapiRequiredFields.add("reply_count");
    openapiRequiredFields.add("highest_post_number");
    openapiRequiredFields.add("image_url");
    openapiRequiredFields.add("created_at");
    openapiRequiredFields.add("last_posted_at");
    openapiRequiredFields.add("bumped");
    openapiRequiredFields.add("bumped_at");
    openapiRequiredFields.add("archetype");
    openapiRequiredFields.add("unseen");
    openapiRequiredFields.add("pinned");
    openapiRequiredFields.add("unpinned");
    openapiRequiredFields.add("excerpt");
    openapiRequiredFields.add("visible");
    openapiRequiredFields.add("closed");
    openapiRequiredFields.add("archived");
    openapiRequiredFields.add("bookmarked");
    openapiRequiredFields.add("liked");
    openapiRequiredFields.add("views");
    openapiRequiredFields.add("like_count");
    openapiRequiredFields.add("has_summary");
    openapiRequiredFields.add("last_poster_username");
    openapiRequiredFields.add("category_id");
    openapiRequiredFields.add("pinned_globally");
    openapiRequiredFields.add("featured_link");
    openapiRequiredFields.add("posters");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CategoriesListTopicsResponseTopicListTopicsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CategoriesListTopicsResponseTopicListTopicsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CategoriesListTopicsResponseTopicListTopicsInner is not found in the empty JSON string", CategoriesListTopicsResponseTopicListTopicsInner.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CategoriesListTopicsResponseTopicListTopicsInner.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if (!jsonObj.get("fancy_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fancy_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fancy_title").toString()));
      }
      if (!jsonObj.get("slug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slug").toString()));
      }
      if (!jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if (!jsonObj.get("last_posted_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_posted_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_posted_at").toString()));
      }
      if (!jsonObj.get("bumped_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bumped_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bumped_at").toString()));
      }
      if (!jsonObj.get("archetype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `archetype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("archetype").toString()));
      }
      if (!jsonObj.get("excerpt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `excerpt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("excerpt").toString()));
      }
      if (!jsonObj.get("last_poster_username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_poster_username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_poster_username").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("posters").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `posters` to be an array in the JSON string but got `%s`", jsonObj.get("posters").toString()));
      }

      JsonArray jsonArrayposters = jsonObj.getAsJsonArray("posters");
      // validate the required field `posters` (array)
      for (int i = 0; i < jsonArrayposters.size(); i++) {
        CategoriesListTopicsResponseTopicListTopicsInnerPostersInner.validateJsonObject(jsonArrayposters.get(i).getAsJsonObject());
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CategoriesListTopicsResponseTopicListTopicsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CategoriesListTopicsResponseTopicListTopicsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CategoriesListTopicsResponseTopicListTopicsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CategoriesListTopicsResponseTopicListTopicsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CategoriesListTopicsResponseTopicListTopicsInner>() {
           @Override
           public void write(JsonWriter out, CategoriesListTopicsResponseTopicListTopicsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CategoriesListTopicsResponseTopicListTopicsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CategoriesListTopicsResponseTopicListTopicsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CategoriesListTopicsResponseTopicListTopicsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CategoriesListTopicsResponseTopicListTopicsInner
  * @throws IOException if the JSON string is invalid with respect to CategoriesListTopicsResponseTopicListTopicsInner
  */
  public static CategoriesListTopicsResponseTopicListTopicsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CategoriesListTopicsResponseTopicListTopicsInner.class);
  }

 /**
  * Convert an instance of CategoriesListTopicsResponseTopicListTopicsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

