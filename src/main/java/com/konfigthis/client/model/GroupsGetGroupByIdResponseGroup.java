/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * GroupsGetGroupByIdResponseGroup
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class GroupsGetGroupByIdResponseGroup {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private Object title = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_AUTOMATIC = "automatic";
  @SerializedName(SERIALIZED_NAME_AUTOMATIC)
  private Boolean automatic;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_USER_COUNT = "user_count";
  @SerializedName(SERIALIZED_NAME_USER_COUNT)
  private Integer userCount;

  public static final String SERIALIZED_NAME_MENTIONABLE_LEVEL = "mentionable_level";
  @SerializedName(SERIALIZED_NAME_MENTIONABLE_LEVEL)
  private Integer mentionableLevel;

  public static final String SERIALIZED_NAME_MESSAGEABLE_LEVEL = "messageable_level";
  @SerializedName(SERIALIZED_NAME_MESSAGEABLE_LEVEL)
  private Integer messageableLevel;

  public static final String SERIALIZED_NAME_VISIBILITY_LEVEL = "visibility_level";
  @SerializedName(SERIALIZED_NAME_VISIBILITY_LEVEL)
  private Integer visibilityLevel;

  public static final String SERIALIZED_NAME_PRIMARY_GROUP = "primary_group";
  @SerializedName(SERIALIZED_NAME_PRIMARY_GROUP)
  private Boolean primaryGroup;

  public static final String SERIALIZED_NAME_GRANT_TRUST_LEVEL = "grant_trust_level";
  @SerializedName(SERIALIZED_NAME_GRANT_TRUST_LEVEL)
  private Object grantTrustLevel = null;

  public static final String SERIALIZED_NAME_INCOMING_EMAIL = "incoming_email";
  @SerializedName(SERIALIZED_NAME_INCOMING_EMAIL)
  private Object incomingEmail = null;

  public static final String SERIALIZED_NAME_HAS_MESSAGES = "has_messages";
  @SerializedName(SERIALIZED_NAME_HAS_MESSAGES)
  private Boolean hasMessages;

  public static final String SERIALIZED_NAME_FLAIR_URL = "flair_url";
  @SerializedName(SERIALIZED_NAME_FLAIR_URL)
  private Object flairUrl = null;

  public static final String SERIALIZED_NAME_FLAIR_BG_COLOR = "flair_bg_color";
  @SerializedName(SERIALIZED_NAME_FLAIR_BG_COLOR)
  private Object flairBgColor = null;

  public static final String SERIALIZED_NAME_FLAIR_COLOR = "flair_color";
  @SerializedName(SERIALIZED_NAME_FLAIR_COLOR)
  private Object flairColor = null;

  public static final String SERIALIZED_NAME_BIO_RAW = "bio_raw";
  @SerializedName(SERIALIZED_NAME_BIO_RAW)
  private Object bioRaw = null;

  public static final String SERIALIZED_NAME_BIO_COOKED = "bio_cooked";
  @SerializedName(SERIALIZED_NAME_BIO_COOKED)
  private Object bioCooked = null;

  public static final String SERIALIZED_NAME_BIO_EXCERPT = "bio_excerpt";
  @SerializedName(SERIALIZED_NAME_BIO_EXCERPT)
  private Object bioExcerpt = null;

  public static final String SERIALIZED_NAME_PUBLIC_ADMISSION = "public_admission";
  @SerializedName(SERIALIZED_NAME_PUBLIC_ADMISSION)
  private Boolean publicAdmission;

  public static final String SERIALIZED_NAME_PUBLIC_EXIT = "public_exit";
  @SerializedName(SERIALIZED_NAME_PUBLIC_EXIT)
  private Boolean publicExit;

  public static final String SERIALIZED_NAME_ALLOW_MEMBERSHIP_REQUESTS = "allow_membership_requests";
  @SerializedName(SERIALIZED_NAME_ALLOW_MEMBERSHIP_REQUESTS)
  private Boolean allowMembershipRequests;

  public static final String SERIALIZED_NAME_FULL_NAME = "full_name";
  @SerializedName(SERIALIZED_NAME_FULL_NAME)
  private Object fullName = null;

  public static final String SERIALIZED_NAME_DEFAULT_NOTIFICATION_LEVEL = "default_notification_level";
  @SerializedName(SERIALIZED_NAME_DEFAULT_NOTIFICATION_LEVEL)
  private Integer defaultNotificationLevel;

  public static final String SERIALIZED_NAME_MEMBERSHIP_REQUEST_TEMPLATE = "membership_request_template";
  @SerializedName(SERIALIZED_NAME_MEMBERSHIP_REQUEST_TEMPLATE)
  private Object membershipRequestTemplate = null;

  public static final String SERIALIZED_NAME_IS_GROUP_USER = "is_group_user";
  @SerializedName(SERIALIZED_NAME_IS_GROUP_USER)
  private Boolean isGroupUser;

  public static final String SERIALIZED_NAME_MEMBERS_VISIBILITY_LEVEL = "members_visibility_level";
  @SerializedName(SERIALIZED_NAME_MEMBERS_VISIBILITY_LEVEL)
  private Integer membersVisibilityLevel;

  public static final String SERIALIZED_NAME_CAN_SEE_MEMBERS = "can_see_members";
  @SerializedName(SERIALIZED_NAME_CAN_SEE_MEMBERS)
  private Boolean canSeeMembers;

  public static final String SERIALIZED_NAME_CAN_ADMIN_GROUP = "can_admin_group";
  @SerializedName(SERIALIZED_NAME_CAN_ADMIN_GROUP)
  private Boolean canAdminGroup;

  public static final String SERIALIZED_NAME_CAN_EDIT_GROUP = "can_edit_group";
  @SerializedName(SERIALIZED_NAME_CAN_EDIT_GROUP)
  private Boolean canEditGroup;

  public static final String SERIALIZED_NAME_PUBLISH_READ_STATE = "publish_read_state";
  @SerializedName(SERIALIZED_NAME_PUBLISH_READ_STATE)
  private Boolean publishReadState;

  public static final String SERIALIZED_NAME_IS_GROUP_OWNER_DISPLAY = "is_group_owner_display";
  @SerializedName(SERIALIZED_NAME_IS_GROUP_OWNER_DISPLAY)
  private Boolean isGroupOwnerDisplay;

  public static final String SERIALIZED_NAME_MENTIONABLE = "mentionable";
  @SerializedName(SERIALIZED_NAME_MENTIONABLE)
  private Boolean mentionable;

  public static final String SERIALIZED_NAME_MESSAGEABLE = "messageable";
  @SerializedName(SERIALIZED_NAME_MESSAGEABLE)
  private Boolean messageable;

  public static final String SERIALIZED_NAME_AUTOMATIC_MEMBERSHIP_EMAIL_DOMAINS = "automatic_membership_email_domains";
  @SerializedName(SERIALIZED_NAME_AUTOMATIC_MEMBERSHIP_EMAIL_DOMAINS)
  private Object automaticMembershipEmailDomains = null;

  public static final String SERIALIZED_NAME_SMTP_UPDATED_AT = "smtp_updated_at";
  @SerializedName(SERIALIZED_NAME_SMTP_UPDATED_AT)
  private Object smtpUpdatedAt = null;

  public static final String SERIALIZED_NAME_SMTP_UPDATED_BY = "smtp_updated_by";
  @SerializedName(SERIALIZED_NAME_SMTP_UPDATED_BY)
  private Object smtpUpdatedBy = null;

  public static final String SERIALIZED_NAME_SMTP_ENABLED = "smtp_enabled";
  @SerializedName(SERIALIZED_NAME_SMTP_ENABLED)
  private Boolean smtpEnabled;

  public static final String SERIALIZED_NAME_SMTP_SERVER = "smtp_server";
  @SerializedName(SERIALIZED_NAME_SMTP_SERVER)
  private Object smtpServer = null;

  public static final String SERIALIZED_NAME_SMTP_PORT = "smtp_port";
  @SerializedName(SERIALIZED_NAME_SMTP_PORT)
  private Object smtpPort = null;

  public static final String SERIALIZED_NAME_SMTP_SSL = "smtp_ssl";
  @SerializedName(SERIALIZED_NAME_SMTP_SSL)
  private Object smtpSsl = null;

  public static final String SERIALIZED_NAME_IMAP_ENABLED = "imap_enabled";
  @SerializedName(SERIALIZED_NAME_IMAP_ENABLED)
  private Boolean imapEnabled;

  public static final String SERIALIZED_NAME_IMAP_UPDATED_AT = "imap_updated_at";
  @SerializedName(SERIALIZED_NAME_IMAP_UPDATED_AT)
  private Object imapUpdatedAt = null;

  public static final String SERIALIZED_NAME_IMAP_UPDATED_BY = "imap_updated_by";
  @SerializedName(SERIALIZED_NAME_IMAP_UPDATED_BY)
  private Object imapUpdatedBy = null;

  public static final String SERIALIZED_NAME_IMAP_SERVER = "imap_server";
  @SerializedName(SERIALIZED_NAME_IMAP_SERVER)
  private Object imapServer = null;

  public static final String SERIALIZED_NAME_IMAP_PORT = "imap_port";
  @SerializedName(SERIALIZED_NAME_IMAP_PORT)
  private Object imapPort = null;

  public static final String SERIALIZED_NAME_IMAP_SSL = "imap_ssl";
  @SerializedName(SERIALIZED_NAME_IMAP_SSL)
  private Object imapSsl = null;

  public static final String SERIALIZED_NAME_IMAP_MAILBOX_NAME = "imap_mailbox_name";
  @SerializedName(SERIALIZED_NAME_IMAP_MAILBOX_NAME)
  private String imapMailboxName;

  public static final String SERIALIZED_NAME_IMAP_MAILBOXES = "imap_mailboxes";
  @SerializedName(SERIALIZED_NAME_IMAP_MAILBOXES)
  private List<Object> imapMailboxes = new ArrayList<>();

  public static final String SERIALIZED_NAME_EMAIL_USERNAME = "email_username";
  @SerializedName(SERIALIZED_NAME_EMAIL_USERNAME)
  private Object emailUsername = null;

  public static final String SERIALIZED_NAME_EMAIL_FROM_ALIAS = "email_from_alias";
  @SerializedName(SERIALIZED_NAME_EMAIL_FROM_ALIAS)
  private Object emailFromAlias = null;

  public static final String SERIALIZED_NAME_EMAIL_PASSWORD = "email_password";
  @SerializedName(SERIALIZED_NAME_EMAIL_PASSWORD)
  private Object emailPassword = null;

  public static final String SERIALIZED_NAME_IMAP_LAST_ERROR = "imap_last_error";
  @SerializedName(SERIALIZED_NAME_IMAP_LAST_ERROR)
  private Object imapLastError = null;

  public static final String SERIALIZED_NAME_IMAP_OLD_EMAILS = "imap_old_emails";
  @SerializedName(SERIALIZED_NAME_IMAP_OLD_EMAILS)
  private Object imapOldEmails = null;

  public static final String SERIALIZED_NAME_IMAP_NEW_EMAILS = "imap_new_emails";
  @SerializedName(SERIALIZED_NAME_IMAP_NEW_EMAILS)
  private Object imapNewEmails = null;

  public static final String SERIALIZED_NAME_MESSAGE_COUNT = "message_count";
  @SerializedName(SERIALIZED_NAME_MESSAGE_COUNT)
  private Integer messageCount;

  public static final String SERIALIZED_NAME_ALLOW_UNKNOWN_SENDER_TOPIC_REPLIES = "allow_unknown_sender_topic_replies";
  @SerializedName(SERIALIZED_NAME_ALLOW_UNKNOWN_SENDER_TOPIC_REPLIES)
  private Boolean allowUnknownSenderTopicReplies;

  public static final String SERIALIZED_NAME_ASSOCIATED_GROUP_IDS = "associated_group_ids";
  @SerializedName(SERIALIZED_NAME_ASSOCIATED_GROUP_IDS)
  private List<Object> associatedGroupIds = null;

  public static final String SERIALIZED_NAME_WATCHING_CATEGORY_IDS = "watching_category_ids";
  @SerializedName(SERIALIZED_NAME_WATCHING_CATEGORY_IDS)
  private List<Object> watchingCategoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRACKING_CATEGORY_IDS = "tracking_category_ids";
  @SerializedName(SERIALIZED_NAME_TRACKING_CATEGORY_IDS)
  private List<Object> trackingCategoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_WATCHING_FIRST_POST_CATEGORY_IDS = "watching_first_post_category_ids";
  @SerializedName(SERIALIZED_NAME_WATCHING_FIRST_POST_CATEGORY_IDS)
  private List<Object> watchingFirstPostCategoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_REGULAR_CATEGORY_IDS = "regular_category_ids";
  @SerializedName(SERIALIZED_NAME_REGULAR_CATEGORY_IDS)
  private List<Object> regularCategoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_MUTED_CATEGORY_IDS = "muted_category_ids";
  @SerializedName(SERIALIZED_NAME_MUTED_CATEGORY_IDS)
  private List<Object> mutedCategoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_WATCHING_TAGS = "watching_tags";
  @SerializedName(SERIALIZED_NAME_WATCHING_TAGS)
  private List<Object> watchingTags = null;

  public static final String SERIALIZED_NAME_WATCHING_FIRST_POST_TAGS = "watching_first_post_tags";
  @SerializedName(SERIALIZED_NAME_WATCHING_FIRST_POST_TAGS)
  private List<Object> watchingFirstPostTags = null;

  public static final String SERIALIZED_NAME_TRACKING_TAGS = "tracking_tags";
  @SerializedName(SERIALIZED_NAME_TRACKING_TAGS)
  private List<Object> trackingTags = null;

  public static final String SERIALIZED_NAME_REGULAR_TAGS = "regular_tags";
  @SerializedName(SERIALIZED_NAME_REGULAR_TAGS)
  private List<Object> regularTags = null;

  public static final String SERIALIZED_NAME_MUTED_TAGS = "muted_tags";
  @SerializedName(SERIALIZED_NAME_MUTED_TAGS)
  private List<Object> mutedTags = null;

  public GroupsGetGroupByIdResponseGroup() {
  }

  public GroupsGetGroupByIdResponseGroup title(Object title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getTitle() {
    return title;
  }


  public void setTitle(Object title) {
    
    
    
    this.title = title;
  }


  public GroupsGetGroupByIdResponseGroup id(Integer id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    
    
    
    this.id = id;
  }


  public GroupsGetGroupByIdResponseGroup automatic(Boolean automatic) {
    
    
    
    
    this.automatic = automatic;
    return this;
  }

   /**
   * Get automatic
   * @return automatic
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getAutomatic() {
    return automatic;
  }


  public void setAutomatic(Boolean automatic) {
    
    
    
    this.automatic = automatic;
  }


  public GroupsGetGroupByIdResponseGroup name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public GroupsGetGroupByIdResponseGroup userCount(Integer userCount) {
    
    
    
    
    this.userCount = userCount;
    return this;
  }

   /**
   * Get userCount
   * @return userCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getUserCount() {
    return userCount;
  }


  public void setUserCount(Integer userCount) {
    
    
    
    this.userCount = userCount;
  }


  public GroupsGetGroupByIdResponseGroup mentionableLevel(Integer mentionableLevel) {
    
    
    
    
    this.mentionableLevel = mentionableLevel;
    return this;
  }

   /**
   * Get mentionableLevel
   * @return mentionableLevel
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getMentionableLevel() {
    return mentionableLevel;
  }


  public void setMentionableLevel(Integer mentionableLevel) {
    
    
    
    this.mentionableLevel = mentionableLevel;
  }


  public GroupsGetGroupByIdResponseGroup messageableLevel(Integer messageableLevel) {
    
    
    
    
    this.messageableLevel = messageableLevel;
    return this;
  }

   /**
   * Get messageableLevel
   * @return messageableLevel
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getMessageableLevel() {
    return messageableLevel;
  }


  public void setMessageableLevel(Integer messageableLevel) {
    
    
    
    this.messageableLevel = messageableLevel;
  }


  public GroupsGetGroupByIdResponseGroup visibilityLevel(Integer visibilityLevel) {
    
    
    
    
    this.visibilityLevel = visibilityLevel;
    return this;
  }

   /**
   * Get visibilityLevel
   * @return visibilityLevel
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getVisibilityLevel() {
    return visibilityLevel;
  }


  public void setVisibilityLevel(Integer visibilityLevel) {
    
    
    
    this.visibilityLevel = visibilityLevel;
  }


  public GroupsGetGroupByIdResponseGroup primaryGroup(Boolean primaryGroup) {
    
    
    
    
    this.primaryGroup = primaryGroup;
    return this;
  }

   /**
   * Get primaryGroup
   * @return primaryGroup
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getPrimaryGroup() {
    return primaryGroup;
  }


  public void setPrimaryGroup(Boolean primaryGroup) {
    
    
    
    this.primaryGroup = primaryGroup;
  }


  public GroupsGetGroupByIdResponseGroup grantTrustLevel(Object grantTrustLevel) {
    
    
    
    
    this.grantTrustLevel = grantTrustLevel;
    return this;
  }

   /**
   * Get grantTrustLevel
   * @return grantTrustLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getGrantTrustLevel() {
    return grantTrustLevel;
  }


  public void setGrantTrustLevel(Object grantTrustLevel) {
    
    
    
    this.grantTrustLevel = grantTrustLevel;
  }


  public GroupsGetGroupByIdResponseGroup incomingEmail(Object incomingEmail) {
    
    
    
    
    this.incomingEmail = incomingEmail;
    return this;
  }

   /**
   * Get incomingEmail
   * @return incomingEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getIncomingEmail() {
    return incomingEmail;
  }


  public void setIncomingEmail(Object incomingEmail) {
    
    
    
    this.incomingEmail = incomingEmail;
  }


  public GroupsGetGroupByIdResponseGroup hasMessages(Boolean hasMessages) {
    
    
    
    
    this.hasMessages = hasMessages;
    return this;
  }

   /**
   * Get hasMessages
   * @return hasMessages
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getHasMessages() {
    return hasMessages;
  }


  public void setHasMessages(Boolean hasMessages) {
    
    
    
    this.hasMessages = hasMessages;
  }


  public GroupsGetGroupByIdResponseGroup flairUrl(Object flairUrl) {
    
    
    
    
    this.flairUrl = flairUrl;
    return this;
  }

   /**
   * Get flairUrl
   * @return flairUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getFlairUrl() {
    return flairUrl;
  }


  public void setFlairUrl(Object flairUrl) {
    
    
    
    this.flairUrl = flairUrl;
  }


  public GroupsGetGroupByIdResponseGroup flairBgColor(Object flairBgColor) {
    
    
    
    
    this.flairBgColor = flairBgColor;
    return this;
  }

   /**
   * Get flairBgColor
   * @return flairBgColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getFlairBgColor() {
    return flairBgColor;
  }


  public void setFlairBgColor(Object flairBgColor) {
    
    
    
    this.flairBgColor = flairBgColor;
  }


  public GroupsGetGroupByIdResponseGroup flairColor(Object flairColor) {
    
    
    
    
    this.flairColor = flairColor;
    return this;
  }

   /**
   * Get flairColor
   * @return flairColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getFlairColor() {
    return flairColor;
  }


  public void setFlairColor(Object flairColor) {
    
    
    
    this.flairColor = flairColor;
  }


  public GroupsGetGroupByIdResponseGroup bioRaw(Object bioRaw) {
    
    
    
    
    this.bioRaw = bioRaw;
    return this;
  }

   /**
   * Get bioRaw
   * @return bioRaw
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getBioRaw() {
    return bioRaw;
  }


  public void setBioRaw(Object bioRaw) {
    
    
    
    this.bioRaw = bioRaw;
  }


  public GroupsGetGroupByIdResponseGroup bioCooked(Object bioCooked) {
    
    
    
    
    this.bioCooked = bioCooked;
    return this;
  }

   /**
   * Get bioCooked
   * @return bioCooked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getBioCooked() {
    return bioCooked;
  }


  public void setBioCooked(Object bioCooked) {
    
    
    
    this.bioCooked = bioCooked;
  }


  public GroupsGetGroupByIdResponseGroup bioExcerpt(Object bioExcerpt) {
    
    
    
    
    this.bioExcerpt = bioExcerpt;
    return this;
  }

   /**
   * Get bioExcerpt
   * @return bioExcerpt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getBioExcerpt() {
    return bioExcerpt;
  }


  public void setBioExcerpt(Object bioExcerpt) {
    
    
    
    this.bioExcerpt = bioExcerpt;
  }


  public GroupsGetGroupByIdResponseGroup publicAdmission(Boolean publicAdmission) {
    
    
    
    
    this.publicAdmission = publicAdmission;
    return this;
  }

   /**
   * Get publicAdmission
   * @return publicAdmission
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getPublicAdmission() {
    return publicAdmission;
  }


  public void setPublicAdmission(Boolean publicAdmission) {
    
    
    
    this.publicAdmission = publicAdmission;
  }


  public GroupsGetGroupByIdResponseGroup publicExit(Boolean publicExit) {
    
    
    
    
    this.publicExit = publicExit;
    return this;
  }

   /**
   * Get publicExit
   * @return publicExit
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getPublicExit() {
    return publicExit;
  }


  public void setPublicExit(Boolean publicExit) {
    
    
    
    this.publicExit = publicExit;
  }


  public GroupsGetGroupByIdResponseGroup allowMembershipRequests(Boolean allowMembershipRequests) {
    
    
    
    
    this.allowMembershipRequests = allowMembershipRequests;
    return this;
  }

   /**
   * Get allowMembershipRequests
   * @return allowMembershipRequests
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getAllowMembershipRequests() {
    return allowMembershipRequests;
  }


  public void setAllowMembershipRequests(Boolean allowMembershipRequests) {
    
    
    
    this.allowMembershipRequests = allowMembershipRequests;
  }


  public GroupsGetGroupByIdResponseGroup fullName(Object fullName) {
    
    
    
    
    this.fullName = fullName;
    return this;
  }

   /**
   * Get fullName
   * @return fullName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getFullName() {
    return fullName;
  }


  public void setFullName(Object fullName) {
    
    
    
    this.fullName = fullName;
  }


  public GroupsGetGroupByIdResponseGroup defaultNotificationLevel(Integer defaultNotificationLevel) {
    
    
    
    
    this.defaultNotificationLevel = defaultNotificationLevel;
    return this;
  }

   /**
   * Get defaultNotificationLevel
   * @return defaultNotificationLevel
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getDefaultNotificationLevel() {
    return defaultNotificationLevel;
  }


  public void setDefaultNotificationLevel(Integer defaultNotificationLevel) {
    
    
    
    this.defaultNotificationLevel = defaultNotificationLevel;
  }


  public GroupsGetGroupByIdResponseGroup membershipRequestTemplate(Object membershipRequestTemplate) {
    
    
    
    
    this.membershipRequestTemplate = membershipRequestTemplate;
    return this;
  }

   /**
   * Get membershipRequestTemplate
   * @return membershipRequestTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getMembershipRequestTemplate() {
    return membershipRequestTemplate;
  }


  public void setMembershipRequestTemplate(Object membershipRequestTemplate) {
    
    
    
    this.membershipRequestTemplate = membershipRequestTemplate;
  }


  public GroupsGetGroupByIdResponseGroup isGroupUser(Boolean isGroupUser) {
    
    
    
    
    this.isGroupUser = isGroupUser;
    return this;
  }

   /**
   * Get isGroupUser
   * @return isGroupUser
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getIsGroupUser() {
    return isGroupUser;
  }


  public void setIsGroupUser(Boolean isGroupUser) {
    
    
    
    this.isGroupUser = isGroupUser;
  }


  public GroupsGetGroupByIdResponseGroup membersVisibilityLevel(Integer membersVisibilityLevel) {
    
    
    
    
    this.membersVisibilityLevel = membersVisibilityLevel;
    return this;
  }

   /**
   * Get membersVisibilityLevel
   * @return membersVisibilityLevel
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getMembersVisibilityLevel() {
    return membersVisibilityLevel;
  }


  public void setMembersVisibilityLevel(Integer membersVisibilityLevel) {
    
    
    
    this.membersVisibilityLevel = membersVisibilityLevel;
  }


  public GroupsGetGroupByIdResponseGroup canSeeMembers(Boolean canSeeMembers) {
    
    
    
    
    this.canSeeMembers = canSeeMembers;
    return this;
  }

   /**
   * Get canSeeMembers
   * @return canSeeMembers
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanSeeMembers() {
    return canSeeMembers;
  }


  public void setCanSeeMembers(Boolean canSeeMembers) {
    
    
    
    this.canSeeMembers = canSeeMembers;
  }


  public GroupsGetGroupByIdResponseGroup canAdminGroup(Boolean canAdminGroup) {
    
    
    
    
    this.canAdminGroup = canAdminGroup;
    return this;
  }

   /**
   * Get canAdminGroup
   * @return canAdminGroup
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanAdminGroup() {
    return canAdminGroup;
  }


  public void setCanAdminGroup(Boolean canAdminGroup) {
    
    
    
    this.canAdminGroup = canAdminGroup;
  }


  public GroupsGetGroupByIdResponseGroup canEditGroup(Boolean canEditGroup) {
    
    
    
    
    this.canEditGroup = canEditGroup;
    return this;
  }

   /**
   * Get canEditGroup
   * @return canEditGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCanEditGroup() {
    return canEditGroup;
  }


  public void setCanEditGroup(Boolean canEditGroup) {
    
    
    
    this.canEditGroup = canEditGroup;
  }


  public GroupsGetGroupByIdResponseGroup publishReadState(Boolean publishReadState) {
    
    
    
    
    this.publishReadState = publishReadState;
    return this;
  }

   /**
   * Get publishReadState
   * @return publishReadState
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getPublishReadState() {
    return publishReadState;
  }


  public void setPublishReadState(Boolean publishReadState) {
    
    
    
    this.publishReadState = publishReadState;
  }


  public GroupsGetGroupByIdResponseGroup isGroupOwnerDisplay(Boolean isGroupOwnerDisplay) {
    
    
    
    
    this.isGroupOwnerDisplay = isGroupOwnerDisplay;
    return this;
  }

   /**
   * Get isGroupOwnerDisplay
   * @return isGroupOwnerDisplay
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getIsGroupOwnerDisplay() {
    return isGroupOwnerDisplay;
  }


  public void setIsGroupOwnerDisplay(Boolean isGroupOwnerDisplay) {
    
    
    
    this.isGroupOwnerDisplay = isGroupOwnerDisplay;
  }


  public GroupsGetGroupByIdResponseGroup mentionable(Boolean mentionable) {
    
    
    
    
    this.mentionable = mentionable;
    return this;
  }

   /**
   * Get mentionable
   * @return mentionable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getMentionable() {
    return mentionable;
  }


  public void setMentionable(Boolean mentionable) {
    
    
    
    this.mentionable = mentionable;
  }


  public GroupsGetGroupByIdResponseGroup messageable(Boolean messageable) {
    
    
    
    
    this.messageable = messageable;
    return this;
  }

   /**
   * Get messageable
   * @return messageable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getMessageable() {
    return messageable;
  }


  public void setMessageable(Boolean messageable) {
    
    
    
    this.messageable = messageable;
  }


  public GroupsGetGroupByIdResponseGroup automaticMembershipEmailDomains(Object automaticMembershipEmailDomains) {
    
    
    
    
    this.automaticMembershipEmailDomains = automaticMembershipEmailDomains;
    return this;
  }

   /**
   * Get automaticMembershipEmailDomains
   * @return automaticMembershipEmailDomains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getAutomaticMembershipEmailDomains() {
    return automaticMembershipEmailDomains;
  }


  public void setAutomaticMembershipEmailDomains(Object automaticMembershipEmailDomains) {
    
    
    
    this.automaticMembershipEmailDomains = automaticMembershipEmailDomains;
  }


  public GroupsGetGroupByIdResponseGroup smtpUpdatedAt(Object smtpUpdatedAt) {
    
    
    
    
    this.smtpUpdatedAt = smtpUpdatedAt;
    return this;
  }

   /**
   * Get smtpUpdatedAt
   * @return smtpUpdatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getSmtpUpdatedAt() {
    return smtpUpdatedAt;
  }


  public void setSmtpUpdatedAt(Object smtpUpdatedAt) {
    
    
    
    this.smtpUpdatedAt = smtpUpdatedAt;
  }


  public GroupsGetGroupByIdResponseGroup smtpUpdatedBy(Object smtpUpdatedBy) {
    
    
    
    
    this.smtpUpdatedBy = smtpUpdatedBy;
    return this;
  }

   /**
   * Get smtpUpdatedBy
   * @return smtpUpdatedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getSmtpUpdatedBy() {
    return smtpUpdatedBy;
  }


  public void setSmtpUpdatedBy(Object smtpUpdatedBy) {
    
    
    
    this.smtpUpdatedBy = smtpUpdatedBy;
  }


  public GroupsGetGroupByIdResponseGroup smtpEnabled(Boolean smtpEnabled) {
    
    
    
    
    this.smtpEnabled = smtpEnabled;
    return this;
  }

   /**
   * Get smtpEnabled
   * @return smtpEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSmtpEnabled() {
    return smtpEnabled;
  }


  public void setSmtpEnabled(Boolean smtpEnabled) {
    
    
    
    this.smtpEnabled = smtpEnabled;
  }


  public GroupsGetGroupByIdResponseGroup smtpServer(Object smtpServer) {
    
    
    
    
    this.smtpServer = smtpServer;
    return this;
  }

   /**
   * Get smtpServer
   * @return smtpServer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getSmtpServer() {
    return smtpServer;
  }


  public void setSmtpServer(Object smtpServer) {
    
    
    
    this.smtpServer = smtpServer;
  }


  public GroupsGetGroupByIdResponseGroup smtpPort(Object smtpPort) {
    
    
    
    
    this.smtpPort = smtpPort;
    return this;
  }

   /**
   * Get smtpPort
   * @return smtpPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getSmtpPort() {
    return smtpPort;
  }


  public void setSmtpPort(Object smtpPort) {
    
    
    
    this.smtpPort = smtpPort;
  }


  public GroupsGetGroupByIdResponseGroup smtpSsl(Object smtpSsl) {
    
    
    
    
    this.smtpSsl = smtpSsl;
    return this;
  }

   /**
   * Get smtpSsl
   * @return smtpSsl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getSmtpSsl() {
    return smtpSsl;
  }


  public void setSmtpSsl(Object smtpSsl) {
    
    
    
    this.smtpSsl = smtpSsl;
  }


  public GroupsGetGroupByIdResponseGroup imapEnabled(Boolean imapEnabled) {
    
    
    
    
    this.imapEnabled = imapEnabled;
    return this;
  }

   /**
   * Get imapEnabled
   * @return imapEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getImapEnabled() {
    return imapEnabled;
  }


  public void setImapEnabled(Boolean imapEnabled) {
    
    
    
    this.imapEnabled = imapEnabled;
  }


  public GroupsGetGroupByIdResponseGroup imapUpdatedAt(Object imapUpdatedAt) {
    
    
    
    
    this.imapUpdatedAt = imapUpdatedAt;
    return this;
  }

   /**
   * Get imapUpdatedAt
   * @return imapUpdatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getImapUpdatedAt() {
    return imapUpdatedAt;
  }


  public void setImapUpdatedAt(Object imapUpdatedAt) {
    
    
    
    this.imapUpdatedAt = imapUpdatedAt;
  }


  public GroupsGetGroupByIdResponseGroup imapUpdatedBy(Object imapUpdatedBy) {
    
    
    
    
    this.imapUpdatedBy = imapUpdatedBy;
    return this;
  }

   /**
   * Get imapUpdatedBy
   * @return imapUpdatedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getImapUpdatedBy() {
    return imapUpdatedBy;
  }


  public void setImapUpdatedBy(Object imapUpdatedBy) {
    
    
    
    this.imapUpdatedBy = imapUpdatedBy;
  }


  public GroupsGetGroupByIdResponseGroup imapServer(Object imapServer) {
    
    
    
    
    this.imapServer = imapServer;
    return this;
  }

   /**
   * Get imapServer
   * @return imapServer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getImapServer() {
    return imapServer;
  }


  public void setImapServer(Object imapServer) {
    
    
    
    this.imapServer = imapServer;
  }


  public GroupsGetGroupByIdResponseGroup imapPort(Object imapPort) {
    
    
    
    
    this.imapPort = imapPort;
    return this;
  }

   /**
   * Get imapPort
   * @return imapPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getImapPort() {
    return imapPort;
  }


  public void setImapPort(Object imapPort) {
    
    
    
    this.imapPort = imapPort;
  }


  public GroupsGetGroupByIdResponseGroup imapSsl(Object imapSsl) {
    
    
    
    
    this.imapSsl = imapSsl;
    return this;
  }

   /**
   * Get imapSsl
   * @return imapSsl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getImapSsl() {
    return imapSsl;
  }


  public void setImapSsl(Object imapSsl) {
    
    
    
    this.imapSsl = imapSsl;
  }


  public GroupsGetGroupByIdResponseGroup imapMailboxName(String imapMailboxName) {
    
    
    
    
    this.imapMailboxName = imapMailboxName;
    return this;
  }

   /**
   * Get imapMailboxName
   * @return imapMailboxName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getImapMailboxName() {
    return imapMailboxName;
  }


  public void setImapMailboxName(String imapMailboxName) {
    
    
    
    this.imapMailboxName = imapMailboxName;
  }


  public GroupsGetGroupByIdResponseGroup imapMailboxes(List<Object> imapMailboxes) {
    
    
    
    
    this.imapMailboxes = imapMailboxes;
    return this;
  }

  public GroupsGetGroupByIdResponseGroup addImapMailboxesItem(Object imapMailboxesItem) {
    this.imapMailboxes.add(imapMailboxesItem);
    return this;
  }

   /**
   * Get imapMailboxes
   * @return imapMailboxes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getImapMailboxes() {
    return imapMailboxes;
  }


  public void setImapMailboxes(List<Object> imapMailboxes) {
    
    
    
    this.imapMailboxes = imapMailboxes;
  }


  public GroupsGetGroupByIdResponseGroup emailUsername(Object emailUsername) {
    
    
    
    
    this.emailUsername = emailUsername;
    return this;
  }

   /**
   * Get emailUsername
   * @return emailUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getEmailUsername() {
    return emailUsername;
  }


  public void setEmailUsername(Object emailUsername) {
    
    
    
    this.emailUsername = emailUsername;
  }


  public GroupsGetGroupByIdResponseGroup emailFromAlias(Object emailFromAlias) {
    
    
    
    
    this.emailFromAlias = emailFromAlias;
    return this;
  }

   /**
   * Get emailFromAlias
   * @return emailFromAlias
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getEmailFromAlias() {
    return emailFromAlias;
  }


  public void setEmailFromAlias(Object emailFromAlias) {
    
    
    
    this.emailFromAlias = emailFromAlias;
  }


  public GroupsGetGroupByIdResponseGroup emailPassword(Object emailPassword) {
    
    
    
    
    this.emailPassword = emailPassword;
    return this;
  }

   /**
   * Get emailPassword
   * @return emailPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getEmailPassword() {
    return emailPassword;
  }


  public void setEmailPassword(Object emailPassword) {
    
    
    
    this.emailPassword = emailPassword;
  }


  public GroupsGetGroupByIdResponseGroup imapLastError(Object imapLastError) {
    
    
    
    
    this.imapLastError = imapLastError;
    return this;
  }

   /**
   * Get imapLastError
   * @return imapLastError
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getImapLastError() {
    return imapLastError;
  }


  public void setImapLastError(Object imapLastError) {
    
    
    
    this.imapLastError = imapLastError;
  }


  public GroupsGetGroupByIdResponseGroup imapOldEmails(Object imapOldEmails) {
    
    
    
    
    this.imapOldEmails = imapOldEmails;
    return this;
  }

   /**
   * Get imapOldEmails
   * @return imapOldEmails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getImapOldEmails() {
    return imapOldEmails;
  }


  public void setImapOldEmails(Object imapOldEmails) {
    
    
    
    this.imapOldEmails = imapOldEmails;
  }


  public GroupsGetGroupByIdResponseGroup imapNewEmails(Object imapNewEmails) {
    
    
    
    
    this.imapNewEmails = imapNewEmails;
    return this;
  }

   /**
   * Get imapNewEmails
   * @return imapNewEmails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getImapNewEmails() {
    return imapNewEmails;
  }


  public void setImapNewEmails(Object imapNewEmails) {
    
    
    
    this.imapNewEmails = imapNewEmails;
  }


  public GroupsGetGroupByIdResponseGroup messageCount(Integer messageCount) {
    
    
    
    
    this.messageCount = messageCount;
    return this;
  }

   /**
   * Get messageCount
   * @return messageCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getMessageCount() {
    return messageCount;
  }


  public void setMessageCount(Integer messageCount) {
    
    
    
    this.messageCount = messageCount;
  }


  public GroupsGetGroupByIdResponseGroup allowUnknownSenderTopicReplies(Boolean allowUnknownSenderTopicReplies) {
    
    
    
    
    this.allowUnknownSenderTopicReplies = allowUnknownSenderTopicReplies;
    return this;
  }

   /**
   * Get allowUnknownSenderTopicReplies
   * @return allowUnknownSenderTopicReplies
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getAllowUnknownSenderTopicReplies() {
    return allowUnknownSenderTopicReplies;
  }


  public void setAllowUnknownSenderTopicReplies(Boolean allowUnknownSenderTopicReplies) {
    
    
    
    this.allowUnknownSenderTopicReplies = allowUnknownSenderTopicReplies;
  }


  public GroupsGetGroupByIdResponseGroup associatedGroupIds(List<Object> associatedGroupIds) {
    
    
    
    
    this.associatedGroupIds = associatedGroupIds;
    return this;
  }

  public GroupsGetGroupByIdResponseGroup addAssociatedGroupIdsItem(Object associatedGroupIdsItem) {
    if (this.associatedGroupIds == null) {
      this.associatedGroupIds = new ArrayList<>();
    }
    this.associatedGroupIds.add(associatedGroupIdsItem);
    return this;
  }

   /**
   * Get associatedGroupIds
   * @return associatedGroupIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getAssociatedGroupIds() {
    return associatedGroupIds;
  }


  public void setAssociatedGroupIds(List<Object> associatedGroupIds) {
    
    
    
    this.associatedGroupIds = associatedGroupIds;
  }


  public GroupsGetGroupByIdResponseGroup watchingCategoryIds(List<Object> watchingCategoryIds) {
    
    
    
    
    this.watchingCategoryIds = watchingCategoryIds;
    return this;
  }

  public GroupsGetGroupByIdResponseGroup addWatchingCategoryIdsItem(Object watchingCategoryIdsItem) {
    this.watchingCategoryIds.add(watchingCategoryIdsItem);
    return this;
  }

   /**
   * Get watchingCategoryIds
   * @return watchingCategoryIds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getWatchingCategoryIds() {
    return watchingCategoryIds;
  }


  public void setWatchingCategoryIds(List<Object> watchingCategoryIds) {
    
    
    
    this.watchingCategoryIds = watchingCategoryIds;
  }


  public GroupsGetGroupByIdResponseGroup trackingCategoryIds(List<Object> trackingCategoryIds) {
    
    
    
    
    this.trackingCategoryIds = trackingCategoryIds;
    return this;
  }

  public GroupsGetGroupByIdResponseGroup addTrackingCategoryIdsItem(Object trackingCategoryIdsItem) {
    this.trackingCategoryIds.add(trackingCategoryIdsItem);
    return this;
  }

   /**
   * Get trackingCategoryIds
   * @return trackingCategoryIds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getTrackingCategoryIds() {
    return trackingCategoryIds;
  }


  public void setTrackingCategoryIds(List<Object> trackingCategoryIds) {
    
    
    
    this.trackingCategoryIds = trackingCategoryIds;
  }


  public GroupsGetGroupByIdResponseGroup watchingFirstPostCategoryIds(List<Object> watchingFirstPostCategoryIds) {
    
    
    
    
    this.watchingFirstPostCategoryIds = watchingFirstPostCategoryIds;
    return this;
  }

  public GroupsGetGroupByIdResponseGroup addWatchingFirstPostCategoryIdsItem(Object watchingFirstPostCategoryIdsItem) {
    this.watchingFirstPostCategoryIds.add(watchingFirstPostCategoryIdsItem);
    return this;
  }

   /**
   * Get watchingFirstPostCategoryIds
   * @return watchingFirstPostCategoryIds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getWatchingFirstPostCategoryIds() {
    return watchingFirstPostCategoryIds;
  }


  public void setWatchingFirstPostCategoryIds(List<Object> watchingFirstPostCategoryIds) {
    
    
    
    this.watchingFirstPostCategoryIds = watchingFirstPostCategoryIds;
  }


  public GroupsGetGroupByIdResponseGroup regularCategoryIds(List<Object> regularCategoryIds) {
    
    
    
    
    this.regularCategoryIds = regularCategoryIds;
    return this;
  }

  public GroupsGetGroupByIdResponseGroup addRegularCategoryIdsItem(Object regularCategoryIdsItem) {
    this.regularCategoryIds.add(regularCategoryIdsItem);
    return this;
  }

   /**
   * Get regularCategoryIds
   * @return regularCategoryIds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getRegularCategoryIds() {
    return regularCategoryIds;
  }


  public void setRegularCategoryIds(List<Object> regularCategoryIds) {
    
    
    
    this.regularCategoryIds = regularCategoryIds;
  }


  public GroupsGetGroupByIdResponseGroup mutedCategoryIds(List<Object> mutedCategoryIds) {
    
    
    
    
    this.mutedCategoryIds = mutedCategoryIds;
    return this;
  }

  public GroupsGetGroupByIdResponseGroup addMutedCategoryIdsItem(Object mutedCategoryIdsItem) {
    this.mutedCategoryIds.add(mutedCategoryIdsItem);
    return this;
  }

   /**
   * Get mutedCategoryIds
   * @return mutedCategoryIds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Object> getMutedCategoryIds() {
    return mutedCategoryIds;
  }


  public void setMutedCategoryIds(List<Object> mutedCategoryIds) {
    
    
    
    this.mutedCategoryIds = mutedCategoryIds;
  }


  public GroupsGetGroupByIdResponseGroup watchingTags(List<Object> watchingTags) {
    
    
    
    
    this.watchingTags = watchingTags;
    return this;
  }

  public GroupsGetGroupByIdResponseGroup addWatchingTagsItem(Object watchingTagsItem) {
    if (this.watchingTags == null) {
      this.watchingTags = new ArrayList<>();
    }
    this.watchingTags.add(watchingTagsItem);
    return this;
  }

   /**
   * Get watchingTags
   * @return watchingTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getWatchingTags() {
    return watchingTags;
  }


  public void setWatchingTags(List<Object> watchingTags) {
    
    
    
    this.watchingTags = watchingTags;
  }


  public GroupsGetGroupByIdResponseGroup watchingFirstPostTags(List<Object> watchingFirstPostTags) {
    
    
    
    
    this.watchingFirstPostTags = watchingFirstPostTags;
    return this;
  }

  public GroupsGetGroupByIdResponseGroup addWatchingFirstPostTagsItem(Object watchingFirstPostTagsItem) {
    if (this.watchingFirstPostTags == null) {
      this.watchingFirstPostTags = new ArrayList<>();
    }
    this.watchingFirstPostTags.add(watchingFirstPostTagsItem);
    return this;
  }

   /**
   * Get watchingFirstPostTags
   * @return watchingFirstPostTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getWatchingFirstPostTags() {
    return watchingFirstPostTags;
  }


  public void setWatchingFirstPostTags(List<Object> watchingFirstPostTags) {
    
    
    
    this.watchingFirstPostTags = watchingFirstPostTags;
  }


  public GroupsGetGroupByIdResponseGroup trackingTags(List<Object> trackingTags) {
    
    
    
    
    this.trackingTags = trackingTags;
    return this;
  }

  public GroupsGetGroupByIdResponseGroup addTrackingTagsItem(Object trackingTagsItem) {
    if (this.trackingTags == null) {
      this.trackingTags = new ArrayList<>();
    }
    this.trackingTags.add(trackingTagsItem);
    return this;
  }

   /**
   * Get trackingTags
   * @return trackingTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getTrackingTags() {
    return trackingTags;
  }


  public void setTrackingTags(List<Object> trackingTags) {
    
    
    
    this.trackingTags = trackingTags;
  }


  public GroupsGetGroupByIdResponseGroup regularTags(List<Object> regularTags) {
    
    
    
    
    this.regularTags = regularTags;
    return this;
  }

  public GroupsGetGroupByIdResponseGroup addRegularTagsItem(Object regularTagsItem) {
    if (this.regularTags == null) {
      this.regularTags = new ArrayList<>();
    }
    this.regularTags.add(regularTagsItem);
    return this;
  }

   /**
   * Get regularTags
   * @return regularTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getRegularTags() {
    return regularTags;
  }


  public void setRegularTags(List<Object> regularTags) {
    
    
    
    this.regularTags = regularTags;
  }


  public GroupsGetGroupByIdResponseGroup mutedTags(List<Object> mutedTags) {
    
    
    
    
    this.mutedTags = mutedTags;
    return this;
  }

  public GroupsGetGroupByIdResponseGroup addMutedTagsItem(Object mutedTagsItem) {
    if (this.mutedTags == null) {
      this.mutedTags = new ArrayList<>();
    }
    this.mutedTags.add(mutedTagsItem);
    return this;
  }

   /**
   * Get mutedTags
   * @return mutedTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getMutedTags() {
    return mutedTags;
  }


  public void setMutedTags(List<Object> mutedTags) {
    
    
    
    this.mutedTags = mutedTags;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the GroupsGetGroupByIdResponseGroup instance itself
   */
  public GroupsGetGroupByIdResponseGroup putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupsGetGroupByIdResponseGroup groupsGetGroupByIdResponseGroup = (GroupsGetGroupByIdResponseGroup) o;
    return Objects.equals(this.title, groupsGetGroupByIdResponseGroup.title) &&
        Objects.equals(this.id, groupsGetGroupByIdResponseGroup.id) &&
        Objects.equals(this.automatic, groupsGetGroupByIdResponseGroup.automatic) &&
        Objects.equals(this.name, groupsGetGroupByIdResponseGroup.name) &&
        Objects.equals(this.userCount, groupsGetGroupByIdResponseGroup.userCount) &&
        Objects.equals(this.mentionableLevel, groupsGetGroupByIdResponseGroup.mentionableLevel) &&
        Objects.equals(this.messageableLevel, groupsGetGroupByIdResponseGroup.messageableLevel) &&
        Objects.equals(this.visibilityLevel, groupsGetGroupByIdResponseGroup.visibilityLevel) &&
        Objects.equals(this.primaryGroup, groupsGetGroupByIdResponseGroup.primaryGroup) &&
        Objects.equals(this.grantTrustLevel, groupsGetGroupByIdResponseGroup.grantTrustLevel) &&
        Objects.equals(this.incomingEmail, groupsGetGroupByIdResponseGroup.incomingEmail) &&
        Objects.equals(this.hasMessages, groupsGetGroupByIdResponseGroup.hasMessages) &&
        Objects.equals(this.flairUrl, groupsGetGroupByIdResponseGroup.flairUrl) &&
        Objects.equals(this.flairBgColor, groupsGetGroupByIdResponseGroup.flairBgColor) &&
        Objects.equals(this.flairColor, groupsGetGroupByIdResponseGroup.flairColor) &&
        Objects.equals(this.bioRaw, groupsGetGroupByIdResponseGroup.bioRaw) &&
        Objects.equals(this.bioCooked, groupsGetGroupByIdResponseGroup.bioCooked) &&
        Objects.equals(this.bioExcerpt, groupsGetGroupByIdResponseGroup.bioExcerpt) &&
        Objects.equals(this.publicAdmission, groupsGetGroupByIdResponseGroup.publicAdmission) &&
        Objects.equals(this.publicExit, groupsGetGroupByIdResponseGroup.publicExit) &&
        Objects.equals(this.allowMembershipRequests, groupsGetGroupByIdResponseGroup.allowMembershipRequests) &&
        Objects.equals(this.fullName, groupsGetGroupByIdResponseGroup.fullName) &&
        Objects.equals(this.defaultNotificationLevel, groupsGetGroupByIdResponseGroup.defaultNotificationLevel) &&
        Objects.equals(this.membershipRequestTemplate, groupsGetGroupByIdResponseGroup.membershipRequestTemplate) &&
        Objects.equals(this.isGroupUser, groupsGetGroupByIdResponseGroup.isGroupUser) &&
        Objects.equals(this.membersVisibilityLevel, groupsGetGroupByIdResponseGroup.membersVisibilityLevel) &&
        Objects.equals(this.canSeeMembers, groupsGetGroupByIdResponseGroup.canSeeMembers) &&
        Objects.equals(this.canAdminGroup, groupsGetGroupByIdResponseGroup.canAdminGroup) &&
        Objects.equals(this.canEditGroup, groupsGetGroupByIdResponseGroup.canEditGroup) &&
        Objects.equals(this.publishReadState, groupsGetGroupByIdResponseGroup.publishReadState) &&
        Objects.equals(this.isGroupOwnerDisplay, groupsGetGroupByIdResponseGroup.isGroupOwnerDisplay) &&
        Objects.equals(this.mentionable, groupsGetGroupByIdResponseGroup.mentionable) &&
        Objects.equals(this.messageable, groupsGetGroupByIdResponseGroup.messageable) &&
        Objects.equals(this.automaticMembershipEmailDomains, groupsGetGroupByIdResponseGroup.automaticMembershipEmailDomains) &&
        Objects.equals(this.smtpUpdatedAt, groupsGetGroupByIdResponseGroup.smtpUpdatedAt) &&
        Objects.equals(this.smtpUpdatedBy, groupsGetGroupByIdResponseGroup.smtpUpdatedBy) &&
        Objects.equals(this.smtpEnabled, groupsGetGroupByIdResponseGroup.smtpEnabled) &&
        Objects.equals(this.smtpServer, groupsGetGroupByIdResponseGroup.smtpServer) &&
        Objects.equals(this.smtpPort, groupsGetGroupByIdResponseGroup.smtpPort) &&
        Objects.equals(this.smtpSsl, groupsGetGroupByIdResponseGroup.smtpSsl) &&
        Objects.equals(this.imapEnabled, groupsGetGroupByIdResponseGroup.imapEnabled) &&
        Objects.equals(this.imapUpdatedAt, groupsGetGroupByIdResponseGroup.imapUpdatedAt) &&
        Objects.equals(this.imapUpdatedBy, groupsGetGroupByIdResponseGroup.imapUpdatedBy) &&
        Objects.equals(this.imapServer, groupsGetGroupByIdResponseGroup.imapServer) &&
        Objects.equals(this.imapPort, groupsGetGroupByIdResponseGroup.imapPort) &&
        Objects.equals(this.imapSsl, groupsGetGroupByIdResponseGroup.imapSsl) &&
        Objects.equals(this.imapMailboxName, groupsGetGroupByIdResponseGroup.imapMailboxName) &&
        Objects.equals(this.imapMailboxes, groupsGetGroupByIdResponseGroup.imapMailboxes) &&
        Objects.equals(this.emailUsername, groupsGetGroupByIdResponseGroup.emailUsername) &&
        Objects.equals(this.emailFromAlias, groupsGetGroupByIdResponseGroup.emailFromAlias) &&
        Objects.equals(this.emailPassword, groupsGetGroupByIdResponseGroup.emailPassword) &&
        Objects.equals(this.imapLastError, groupsGetGroupByIdResponseGroup.imapLastError) &&
        Objects.equals(this.imapOldEmails, groupsGetGroupByIdResponseGroup.imapOldEmails) &&
        Objects.equals(this.imapNewEmails, groupsGetGroupByIdResponseGroup.imapNewEmails) &&
        Objects.equals(this.messageCount, groupsGetGroupByIdResponseGroup.messageCount) &&
        Objects.equals(this.allowUnknownSenderTopicReplies, groupsGetGroupByIdResponseGroup.allowUnknownSenderTopicReplies) &&
        Objects.equals(this.associatedGroupIds, groupsGetGroupByIdResponseGroup.associatedGroupIds) &&
        Objects.equals(this.watchingCategoryIds, groupsGetGroupByIdResponseGroup.watchingCategoryIds) &&
        Objects.equals(this.trackingCategoryIds, groupsGetGroupByIdResponseGroup.trackingCategoryIds) &&
        Objects.equals(this.watchingFirstPostCategoryIds, groupsGetGroupByIdResponseGroup.watchingFirstPostCategoryIds) &&
        Objects.equals(this.regularCategoryIds, groupsGetGroupByIdResponseGroup.regularCategoryIds) &&
        Objects.equals(this.mutedCategoryIds, groupsGetGroupByIdResponseGroup.mutedCategoryIds) &&
        Objects.equals(this.watchingTags, groupsGetGroupByIdResponseGroup.watchingTags) &&
        Objects.equals(this.watchingFirstPostTags, groupsGetGroupByIdResponseGroup.watchingFirstPostTags) &&
        Objects.equals(this.trackingTags, groupsGetGroupByIdResponseGroup.trackingTags) &&
        Objects.equals(this.regularTags, groupsGetGroupByIdResponseGroup.regularTags) &&
        Objects.equals(this.mutedTags, groupsGetGroupByIdResponseGroup.mutedTags)&&
        Objects.equals(this.additionalProperties, groupsGetGroupByIdResponseGroup.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, id, automatic, name, userCount, mentionableLevel, messageableLevel, visibilityLevel, primaryGroup, grantTrustLevel, incomingEmail, hasMessages, flairUrl, flairBgColor, flairColor, bioRaw, bioCooked, bioExcerpt, publicAdmission, publicExit, allowMembershipRequests, fullName, defaultNotificationLevel, membershipRequestTemplate, isGroupUser, membersVisibilityLevel, canSeeMembers, canAdminGroup, canEditGroup, publishReadState, isGroupOwnerDisplay, mentionable, messageable, automaticMembershipEmailDomains, smtpUpdatedAt, smtpUpdatedBy, smtpEnabled, smtpServer, smtpPort, smtpSsl, imapEnabled, imapUpdatedAt, imapUpdatedBy, imapServer, imapPort, imapSsl, imapMailboxName, imapMailboxes, emailUsername, emailFromAlias, emailPassword, imapLastError, imapOldEmails, imapNewEmails, messageCount, allowUnknownSenderTopicReplies, associatedGroupIds, watchingCategoryIds, trackingCategoryIds, watchingFirstPostCategoryIds, regularCategoryIds, mutedCategoryIds, watchingTags, watchingFirstPostTags, trackingTags, regularTags, mutedTags, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupsGetGroupByIdResponseGroup {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    automatic: ").append(toIndentedString(automatic)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    userCount: ").append(toIndentedString(userCount)).append("\n");
    sb.append("    mentionableLevel: ").append(toIndentedString(mentionableLevel)).append("\n");
    sb.append("    messageableLevel: ").append(toIndentedString(messageableLevel)).append("\n");
    sb.append("    visibilityLevel: ").append(toIndentedString(visibilityLevel)).append("\n");
    sb.append("    primaryGroup: ").append(toIndentedString(primaryGroup)).append("\n");
    sb.append("    grantTrustLevel: ").append(toIndentedString(grantTrustLevel)).append("\n");
    sb.append("    incomingEmail: ").append(toIndentedString(incomingEmail)).append("\n");
    sb.append("    hasMessages: ").append(toIndentedString(hasMessages)).append("\n");
    sb.append("    flairUrl: ").append(toIndentedString(flairUrl)).append("\n");
    sb.append("    flairBgColor: ").append(toIndentedString(flairBgColor)).append("\n");
    sb.append("    flairColor: ").append(toIndentedString(flairColor)).append("\n");
    sb.append("    bioRaw: ").append(toIndentedString(bioRaw)).append("\n");
    sb.append("    bioCooked: ").append(toIndentedString(bioCooked)).append("\n");
    sb.append("    bioExcerpt: ").append(toIndentedString(bioExcerpt)).append("\n");
    sb.append("    publicAdmission: ").append(toIndentedString(publicAdmission)).append("\n");
    sb.append("    publicExit: ").append(toIndentedString(publicExit)).append("\n");
    sb.append("    allowMembershipRequests: ").append(toIndentedString(allowMembershipRequests)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    defaultNotificationLevel: ").append(toIndentedString(defaultNotificationLevel)).append("\n");
    sb.append("    membershipRequestTemplate: ").append(toIndentedString(membershipRequestTemplate)).append("\n");
    sb.append("    isGroupUser: ").append(toIndentedString(isGroupUser)).append("\n");
    sb.append("    membersVisibilityLevel: ").append(toIndentedString(membersVisibilityLevel)).append("\n");
    sb.append("    canSeeMembers: ").append(toIndentedString(canSeeMembers)).append("\n");
    sb.append("    canAdminGroup: ").append(toIndentedString(canAdminGroup)).append("\n");
    sb.append("    canEditGroup: ").append(toIndentedString(canEditGroup)).append("\n");
    sb.append("    publishReadState: ").append(toIndentedString(publishReadState)).append("\n");
    sb.append("    isGroupOwnerDisplay: ").append(toIndentedString(isGroupOwnerDisplay)).append("\n");
    sb.append("    mentionable: ").append(toIndentedString(mentionable)).append("\n");
    sb.append("    messageable: ").append(toIndentedString(messageable)).append("\n");
    sb.append("    automaticMembershipEmailDomains: ").append(toIndentedString(automaticMembershipEmailDomains)).append("\n");
    sb.append("    smtpUpdatedAt: ").append(toIndentedString(smtpUpdatedAt)).append("\n");
    sb.append("    smtpUpdatedBy: ").append(toIndentedString(smtpUpdatedBy)).append("\n");
    sb.append("    smtpEnabled: ").append(toIndentedString(smtpEnabled)).append("\n");
    sb.append("    smtpServer: ").append(toIndentedString(smtpServer)).append("\n");
    sb.append("    smtpPort: ").append(toIndentedString(smtpPort)).append("\n");
    sb.append("    smtpSsl: ").append(toIndentedString(smtpSsl)).append("\n");
    sb.append("    imapEnabled: ").append(toIndentedString(imapEnabled)).append("\n");
    sb.append("    imapUpdatedAt: ").append(toIndentedString(imapUpdatedAt)).append("\n");
    sb.append("    imapUpdatedBy: ").append(toIndentedString(imapUpdatedBy)).append("\n");
    sb.append("    imapServer: ").append(toIndentedString(imapServer)).append("\n");
    sb.append("    imapPort: ").append(toIndentedString(imapPort)).append("\n");
    sb.append("    imapSsl: ").append(toIndentedString(imapSsl)).append("\n");
    sb.append("    imapMailboxName: ").append(toIndentedString(imapMailboxName)).append("\n");
    sb.append("    imapMailboxes: ").append(toIndentedString(imapMailboxes)).append("\n");
    sb.append("    emailUsername: ").append(toIndentedString(emailUsername)).append("\n");
    sb.append("    emailFromAlias: ").append(toIndentedString(emailFromAlias)).append("\n");
    sb.append("    emailPassword: ").append(toIndentedString(emailPassword)).append("\n");
    sb.append("    imapLastError: ").append(toIndentedString(imapLastError)).append("\n");
    sb.append("    imapOldEmails: ").append(toIndentedString(imapOldEmails)).append("\n");
    sb.append("    imapNewEmails: ").append(toIndentedString(imapNewEmails)).append("\n");
    sb.append("    messageCount: ").append(toIndentedString(messageCount)).append("\n");
    sb.append("    allowUnknownSenderTopicReplies: ").append(toIndentedString(allowUnknownSenderTopicReplies)).append("\n");
    sb.append("    associatedGroupIds: ").append(toIndentedString(associatedGroupIds)).append("\n");
    sb.append("    watchingCategoryIds: ").append(toIndentedString(watchingCategoryIds)).append("\n");
    sb.append("    trackingCategoryIds: ").append(toIndentedString(trackingCategoryIds)).append("\n");
    sb.append("    watchingFirstPostCategoryIds: ").append(toIndentedString(watchingFirstPostCategoryIds)).append("\n");
    sb.append("    regularCategoryIds: ").append(toIndentedString(regularCategoryIds)).append("\n");
    sb.append("    mutedCategoryIds: ").append(toIndentedString(mutedCategoryIds)).append("\n");
    sb.append("    watchingTags: ").append(toIndentedString(watchingTags)).append("\n");
    sb.append("    watchingFirstPostTags: ").append(toIndentedString(watchingFirstPostTags)).append("\n");
    sb.append("    trackingTags: ").append(toIndentedString(trackingTags)).append("\n");
    sb.append("    regularTags: ").append(toIndentedString(regularTags)).append("\n");
    sb.append("    mutedTags: ").append(toIndentedString(mutedTags)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("title");
    openapiFields.add("id");
    openapiFields.add("automatic");
    openapiFields.add("name");
    openapiFields.add("user_count");
    openapiFields.add("mentionable_level");
    openapiFields.add("messageable_level");
    openapiFields.add("visibility_level");
    openapiFields.add("primary_group");
    openapiFields.add("grant_trust_level");
    openapiFields.add("incoming_email");
    openapiFields.add("has_messages");
    openapiFields.add("flair_url");
    openapiFields.add("flair_bg_color");
    openapiFields.add("flair_color");
    openapiFields.add("bio_raw");
    openapiFields.add("bio_cooked");
    openapiFields.add("bio_excerpt");
    openapiFields.add("public_admission");
    openapiFields.add("public_exit");
    openapiFields.add("allow_membership_requests");
    openapiFields.add("full_name");
    openapiFields.add("default_notification_level");
    openapiFields.add("membership_request_template");
    openapiFields.add("is_group_user");
    openapiFields.add("members_visibility_level");
    openapiFields.add("can_see_members");
    openapiFields.add("can_admin_group");
    openapiFields.add("can_edit_group");
    openapiFields.add("publish_read_state");
    openapiFields.add("is_group_owner_display");
    openapiFields.add("mentionable");
    openapiFields.add("messageable");
    openapiFields.add("automatic_membership_email_domains");
    openapiFields.add("smtp_updated_at");
    openapiFields.add("smtp_updated_by");
    openapiFields.add("smtp_enabled");
    openapiFields.add("smtp_server");
    openapiFields.add("smtp_port");
    openapiFields.add("smtp_ssl");
    openapiFields.add("imap_enabled");
    openapiFields.add("imap_updated_at");
    openapiFields.add("imap_updated_by");
    openapiFields.add("imap_server");
    openapiFields.add("imap_port");
    openapiFields.add("imap_ssl");
    openapiFields.add("imap_mailbox_name");
    openapiFields.add("imap_mailboxes");
    openapiFields.add("email_username");
    openapiFields.add("email_from_alias");
    openapiFields.add("email_password");
    openapiFields.add("imap_last_error");
    openapiFields.add("imap_old_emails");
    openapiFields.add("imap_new_emails");
    openapiFields.add("message_count");
    openapiFields.add("allow_unknown_sender_topic_replies");
    openapiFields.add("associated_group_ids");
    openapiFields.add("watching_category_ids");
    openapiFields.add("tracking_category_ids");
    openapiFields.add("watching_first_post_category_ids");
    openapiFields.add("regular_category_ids");
    openapiFields.add("muted_category_ids");
    openapiFields.add("watching_tags");
    openapiFields.add("watching_first_post_tags");
    openapiFields.add("tracking_tags");
    openapiFields.add("regular_tags");
    openapiFields.add("muted_tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("title");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("automatic");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("user_count");
    openapiRequiredFields.add("mentionable_level");
    openapiRequiredFields.add("messageable_level");
    openapiRequiredFields.add("visibility_level");
    openapiRequiredFields.add("primary_group");
    openapiRequiredFields.add("grant_trust_level");
    openapiRequiredFields.add("incoming_email");
    openapiRequiredFields.add("has_messages");
    openapiRequiredFields.add("flair_url");
    openapiRequiredFields.add("flair_bg_color");
    openapiRequiredFields.add("flair_color");
    openapiRequiredFields.add("bio_raw");
    openapiRequiredFields.add("bio_cooked");
    openapiRequiredFields.add("bio_excerpt");
    openapiRequiredFields.add("public_admission");
    openapiRequiredFields.add("public_exit");
    openapiRequiredFields.add("allow_membership_requests");
    openapiRequiredFields.add("full_name");
    openapiRequiredFields.add("default_notification_level");
    openapiRequiredFields.add("membership_request_template");
    openapiRequiredFields.add("is_group_user");
    openapiRequiredFields.add("members_visibility_level");
    openapiRequiredFields.add("can_see_members");
    openapiRequiredFields.add("can_admin_group");
    openapiRequiredFields.add("publish_read_state");
    openapiRequiredFields.add("is_group_owner_display");
    openapiRequiredFields.add("mentionable");
    openapiRequiredFields.add("messageable");
    openapiRequiredFields.add("automatic_membership_email_domains");
    openapiRequiredFields.add("smtp_server");
    openapiRequiredFields.add("smtp_port");
    openapiRequiredFields.add("smtp_ssl");
    openapiRequiredFields.add("imap_server");
    openapiRequiredFields.add("imap_port");
    openapiRequiredFields.add("imap_ssl");
    openapiRequiredFields.add("imap_mailbox_name");
    openapiRequiredFields.add("imap_mailboxes");
    openapiRequiredFields.add("email_username");
    openapiRequiredFields.add("email_password");
    openapiRequiredFields.add("imap_last_error");
    openapiRequiredFields.add("imap_old_emails");
    openapiRequiredFields.add("imap_new_emails");
    openapiRequiredFields.add("message_count");
    openapiRequiredFields.add("allow_unknown_sender_topic_replies");
    openapiRequiredFields.add("watching_category_ids");
    openapiRequiredFields.add("tracking_category_ids");
    openapiRequiredFields.add("watching_first_post_category_ids");
    openapiRequiredFields.add("regular_category_ids");
    openapiRequiredFields.add("muted_category_ids");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GroupsGetGroupByIdResponseGroup
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!GroupsGetGroupByIdResponseGroup.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GroupsGetGroupByIdResponseGroup is not found in the empty JSON string", GroupsGetGroupByIdResponseGroup.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GroupsGetGroupByIdResponseGroup.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("imap_mailbox_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imap_mailbox_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imap_mailbox_name").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("imap_mailboxes") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("imap_mailboxes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `imap_mailboxes` to be an array in the JSON string but got `%s`", jsonObj.get("imap_mailboxes").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("associated_group_ids") != null && !jsonObj.get("associated_group_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `associated_group_ids` to be an array in the JSON string but got `%s`", jsonObj.get("associated_group_ids").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("watching_category_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("watching_category_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `watching_category_ids` to be an array in the JSON string but got `%s`", jsonObj.get("watching_category_ids").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("tracking_category_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("tracking_category_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tracking_category_ids` to be an array in the JSON string but got `%s`", jsonObj.get("tracking_category_ids").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("watching_first_post_category_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("watching_first_post_category_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `watching_first_post_category_ids` to be an array in the JSON string but got `%s`", jsonObj.get("watching_first_post_category_ids").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("regular_category_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("regular_category_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `regular_category_ids` to be an array in the JSON string but got `%s`", jsonObj.get("regular_category_ids").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("muted_category_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("muted_category_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `muted_category_ids` to be an array in the JSON string but got `%s`", jsonObj.get("muted_category_ids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("watching_tags") != null && !jsonObj.get("watching_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `watching_tags` to be an array in the JSON string but got `%s`", jsonObj.get("watching_tags").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("watching_first_post_tags") != null && !jsonObj.get("watching_first_post_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `watching_first_post_tags` to be an array in the JSON string but got `%s`", jsonObj.get("watching_first_post_tags").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tracking_tags") != null && !jsonObj.get("tracking_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tracking_tags` to be an array in the JSON string but got `%s`", jsonObj.get("tracking_tags").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("regular_tags") != null && !jsonObj.get("regular_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `regular_tags` to be an array in the JSON string but got `%s`", jsonObj.get("regular_tags").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("muted_tags") != null && !jsonObj.get("muted_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `muted_tags` to be an array in the JSON string but got `%s`", jsonObj.get("muted_tags").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GroupsGetGroupByIdResponseGroup.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GroupsGetGroupByIdResponseGroup' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GroupsGetGroupByIdResponseGroup> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GroupsGetGroupByIdResponseGroup.class));

       return (TypeAdapter<T>) new TypeAdapter<GroupsGetGroupByIdResponseGroup>() {
           @Override
           public void write(JsonWriter out, GroupsGetGroupByIdResponseGroup value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public GroupsGetGroupByIdResponseGroup read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             GroupsGetGroupByIdResponseGroup instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GroupsGetGroupByIdResponseGroup given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GroupsGetGroupByIdResponseGroup
  * @throws IOException if the JSON string is invalid with respect to GroupsGetGroupByIdResponseGroup
  */
  public static GroupsGetGroupByIdResponseGroup fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GroupsGetGroupByIdResponseGroup.class);
  }

 /**
  * Convert an instance of GroupsGetGroupByIdResponseGroup to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

