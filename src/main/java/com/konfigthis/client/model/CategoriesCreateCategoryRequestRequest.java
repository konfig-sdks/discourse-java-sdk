/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CategoriesCreateCategoryRequestRequestPermissions;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CategoriesCreateCategoryRequestRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CategoriesCreateCategoryRequestRequest {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_COLOR = "color";
  @SerializedName(SERIALIZED_NAME_COLOR)
  private String color;

  public static final String SERIALIZED_NAME_TEXT_COLOR = "text_color";
  @SerializedName(SERIALIZED_NAME_TEXT_COLOR)
  private String textColor;

  public static final String SERIALIZED_NAME_PARENT_CATEGORY_ID = "parent_category_id";
  @SerializedName(SERIALIZED_NAME_PARENT_CATEGORY_ID)
  private Integer parentCategoryId;

  public static final String SERIALIZED_NAME_ALLOW_BADGES = "allow_badges";
  @SerializedName(SERIALIZED_NAME_ALLOW_BADGES)
  private Boolean allowBadges;

  public static final String SERIALIZED_NAME_SLUG = "slug";
  @SerializedName(SERIALIZED_NAME_SLUG)
  private String slug;

  public static final String SERIALIZED_NAME_TOPIC_FEATURED_LINKS_ALLOWED = "topic_featured_links_allowed";
  @SerializedName(SERIALIZED_NAME_TOPIC_FEATURED_LINKS_ALLOWED)
  private Boolean topicFeaturedLinksAllowed;

  public static final String SERIALIZED_NAME_PERMISSIONS = "permissions";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS)
  private CategoriesCreateCategoryRequestRequestPermissions permissions;

  public static final String SERIALIZED_NAME_SEARCH_PRIORITY = "search_priority";
  @SerializedName(SERIALIZED_NAME_SEARCH_PRIORITY)
  private Integer searchPriority;

  public static final String SERIALIZED_NAME_FORM_TEMPLATE_IDS = "form_template_ids";
  @SerializedName(SERIALIZED_NAME_FORM_TEMPLATE_IDS)
  private List<Object> formTemplateIds = null;

  public CategoriesCreateCategoryRequestRequest() {
  }

  public CategoriesCreateCategoryRequestRequest name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public CategoriesCreateCategoryRequestRequest color(String color) {
    
    
    
    
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "49d9e9", value = "")

  public String getColor() {
    return color;
  }


  public void setColor(String color) {
    
    
    
    this.color = color;
  }


  public CategoriesCreateCategoryRequestRequest textColor(String textColor) {
    
    
    
    
    this.textColor = textColor;
    return this;
  }

   /**
   * Get textColor
   * @return textColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "f0fcfd", value = "")

  public String getTextColor() {
    return textColor;
  }


  public void setTextColor(String textColor) {
    
    
    
    this.textColor = textColor;
  }


  public CategoriesCreateCategoryRequestRequest parentCategoryId(Integer parentCategoryId) {
    
    
    
    
    this.parentCategoryId = parentCategoryId;
    return this;
  }

   /**
   * Get parentCategoryId
   * @return parentCategoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getParentCategoryId() {
    return parentCategoryId;
  }


  public void setParentCategoryId(Integer parentCategoryId) {
    
    
    
    this.parentCategoryId = parentCategoryId;
  }


  public CategoriesCreateCategoryRequestRequest allowBadges(Boolean allowBadges) {
    
    
    
    
    this.allowBadges = allowBadges;
    return this;
  }

   /**
   * Get allowBadges
   * @return allowBadges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowBadges() {
    return allowBadges;
  }


  public void setAllowBadges(Boolean allowBadges) {
    
    
    
    this.allowBadges = allowBadges;
  }


  public CategoriesCreateCategoryRequestRequest slug(String slug) {
    
    
    
    
    this.slug = slug;
    return this;
  }

   /**
   * Get slug
   * @return slug
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSlug() {
    return slug;
  }


  public void setSlug(String slug) {
    
    
    
    this.slug = slug;
  }


  public CategoriesCreateCategoryRequestRequest topicFeaturedLinksAllowed(Boolean topicFeaturedLinksAllowed) {
    
    
    
    
    this.topicFeaturedLinksAllowed = topicFeaturedLinksAllowed;
    return this;
  }

   /**
   * Get topicFeaturedLinksAllowed
   * @return topicFeaturedLinksAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTopicFeaturedLinksAllowed() {
    return topicFeaturedLinksAllowed;
  }


  public void setTopicFeaturedLinksAllowed(Boolean topicFeaturedLinksAllowed) {
    
    
    
    this.topicFeaturedLinksAllowed = topicFeaturedLinksAllowed;
  }


  public CategoriesCreateCategoryRequestRequest permissions(CategoriesCreateCategoryRequestRequestPermissions permissions) {
    
    
    
    
    this.permissions = permissions;
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CategoriesCreateCategoryRequestRequestPermissions getPermissions() {
    return permissions;
  }


  public void setPermissions(CategoriesCreateCategoryRequestRequestPermissions permissions) {
    
    
    
    this.permissions = permissions;
  }


  public CategoriesCreateCategoryRequestRequest searchPriority(Integer searchPriority) {
    
    
    
    
    this.searchPriority = searchPriority;
    return this;
  }

   /**
   * Get searchPriority
   * @return searchPriority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSearchPriority() {
    return searchPriority;
  }


  public void setSearchPriority(Integer searchPriority) {
    
    
    
    this.searchPriority = searchPriority;
  }


  public CategoriesCreateCategoryRequestRequest formTemplateIds(List<Object> formTemplateIds) {
    
    
    
    
    this.formTemplateIds = formTemplateIds;
    return this;
  }

  public CategoriesCreateCategoryRequestRequest addFormTemplateIdsItem(Object formTemplateIdsItem) {
    if (this.formTemplateIds == null) {
      this.formTemplateIds = new ArrayList<>();
    }
    this.formTemplateIds.add(formTemplateIdsItem);
    return this;
  }

   /**
   * Get formTemplateIds
   * @return formTemplateIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getFormTemplateIds() {
    return formTemplateIds;
  }


  public void setFormTemplateIds(List<Object> formTemplateIds) {
    
    
    
    this.formTemplateIds = formTemplateIds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CategoriesCreateCategoryRequestRequest categoriesCreateCategoryRequestRequest = (CategoriesCreateCategoryRequestRequest) o;
    return Objects.equals(this.name, categoriesCreateCategoryRequestRequest.name) &&
        Objects.equals(this.color, categoriesCreateCategoryRequestRequest.color) &&
        Objects.equals(this.textColor, categoriesCreateCategoryRequestRequest.textColor) &&
        Objects.equals(this.parentCategoryId, categoriesCreateCategoryRequestRequest.parentCategoryId) &&
        Objects.equals(this.allowBadges, categoriesCreateCategoryRequestRequest.allowBadges) &&
        Objects.equals(this.slug, categoriesCreateCategoryRequestRequest.slug) &&
        Objects.equals(this.topicFeaturedLinksAllowed, categoriesCreateCategoryRequestRequest.topicFeaturedLinksAllowed) &&
        Objects.equals(this.permissions, categoriesCreateCategoryRequestRequest.permissions) &&
        Objects.equals(this.searchPriority, categoriesCreateCategoryRequestRequest.searchPriority) &&
        Objects.equals(this.formTemplateIds, categoriesCreateCategoryRequestRequest.formTemplateIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, color, textColor, parentCategoryId, allowBadges, slug, topicFeaturedLinksAllowed, permissions, searchPriority, formTemplateIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CategoriesCreateCategoryRequestRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    textColor: ").append(toIndentedString(textColor)).append("\n");
    sb.append("    parentCategoryId: ").append(toIndentedString(parentCategoryId)).append("\n");
    sb.append("    allowBadges: ").append(toIndentedString(allowBadges)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    topicFeaturedLinksAllowed: ").append(toIndentedString(topicFeaturedLinksAllowed)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    searchPriority: ").append(toIndentedString(searchPriority)).append("\n");
    sb.append("    formTemplateIds: ").append(toIndentedString(formTemplateIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("color");
    openapiFields.add("text_color");
    openapiFields.add("parent_category_id");
    openapiFields.add("allow_badges");
    openapiFields.add("slug");
    openapiFields.add("topic_featured_links_allowed");
    openapiFields.add("permissions");
    openapiFields.add("search_priority");
    openapiFields.add("form_template_ids");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CategoriesCreateCategoryRequestRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CategoriesCreateCategoryRequestRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CategoriesCreateCategoryRequestRequest is not found in the empty JSON string", CategoriesCreateCategoryRequestRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CategoriesCreateCategoryRequestRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CategoriesCreateCategoryRequestRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CategoriesCreateCategoryRequestRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("color") != null && !jsonObj.get("color").isJsonNull()) && !jsonObj.get("color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("color").toString()));
      }
      if ((jsonObj.get("text_color") != null && !jsonObj.get("text_color").isJsonNull()) && !jsonObj.get("text_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text_color").toString()));
      }
      if ((jsonObj.get("slug") != null && !jsonObj.get("slug").isJsonNull()) && !jsonObj.get("slug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slug").toString()));
      }
      // validate the optional field `permissions`
      if (jsonObj.get("permissions") != null && !jsonObj.get("permissions").isJsonNull()) {
        CategoriesCreateCategoryRequestRequestPermissions.validateJsonObject(jsonObj.getAsJsonObject("permissions"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("form_template_ids") != null && !jsonObj.get("form_template_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `form_template_ids` to be an array in the JSON string but got `%s`", jsonObj.get("form_template_ids").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CategoriesCreateCategoryRequestRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CategoriesCreateCategoryRequestRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CategoriesCreateCategoryRequestRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CategoriesCreateCategoryRequestRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CategoriesCreateCategoryRequestRequest>() {
           @Override
           public void write(JsonWriter out, CategoriesCreateCategoryRequestRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CategoriesCreateCategoryRequestRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CategoriesCreateCategoryRequestRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CategoriesCreateCategoryRequestRequest
  * @throws IOException if the JSON string is invalid with respect to CategoriesCreateCategoryRequestRequest
  */
  public static CategoriesCreateCategoryRequestRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CategoriesCreateCategoryRequestRequest.class);
  }

 /**
  * Convert an instance of CategoriesCreateCategoryRequestRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

