/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.PostsListLatestPostsAcrossTopicsResponseLatestPostsInnerActionsSummaryInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PostsListLatestPostsAcrossTopicsResponseLatestPostsInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PostsListLatestPostsAcrossTopicsResponseLatestPostsInner {
  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_AVATAR_TEMPLATE = "avatar_template";
  @SerializedName(SERIALIZED_NAME_AVATAR_TEMPLATE)
  private String avatarTemplate;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_COOKED = "cooked";
  @SerializedName(SERIALIZED_NAME_COOKED)
  private String cooked;

  public static final String SERIALIZED_NAME_POST_NUMBER = "post_number";
  @SerializedName(SERIALIZED_NAME_POST_NUMBER)
  private Integer postNumber;

  public static final String SERIALIZED_NAME_POST_TYPE = "post_type";
  @SerializedName(SERIALIZED_NAME_POST_TYPE)
  private Integer postType;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public static final String SERIALIZED_NAME_REPLY_COUNT = "reply_count";
  @SerializedName(SERIALIZED_NAME_REPLY_COUNT)
  private Integer replyCount;

  public static final String SERIALIZED_NAME_REPLY_TO_POST_NUMBER = "reply_to_post_number";
  @SerializedName(SERIALIZED_NAME_REPLY_TO_POST_NUMBER)
  private Object replyToPostNumber = null;

  public static final String SERIALIZED_NAME_QUOTE_COUNT = "quote_count";
  @SerializedName(SERIALIZED_NAME_QUOTE_COUNT)
  private Integer quoteCount;

  public static final String SERIALIZED_NAME_INCOMING_LINK_COUNT = "incoming_link_count";
  @SerializedName(SERIALIZED_NAME_INCOMING_LINK_COUNT)
  private Integer incomingLinkCount;

  public static final String SERIALIZED_NAME_READS = "reads";
  @SerializedName(SERIALIZED_NAME_READS)
  private Integer reads;

  public static final String SERIALIZED_NAME_READERS_COUNT = "readers_count";
  @SerializedName(SERIALIZED_NAME_READERS_COUNT)
  private Integer readersCount;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Double score;

  public static final String SERIALIZED_NAME_YOURS = "yours";
  @SerializedName(SERIALIZED_NAME_YOURS)
  private Boolean yours;

  public static final String SERIALIZED_NAME_TOPIC_ID = "topic_id";
  @SerializedName(SERIALIZED_NAME_TOPIC_ID)
  private Integer topicId;

  public static final String SERIALIZED_NAME_TOPIC_SLUG = "topic_slug";
  @SerializedName(SERIALIZED_NAME_TOPIC_SLUG)
  private String topicSlug;

  public static final String SERIALIZED_NAME_TOPIC_TITLE = "topic_title";
  @SerializedName(SERIALIZED_NAME_TOPIC_TITLE)
  private String topicTitle;

  public static final String SERIALIZED_NAME_TOPIC_HTML_TITLE = "topic_html_title";
  @SerializedName(SERIALIZED_NAME_TOPIC_HTML_TITLE)
  private String topicHtmlTitle;

  public static final String SERIALIZED_NAME_CATEGORY_ID = "category_id";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private Integer categoryId;

  public static final String SERIALIZED_NAME_DISPLAY_USERNAME = "display_username";
  @SerializedName(SERIALIZED_NAME_DISPLAY_USERNAME)
  private String displayUsername;

  public static final String SERIALIZED_NAME_PRIMARY_GROUP_NAME = "primary_group_name";
  @SerializedName(SERIALIZED_NAME_PRIMARY_GROUP_NAME)
  private Object primaryGroupName = null;

  public static final String SERIALIZED_NAME_FLAIR_NAME = "flair_name";
  @SerializedName(SERIALIZED_NAME_FLAIR_NAME)
  private Object flairName = null;

  public static final String SERIALIZED_NAME_FLAIR_URL = "flair_url";
  @SerializedName(SERIALIZED_NAME_FLAIR_URL)
  private Object flairUrl = null;

  public static final String SERIALIZED_NAME_FLAIR_BG_COLOR = "flair_bg_color";
  @SerializedName(SERIALIZED_NAME_FLAIR_BG_COLOR)
  private Object flairBgColor = null;

  public static final String SERIALIZED_NAME_FLAIR_COLOR = "flair_color";
  @SerializedName(SERIALIZED_NAME_FLAIR_COLOR)
  private Object flairColor = null;

  public static final String SERIALIZED_NAME_FLAIR_GROUP_ID = "flair_group_id";
  @SerializedName(SERIALIZED_NAME_FLAIR_GROUP_ID)
  private Object flairGroupId = null;

  public static final String SERIALIZED_NAME_CAN_EDIT = "can_edit";
  @SerializedName(SERIALIZED_NAME_CAN_EDIT)
  private Boolean canEdit;

  public static final String SERIALIZED_NAME_CAN_DELETE = "can_delete";
  @SerializedName(SERIALIZED_NAME_CAN_DELETE)
  private Boolean canDelete;

  public static final String SERIALIZED_NAME_CAN_RECOVER = "can_recover";
  @SerializedName(SERIALIZED_NAME_CAN_RECOVER)
  private Boolean canRecover;

  public static final String SERIALIZED_NAME_CAN_SEE_HIDDEN_POST = "can_see_hidden_post";
  @SerializedName(SERIALIZED_NAME_CAN_SEE_HIDDEN_POST)
  private Boolean canSeeHiddenPost;

  public static final String SERIALIZED_NAME_CAN_WIKI = "can_wiki";
  @SerializedName(SERIALIZED_NAME_CAN_WIKI)
  private Boolean canWiki;

  public static final String SERIALIZED_NAME_USER_TITLE = "user_title";
  @SerializedName(SERIALIZED_NAME_USER_TITLE)
  private Object userTitle = null;

  public static final String SERIALIZED_NAME_RAW = "raw";
  @SerializedName(SERIALIZED_NAME_RAW)
  private String raw;

  public static final String SERIALIZED_NAME_ACTIONS_SUMMARY = "actions_summary";
  @SerializedName(SERIALIZED_NAME_ACTIONS_SUMMARY)
  private List<PostsListLatestPostsAcrossTopicsResponseLatestPostsInnerActionsSummaryInner> actionsSummary = null;

  public static final String SERIALIZED_NAME_MODERATOR = "moderator";
  @SerializedName(SERIALIZED_NAME_MODERATOR)
  private Boolean moderator;

  public static final String SERIALIZED_NAME_ADMIN = "admin";
  @SerializedName(SERIALIZED_NAME_ADMIN)
  private Boolean admin;

  public static final String SERIALIZED_NAME_STAFF = "staff";
  @SerializedName(SERIALIZED_NAME_STAFF)
  private Boolean staff;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_HIDDEN = "hidden";
  @SerializedName(SERIALIZED_NAME_HIDDEN)
  private Boolean hidden;

  public static final String SERIALIZED_NAME_TRUST_LEVEL = "trust_level";
  @SerializedName(SERIALIZED_NAME_TRUST_LEVEL)
  private Integer trustLevel;

  public static final String SERIALIZED_NAME_DELETED_AT = "deleted_at";
  @SerializedName(SERIALIZED_NAME_DELETED_AT)
  private Object deletedAt = null;

  public static final String SERIALIZED_NAME_USER_DELETED = "user_deleted";
  @SerializedName(SERIALIZED_NAME_USER_DELETED)
  private Boolean userDeleted;

  public static final String SERIALIZED_NAME_EDIT_REASON = "edit_reason";
  @SerializedName(SERIALIZED_NAME_EDIT_REASON)
  private Object editReason = null;

  public static final String SERIALIZED_NAME_CAN_VIEW_EDIT_HISTORY = "can_view_edit_history";
  @SerializedName(SERIALIZED_NAME_CAN_VIEW_EDIT_HISTORY)
  private Boolean canViewEditHistory;

  public static final String SERIALIZED_NAME_WIKI = "wiki";
  @SerializedName(SERIALIZED_NAME_WIKI)
  private Boolean wiki;

  public static final String SERIALIZED_NAME_REVIEWABLE_ID = "reviewable_id";
  @SerializedName(SERIALIZED_NAME_REVIEWABLE_ID)
  private Object reviewableId = null;

  public static final String SERIALIZED_NAME_REVIEWABLE_SCORE_COUNT = "reviewable_score_count";
  @SerializedName(SERIALIZED_NAME_REVIEWABLE_SCORE_COUNT)
  private Integer reviewableScoreCount;

  public static final String SERIALIZED_NAME_REVIEWABLE_SCORE_PENDING_COUNT = "reviewable_score_pending_count";
  @SerializedName(SERIALIZED_NAME_REVIEWABLE_SCORE_PENDING_COUNT)
  private Integer reviewableScorePendingCount;

  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner() {
  }

  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner version(Integer version) {
    
    
    
    
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getVersion() {
    return version;
  }


  public void setVersion(Integer version) {
    
    
    
    this.version = version;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner id(Integer id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    
    
    
    this.id = id;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner username(String username) {
    
    
    
    
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    
    
    
    this.username = username;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner avatarTemplate(String avatarTemplate) {
    
    
    
    
    this.avatarTemplate = avatarTemplate;
    return this;
  }

   /**
   * Get avatarTemplate
   * @return avatarTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAvatarTemplate() {
    return avatarTemplate;
  }


  public void setAvatarTemplate(String avatarTemplate) {
    
    
    
    this.avatarTemplate = avatarTemplate;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner createdAt(String createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner cooked(String cooked) {
    
    
    
    
    this.cooked = cooked;
    return this;
  }

   /**
   * Get cooked
   * @return cooked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCooked() {
    return cooked;
  }


  public void setCooked(String cooked) {
    
    
    
    this.cooked = cooked;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner postNumber(Integer postNumber) {
    
    
    
    
    this.postNumber = postNumber;
    return this;
  }

   /**
   * Get postNumber
   * @return postNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPostNumber() {
    return postNumber;
  }


  public void setPostNumber(Integer postNumber) {
    
    
    
    this.postNumber = postNumber;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner postType(Integer postType) {
    
    
    
    
    this.postType = postType;
    return this;
  }

   /**
   * Get postType
   * @return postType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPostType() {
    return postType;
  }


  public void setPostType(Integer postType) {
    
    
    
    this.postType = postType;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner updatedAt(String updatedAt) {
    
    
    
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    
    
    
    this.updatedAt = updatedAt;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner replyCount(Integer replyCount) {
    
    
    
    
    this.replyCount = replyCount;
    return this;
  }

   /**
   * Get replyCount
   * @return replyCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getReplyCount() {
    return replyCount;
  }


  public void setReplyCount(Integer replyCount) {
    
    
    
    this.replyCount = replyCount;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner replyToPostNumber(Object replyToPostNumber) {
    
    
    
    
    this.replyToPostNumber = replyToPostNumber;
    return this;
  }

   /**
   * Get replyToPostNumber
   * @return replyToPostNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getReplyToPostNumber() {
    return replyToPostNumber;
  }


  public void setReplyToPostNumber(Object replyToPostNumber) {
    
    
    
    this.replyToPostNumber = replyToPostNumber;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner quoteCount(Integer quoteCount) {
    
    
    
    
    this.quoteCount = quoteCount;
    return this;
  }

   /**
   * Get quoteCount
   * @return quoteCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getQuoteCount() {
    return quoteCount;
  }


  public void setQuoteCount(Integer quoteCount) {
    
    
    
    this.quoteCount = quoteCount;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner incomingLinkCount(Integer incomingLinkCount) {
    
    
    
    
    this.incomingLinkCount = incomingLinkCount;
    return this;
  }

   /**
   * Get incomingLinkCount
   * @return incomingLinkCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getIncomingLinkCount() {
    return incomingLinkCount;
  }


  public void setIncomingLinkCount(Integer incomingLinkCount) {
    
    
    
    this.incomingLinkCount = incomingLinkCount;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner reads(Integer reads) {
    
    
    
    
    this.reads = reads;
    return this;
  }

   /**
   * Get reads
   * @return reads
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getReads() {
    return reads;
  }


  public void setReads(Integer reads) {
    
    
    
    this.reads = reads;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner readersCount(Integer readersCount) {
    
    
    
    
    this.readersCount = readersCount;
    return this;
  }

   /**
   * Get readersCount
   * @return readersCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getReadersCount() {
    return readersCount;
  }


  public void setReadersCount(Integer readersCount) {
    
    
    
    this.readersCount = readersCount;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner score(Double score) {
    
    
    
    
    this.score = score;
    return this;
  }

  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner score(Integer score) {
    
    
    
    
    this.score = score.doubleValue();
    return this;
  }

   /**
   * Get score
   * @return score
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getScore() {
    return score;
  }


  public void setScore(Double score) {
    
    
    
    this.score = score;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner yours(Boolean yours) {
    
    
    
    
    this.yours = yours;
    return this;
  }

   /**
   * Get yours
   * @return yours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getYours() {
    return yours;
  }


  public void setYours(Boolean yours) {
    
    
    
    this.yours = yours;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner topicId(Integer topicId) {
    
    
    
    
    this.topicId = topicId;
    return this;
  }

   /**
   * Get topicId
   * @return topicId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTopicId() {
    return topicId;
  }


  public void setTopicId(Integer topicId) {
    
    
    
    this.topicId = topicId;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner topicSlug(String topicSlug) {
    
    
    
    
    this.topicSlug = topicSlug;
    return this;
  }

   /**
   * Get topicSlug
   * @return topicSlug
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTopicSlug() {
    return topicSlug;
  }


  public void setTopicSlug(String topicSlug) {
    
    
    
    this.topicSlug = topicSlug;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner topicTitle(String topicTitle) {
    
    
    
    
    this.topicTitle = topicTitle;
    return this;
  }

   /**
   * Get topicTitle
   * @return topicTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTopicTitle() {
    return topicTitle;
  }


  public void setTopicTitle(String topicTitle) {
    
    
    
    this.topicTitle = topicTitle;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner topicHtmlTitle(String topicHtmlTitle) {
    
    
    
    
    this.topicHtmlTitle = topicHtmlTitle;
    return this;
  }

   /**
   * Get topicHtmlTitle
   * @return topicHtmlTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTopicHtmlTitle() {
    return topicHtmlTitle;
  }


  public void setTopicHtmlTitle(String topicHtmlTitle) {
    
    
    
    this.topicHtmlTitle = topicHtmlTitle;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner categoryId(Integer categoryId) {
    
    
    
    
    this.categoryId = categoryId;
    return this;
  }

   /**
   * Get categoryId
   * @return categoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCategoryId() {
    return categoryId;
  }


  public void setCategoryId(Integer categoryId) {
    
    
    
    this.categoryId = categoryId;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner displayUsername(String displayUsername) {
    
    
    
    
    this.displayUsername = displayUsername;
    return this;
  }

   /**
   * Get displayUsername
   * @return displayUsername
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDisplayUsername() {
    return displayUsername;
  }


  public void setDisplayUsername(String displayUsername) {
    
    
    
    this.displayUsername = displayUsername;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner primaryGroupName(Object primaryGroupName) {
    
    
    
    
    this.primaryGroupName = primaryGroupName;
    return this;
  }

   /**
   * Get primaryGroupName
   * @return primaryGroupName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPrimaryGroupName() {
    return primaryGroupName;
  }


  public void setPrimaryGroupName(Object primaryGroupName) {
    
    
    
    this.primaryGroupName = primaryGroupName;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner flairName(Object flairName) {
    
    
    
    
    this.flairName = flairName;
    return this;
  }

   /**
   * Get flairName
   * @return flairName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getFlairName() {
    return flairName;
  }


  public void setFlairName(Object flairName) {
    
    
    
    this.flairName = flairName;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner flairUrl(Object flairUrl) {
    
    
    
    
    this.flairUrl = flairUrl;
    return this;
  }

   /**
   * Get flairUrl
   * @return flairUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getFlairUrl() {
    return flairUrl;
  }


  public void setFlairUrl(Object flairUrl) {
    
    
    
    this.flairUrl = flairUrl;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner flairBgColor(Object flairBgColor) {
    
    
    
    
    this.flairBgColor = flairBgColor;
    return this;
  }

   /**
   * Get flairBgColor
   * @return flairBgColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getFlairBgColor() {
    return flairBgColor;
  }


  public void setFlairBgColor(Object flairBgColor) {
    
    
    
    this.flairBgColor = flairBgColor;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner flairColor(Object flairColor) {
    
    
    
    
    this.flairColor = flairColor;
    return this;
  }

   /**
   * Get flairColor
   * @return flairColor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getFlairColor() {
    return flairColor;
  }


  public void setFlairColor(Object flairColor) {
    
    
    
    this.flairColor = flairColor;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner flairGroupId(Object flairGroupId) {
    
    
    
    
    this.flairGroupId = flairGroupId;
    return this;
  }

   /**
   * Get flairGroupId
   * @return flairGroupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getFlairGroupId() {
    return flairGroupId;
  }


  public void setFlairGroupId(Object flairGroupId) {
    
    
    
    this.flairGroupId = flairGroupId;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner canEdit(Boolean canEdit) {
    
    
    
    
    this.canEdit = canEdit;
    return this;
  }

   /**
   * Get canEdit
   * @return canEdit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCanEdit() {
    return canEdit;
  }


  public void setCanEdit(Boolean canEdit) {
    
    
    
    this.canEdit = canEdit;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner canDelete(Boolean canDelete) {
    
    
    
    
    this.canDelete = canDelete;
    return this;
  }

   /**
   * Get canDelete
   * @return canDelete
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCanDelete() {
    return canDelete;
  }


  public void setCanDelete(Boolean canDelete) {
    
    
    
    this.canDelete = canDelete;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner canRecover(Boolean canRecover) {
    
    
    
    
    this.canRecover = canRecover;
    return this;
  }

   /**
   * Get canRecover
   * @return canRecover
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCanRecover() {
    return canRecover;
  }


  public void setCanRecover(Boolean canRecover) {
    
    
    
    this.canRecover = canRecover;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner canSeeHiddenPost(Boolean canSeeHiddenPost) {
    
    
    
    
    this.canSeeHiddenPost = canSeeHiddenPost;
    return this;
  }

   /**
   * Get canSeeHiddenPost
   * @return canSeeHiddenPost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCanSeeHiddenPost() {
    return canSeeHiddenPost;
  }


  public void setCanSeeHiddenPost(Boolean canSeeHiddenPost) {
    
    
    
    this.canSeeHiddenPost = canSeeHiddenPost;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner canWiki(Boolean canWiki) {
    
    
    
    
    this.canWiki = canWiki;
    return this;
  }

   /**
   * Get canWiki
   * @return canWiki
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCanWiki() {
    return canWiki;
  }


  public void setCanWiki(Boolean canWiki) {
    
    
    
    this.canWiki = canWiki;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner userTitle(Object userTitle) {
    
    
    
    
    this.userTitle = userTitle;
    return this;
  }

   /**
   * Get userTitle
   * @return userTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getUserTitle() {
    return userTitle;
  }


  public void setUserTitle(Object userTitle) {
    
    
    
    this.userTitle = userTitle;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner raw(String raw) {
    
    
    
    
    this.raw = raw;
    return this;
  }

   /**
   * Get raw
   * @return raw
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRaw() {
    return raw;
  }


  public void setRaw(String raw) {
    
    
    
    this.raw = raw;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner actionsSummary(List<PostsListLatestPostsAcrossTopicsResponseLatestPostsInnerActionsSummaryInner> actionsSummary) {
    
    
    
    
    this.actionsSummary = actionsSummary;
    return this;
  }

  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner addActionsSummaryItem(PostsListLatestPostsAcrossTopicsResponseLatestPostsInnerActionsSummaryInner actionsSummaryItem) {
    if (this.actionsSummary == null) {
      this.actionsSummary = new ArrayList<>();
    }
    this.actionsSummary.add(actionsSummaryItem);
    return this;
  }

   /**
   * Get actionsSummary
   * @return actionsSummary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PostsListLatestPostsAcrossTopicsResponseLatestPostsInnerActionsSummaryInner> getActionsSummary() {
    return actionsSummary;
  }


  public void setActionsSummary(List<PostsListLatestPostsAcrossTopicsResponseLatestPostsInnerActionsSummaryInner> actionsSummary) {
    
    
    
    this.actionsSummary = actionsSummary;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner moderator(Boolean moderator) {
    
    
    
    
    this.moderator = moderator;
    return this;
  }

   /**
   * Get moderator
   * @return moderator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getModerator() {
    return moderator;
  }


  public void setModerator(Boolean moderator) {
    
    
    
    this.moderator = moderator;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner admin(Boolean admin) {
    
    
    
    
    this.admin = admin;
    return this;
  }

   /**
   * Get admin
   * @return admin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAdmin() {
    return admin;
  }


  public void setAdmin(Boolean admin) {
    
    
    
    this.admin = admin;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner staff(Boolean staff) {
    
    
    
    
    this.staff = staff;
    return this;
  }

   /**
   * Get staff
   * @return staff
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getStaff() {
    return staff;
  }


  public void setStaff(Boolean staff) {
    
    
    
    this.staff = staff;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner userId(Integer userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    
    
    
    this.userId = userId;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner hidden(Boolean hidden) {
    
    
    
    
    this.hidden = hidden;
    return this;
  }

   /**
   * Get hidden
   * @return hidden
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHidden() {
    return hidden;
  }


  public void setHidden(Boolean hidden) {
    
    
    
    this.hidden = hidden;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner trustLevel(Integer trustLevel) {
    
    
    
    
    this.trustLevel = trustLevel;
    return this;
  }

   /**
   * Get trustLevel
   * @return trustLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTrustLevel() {
    return trustLevel;
  }


  public void setTrustLevel(Integer trustLevel) {
    
    
    
    this.trustLevel = trustLevel;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner deletedAt(Object deletedAt) {
    
    
    
    
    this.deletedAt = deletedAt;
    return this;
  }

   /**
   * Get deletedAt
   * @return deletedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getDeletedAt() {
    return deletedAt;
  }


  public void setDeletedAt(Object deletedAt) {
    
    
    
    this.deletedAt = deletedAt;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner userDeleted(Boolean userDeleted) {
    
    
    
    
    this.userDeleted = userDeleted;
    return this;
  }

   /**
   * Get userDeleted
   * @return userDeleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getUserDeleted() {
    return userDeleted;
  }


  public void setUserDeleted(Boolean userDeleted) {
    
    
    
    this.userDeleted = userDeleted;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner editReason(Object editReason) {
    
    
    
    
    this.editReason = editReason;
    return this;
  }

   /**
   * Get editReason
   * @return editReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getEditReason() {
    return editReason;
  }


  public void setEditReason(Object editReason) {
    
    
    
    this.editReason = editReason;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner canViewEditHistory(Boolean canViewEditHistory) {
    
    
    
    
    this.canViewEditHistory = canViewEditHistory;
    return this;
  }

   /**
   * Get canViewEditHistory
   * @return canViewEditHistory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCanViewEditHistory() {
    return canViewEditHistory;
  }


  public void setCanViewEditHistory(Boolean canViewEditHistory) {
    
    
    
    this.canViewEditHistory = canViewEditHistory;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner wiki(Boolean wiki) {
    
    
    
    
    this.wiki = wiki;
    return this;
  }

   /**
   * Get wiki
   * @return wiki
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getWiki() {
    return wiki;
  }


  public void setWiki(Boolean wiki) {
    
    
    
    this.wiki = wiki;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner reviewableId(Object reviewableId) {
    
    
    
    
    this.reviewableId = reviewableId;
    return this;
  }

   /**
   * Get reviewableId
   * @return reviewableId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getReviewableId() {
    return reviewableId;
  }


  public void setReviewableId(Object reviewableId) {
    
    
    
    this.reviewableId = reviewableId;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner reviewableScoreCount(Integer reviewableScoreCount) {
    
    
    
    
    this.reviewableScoreCount = reviewableScoreCount;
    return this;
  }

   /**
   * Get reviewableScoreCount
   * @return reviewableScoreCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getReviewableScoreCount() {
    return reviewableScoreCount;
  }


  public void setReviewableScoreCount(Integer reviewableScoreCount) {
    
    
    
    this.reviewableScoreCount = reviewableScoreCount;
  }


  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner reviewableScorePendingCount(Integer reviewableScorePendingCount) {
    
    
    
    
    this.reviewableScorePendingCount = reviewableScorePendingCount;
    return this;
  }

   /**
   * Get reviewableScorePendingCount
   * @return reviewableScorePendingCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getReviewableScorePendingCount() {
    return reviewableScorePendingCount;
  }


  public void setReviewableScorePendingCount(Integer reviewableScorePendingCount) {
    
    
    
    this.reviewableScorePendingCount = reviewableScorePendingCount;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PostsListLatestPostsAcrossTopicsResponseLatestPostsInner instance itself
   */
  public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostsListLatestPostsAcrossTopicsResponseLatestPostsInner postsListLatestPostsAcrossTopicsResponseLatestPostsInner = (PostsListLatestPostsAcrossTopicsResponseLatestPostsInner) o;
    return Objects.equals(this.version, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.version) &&
        Objects.equals(this.id, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.id) &&
        Objects.equals(this.name, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.name) &&
        Objects.equals(this.username, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.username) &&
        Objects.equals(this.avatarTemplate, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.avatarTemplate) &&
        Objects.equals(this.createdAt, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.createdAt) &&
        Objects.equals(this.cooked, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.cooked) &&
        Objects.equals(this.postNumber, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.postNumber) &&
        Objects.equals(this.postType, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.postType) &&
        Objects.equals(this.updatedAt, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.updatedAt) &&
        Objects.equals(this.replyCount, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.replyCount) &&
        Objects.equals(this.replyToPostNumber, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.replyToPostNumber) &&
        Objects.equals(this.quoteCount, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.quoteCount) &&
        Objects.equals(this.incomingLinkCount, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.incomingLinkCount) &&
        Objects.equals(this.reads, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.reads) &&
        Objects.equals(this.readersCount, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.readersCount) &&
        Objects.equals(this.score, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.score) &&
        Objects.equals(this.yours, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.yours) &&
        Objects.equals(this.topicId, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.topicId) &&
        Objects.equals(this.topicSlug, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.topicSlug) &&
        Objects.equals(this.topicTitle, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.topicTitle) &&
        Objects.equals(this.topicHtmlTitle, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.topicHtmlTitle) &&
        Objects.equals(this.categoryId, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.categoryId) &&
        Objects.equals(this.displayUsername, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.displayUsername) &&
        Objects.equals(this.primaryGroupName, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.primaryGroupName) &&
        Objects.equals(this.flairName, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.flairName) &&
        Objects.equals(this.flairUrl, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.flairUrl) &&
        Objects.equals(this.flairBgColor, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.flairBgColor) &&
        Objects.equals(this.flairColor, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.flairColor) &&
        Objects.equals(this.flairGroupId, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.flairGroupId) &&
        Objects.equals(this.canEdit, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.canEdit) &&
        Objects.equals(this.canDelete, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.canDelete) &&
        Objects.equals(this.canRecover, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.canRecover) &&
        Objects.equals(this.canSeeHiddenPost, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.canSeeHiddenPost) &&
        Objects.equals(this.canWiki, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.canWiki) &&
        Objects.equals(this.userTitle, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.userTitle) &&
        Objects.equals(this.raw, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.raw) &&
        Objects.equals(this.actionsSummary, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.actionsSummary) &&
        Objects.equals(this.moderator, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.moderator) &&
        Objects.equals(this.admin, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.admin) &&
        Objects.equals(this.staff, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.staff) &&
        Objects.equals(this.userId, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.userId) &&
        Objects.equals(this.hidden, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.hidden) &&
        Objects.equals(this.trustLevel, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.trustLevel) &&
        Objects.equals(this.deletedAt, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.deletedAt) &&
        Objects.equals(this.userDeleted, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.userDeleted) &&
        Objects.equals(this.editReason, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.editReason) &&
        Objects.equals(this.canViewEditHistory, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.canViewEditHistory) &&
        Objects.equals(this.wiki, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.wiki) &&
        Objects.equals(this.reviewableId, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.reviewableId) &&
        Objects.equals(this.reviewableScoreCount, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.reviewableScoreCount) &&
        Objects.equals(this.reviewableScorePendingCount, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.reviewableScorePendingCount)&&
        Objects.equals(this.additionalProperties, postsListLatestPostsAcrossTopicsResponseLatestPostsInner.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(version, id, name, username, avatarTemplate, createdAt, cooked, postNumber, postType, updatedAt, replyCount, replyToPostNumber, quoteCount, incomingLinkCount, reads, readersCount, score, yours, topicId, topicSlug, topicTitle, topicHtmlTitle, categoryId, displayUsername, primaryGroupName, flairName, flairUrl, flairBgColor, flairColor, flairGroupId, canEdit, canDelete, canRecover, canSeeHiddenPost, canWiki, userTitle, raw, actionsSummary, moderator, admin, staff, userId, hidden, trustLevel, deletedAt, userDeleted, editReason, canViewEditHistory, wiki, reviewableId, reviewableScoreCount, reviewableScorePendingCount, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostsListLatestPostsAcrossTopicsResponseLatestPostsInner {\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    avatarTemplate: ").append(toIndentedString(avatarTemplate)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    cooked: ").append(toIndentedString(cooked)).append("\n");
    sb.append("    postNumber: ").append(toIndentedString(postNumber)).append("\n");
    sb.append("    postType: ").append(toIndentedString(postType)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    replyCount: ").append(toIndentedString(replyCount)).append("\n");
    sb.append("    replyToPostNumber: ").append(toIndentedString(replyToPostNumber)).append("\n");
    sb.append("    quoteCount: ").append(toIndentedString(quoteCount)).append("\n");
    sb.append("    incomingLinkCount: ").append(toIndentedString(incomingLinkCount)).append("\n");
    sb.append("    reads: ").append(toIndentedString(reads)).append("\n");
    sb.append("    readersCount: ").append(toIndentedString(readersCount)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    yours: ").append(toIndentedString(yours)).append("\n");
    sb.append("    topicId: ").append(toIndentedString(topicId)).append("\n");
    sb.append("    topicSlug: ").append(toIndentedString(topicSlug)).append("\n");
    sb.append("    topicTitle: ").append(toIndentedString(topicTitle)).append("\n");
    sb.append("    topicHtmlTitle: ").append(toIndentedString(topicHtmlTitle)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    displayUsername: ").append(toIndentedString(displayUsername)).append("\n");
    sb.append("    primaryGroupName: ").append(toIndentedString(primaryGroupName)).append("\n");
    sb.append("    flairName: ").append(toIndentedString(flairName)).append("\n");
    sb.append("    flairUrl: ").append(toIndentedString(flairUrl)).append("\n");
    sb.append("    flairBgColor: ").append(toIndentedString(flairBgColor)).append("\n");
    sb.append("    flairColor: ").append(toIndentedString(flairColor)).append("\n");
    sb.append("    flairGroupId: ").append(toIndentedString(flairGroupId)).append("\n");
    sb.append("    canEdit: ").append(toIndentedString(canEdit)).append("\n");
    sb.append("    canDelete: ").append(toIndentedString(canDelete)).append("\n");
    sb.append("    canRecover: ").append(toIndentedString(canRecover)).append("\n");
    sb.append("    canSeeHiddenPost: ").append(toIndentedString(canSeeHiddenPost)).append("\n");
    sb.append("    canWiki: ").append(toIndentedString(canWiki)).append("\n");
    sb.append("    userTitle: ").append(toIndentedString(userTitle)).append("\n");
    sb.append("    raw: ").append(toIndentedString(raw)).append("\n");
    sb.append("    actionsSummary: ").append(toIndentedString(actionsSummary)).append("\n");
    sb.append("    moderator: ").append(toIndentedString(moderator)).append("\n");
    sb.append("    admin: ").append(toIndentedString(admin)).append("\n");
    sb.append("    staff: ").append(toIndentedString(staff)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    trustLevel: ").append(toIndentedString(trustLevel)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    userDeleted: ").append(toIndentedString(userDeleted)).append("\n");
    sb.append("    editReason: ").append(toIndentedString(editReason)).append("\n");
    sb.append("    canViewEditHistory: ").append(toIndentedString(canViewEditHistory)).append("\n");
    sb.append("    wiki: ").append(toIndentedString(wiki)).append("\n");
    sb.append("    reviewableId: ").append(toIndentedString(reviewableId)).append("\n");
    sb.append("    reviewableScoreCount: ").append(toIndentedString(reviewableScoreCount)).append("\n");
    sb.append("    reviewableScorePendingCount: ").append(toIndentedString(reviewableScorePendingCount)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("version");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("username");
    openapiFields.add("avatar_template");
    openapiFields.add("created_at");
    openapiFields.add("cooked");
    openapiFields.add("post_number");
    openapiFields.add("post_type");
    openapiFields.add("updated_at");
    openapiFields.add("reply_count");
    openapiFields.add("reply_to_post_number");
    openapiFields.add("quote_count");
    openapiFields.add("incoming_link_count");
    openapiFields.add("reads");
    openapiFields.add("readers_count");
    openapiFields.add("score");
    openapiFields.add("yours");
    openapiFields.add("topic_id");
    openapiFields.add("topic_slug");
    openapiFields.add("topic_title");
    openapiFields.add("topic_html_title");
    openapiFields.add("category_id");
    openapiFields.add("display_username");
    openapiFields.add("primary_group_name");
    openapiFields.add("flair_name");
    openapiFields.add("flair_url");
    openapiFields.add("flair_bg_color");
    openapiFields.add("flair_color");
    openapiFields.add("flair_group_id");
    openapiFields.add("can_edit");
    openapiFields.add("can_delete");
    openapiFields.add("can_recover");
    openapiFields.add("can_see_hidden_post");
    openapiFields.add("can_wiki");
    openapiFields.add("user_title");
    openapiFields.add("raw");
    openapiFields.add("actions_summary");
    openapiFields.add("moderator");
    openapiFields.add("admin");
    openapiFields.add("staff");
    openapiFields.add("user_id");
    openapiFields.add("hidden");
    openapiFields.add("trust_level");
    openapiFields.add("deleted_at");
    openapiFields.add("user_deleted");
    openapiFields.add("edit_reason");
    openapiFields.add("can_view_edit_history");
    openapiFields.add("wiki");
    openapiFields.add("reviewable_id");
    openapiFields.add("reviewable_score_count");
    openapiFields.add("reviewable_score_pending_count");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PostsListLatestPostsAcrossTopicsResponseLatestPostsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PostsListLatestPostsAcrossTopicsResponseLatestPostsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PostsListLatestPostsAcrossTopicsResponseLatestPostsInner is not found in the empty JSON string", PostsListLatestPostsAcrossTopicsResponseLatestPostsInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("username") != null && !jsonObj.get("username").isJsonNull()) && !jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
      if ((jsonObj.get("avatar_template") != null && !jsonObj.get("avatar_template").isJsonNull()) && !jsonObj.get("avatar_template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatar_template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatar_template").toString()));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("cooked") != null && !jsonObj.get("cooked").isJsonNull()) && !jsonObj.get("cooked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cooked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cooked").toString()));
      }
      if ((jsonObj.get("updated_at") != null && !jsonObj.get("updated_at").isJsonNull()) && !jsonObj.get("updated_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated_at").toString()));
      }
      if ((jsonObj.get("topic_slug") != null && !jsonObj.get("topic_slug").isJsonNull()) && !jsonObj.get("topic_slug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `topic_slug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("topic_slug").toString()));
      }
      if ((jsonObj.get("topic_title") != null && !jsonObj.get("topic_title").isJsonNull()) && !jsonObj.get("topic_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `topic_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("topic_title").toString()));
      }
      if ((jsonObj.get("topic_html_title") != null && !jsonObj.get("topic_html_title").isJsonNull()) && !jsonObj.get("topic_html_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `topic_html_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("topic_html_title").toString()));
      }
      if ((jsonObj.get("display_username") != null && !jsonObj.get("display_username").isJsonNull()) && !jsonObj.get("display_username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_username").toString()));
      }
      if ((jsonObj.get("raw") != null && !jsonObj.get("raw").isJsonNull()) && !jsonObj.get("raw").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `raw` to be a primitive type in the JSON string but got `%s`", jsonObj.get("raw").toString()));
      }
      if (jsonObj.get("actions_summary") != null && !jsonObj.get("actions_summary").isJsonNull()) {
        JsonArray jsonArrayactionsSummary = jsonObj.getAsJsonArray("actions_summary");
        if (jsonArrayactionsSummary != null) {
          // ensure the json data is an array
          if (!jsonObj.get("actions_summary").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `actions_summary` to be an array in the JSON string but got `%s`", jsonObj.get("actions_summary").toString()));
          }

          // validate the optional field `actions_summary` (array)
          for (int i = 0; i < jsonArrayactionsSummary.size(); i++) {
            PostsListLatestPostsAcrossTopicsResponseLatestPostsInnerActionsSummaryInner.validateJsonObject(jsonArrayactionsSummary.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PostsListLatestPostsAcrossTopicsResponseLatestPostsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PostsListLatestPostsAcrossTopicsResponseLatestPostsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PostsListLatestPostsAcrossTopicsResponseLatestPostsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PostsListLatestPostsAcrossTopicsResponseLatestPostsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<PostsListLatestPostsAcrossTopicsResponseLatestPostsInner>() {
           @Override
           public void write(JsonWriter out, PostsListLatestPostsAcrossTopicsResponseLatestPostsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PostsListLatestPostsAcrossTopicsResponseLatestPostsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PostsListLatestPostsAcrossTopicsResponseLatestPostsInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PostsListLatestPostsAcrossTopicsResponseLatestPostsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PostsListLatestPostsAcrossTopicsResponseLatestPostsInner
  * @throws IOException if the JSON string is invalid with respect to PostsListLatestPostsAcrossTopicsResponseLatestPostsInner
  */
  public static PostsListLatestPostsAcrossTopicsResponseLatestPostsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PostsListLatestPostsAcrossTopicsResponseLatestPostsInner.class);
  }

 /**
  * Convert an instance of PostsListLatestPostsAcrossTopicsResponseLatestPostsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

