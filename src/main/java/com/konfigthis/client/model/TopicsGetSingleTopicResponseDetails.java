/*
 * Discourse API Documentation
 * This page contains the documentation on how to use Discourse through API calls.  > Note: For any endpoints not listed you can follow the [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576) guide to figure out how to use an API endpoint.  ### Request Content-Type  The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`, `multipart/form-data`, or `application/json`.  ### Endpoint Names and Response Content-Type  Most API endpoints provide the same content as their HTML counterparts. For example the URL `/categories` serves a list of categories, the `/categories.json` API provides the same information in JSON format.  Instead of sending API requests to `/categories.json` you may also send them to `/categories` and add an `Accept: application/json` header to the request to get the JSON response. Sending requests with the `Accept` header is necessary if you want to use URLs for related endpoints returned by the API, such as pagination URLs. These URLs are returned without the `.json` prefix so you need to add the header in order to get the correct response format.  ### Authentication  Some endpoints do not require any authentication, pretty much anything else will require you to be authenticated.  To become authenticated you will need to create an API Key from the admin panel.  Once you have your API Key you can pass it in along with your API Username as an HTTP header like this:  ``` curl -X GET \"http://127.0.0.1:3000/admin/users/list/active.json\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" ```  and this is how POST requests will look:  ``` curl -X POST \"http://127.0.0.1:3000/categories\" \\ -H \"Content-Type: multipart/form-data;\" \\ -H \"Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19\" \\ -H \"Api-Username: system\" \\ -F \"name=89853c20-4409-e91a-a8ea-f6cdff96aaaa\" \\ -F \"color=49d9e9\" \\ -F \"text_color=f0fcfd\" ```  ### Boolean values  If an endpoint accepts a boolean be sure to specify it as a lowercase `true` or `false` value unless noted otherwise. 
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CategoriesListTopicsResponseUsersInner;
import com.konfigthis.client.model.TopicsGetSingleTopicResponseDetailsParticipantsInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * TopicsGetSingleTopicResponseDetails
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class TopicsGetSingleTopicResponseDetails {
  public static final String SERIALIZED_NAME_CAN_EDIT = "can_edit";
  @SerializedName(SERIALIZED_NAME_CAN_EDIT)
  private Boolean canEdit;

  public static final String SERIALIZED_NAME_NOTIFICATION_LEVEL = "notification_level";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_LEVEL)
  private Integer notificationLevel;

  public static final String SERIALIZED_NAME_CAN_MOVE_POSTS = "can_move_posts";
  @SerializedName(SERIALIZED_NAME_CAN_MOVE_POSTS)
  private Boolean canMovePosts;

  public static final String SERIALIZED_NAME_CAN_DELETE = "can_delete";
  @SerializedName(SERIALIZED_NAME_CAN_DELETE)
  private Boolean canDelete;

  public static final String SERIALIZED_NAME_CAN_REMOVE_ALLOWED_USERS = "can_remove_allowed_users";
  @SerializedName(SERIALIZED_NAME_CAN_REMOVE_ALLOWED_USERS)
  private Boolean canRemoveAllowedUsers;

  public static final String SERIALIZED_NAME_CAN_CREATE_POST = "can_create_post";
  @SerializedName(SERIALIZED_NAME_CAN_CREATE_POST)
  private Boolean canCreatePost;

  public static final String SERIALIZED_NAME_CAN_REPLY_AS_NEW_TOPIC = "can_reply_as_new_topic";
  @SerializedName(SERIALIZED_NAME_CAN_REPLY_AS_NEW_TOPIC)
  private Boolean canReplyAsNewTopic;

  public static final String SERIALIZED_NAME_CAN_INVITE_TO = "can_invite_to";
  @SerializedName(SERIALIZED_NAME_CAN_INVITE_TO)
  private Boolean canInviteTo;

  public static final String SERIALIZED_NAME_CAN_INVITE_VIA_EMAIL = "can_invite_via_email";
  @SerializedName(SERIALIZED_NAME_CAN_INVITE_VIA_EMAIL)
  private Boolean canInviteViaEmail;

  public static final String SERIALIZED_NAME_CAN_FLAG_TOPIC = "can_flag_topic";
  @SerializedName(SERIALIZED_NAME_CAN_FLAG_TOPIC)
  private Boolean canFlagTopic;

  public static final String SERIALIZED_NAME_CAN_CONVERT_TOPIC = "can_convert_topic";
  @SerializedName(SERIALIZED_NAME_CAN_CONVERT_TOPIC)
  private Boolean canConvertTopic;

  public static final String SERIALIZED_NAME_CAN_REVIEW_TOPIC = "can_review_topic";
  @SerializedName(SERIALIZED_NAME_CAN_REVIEW_TOPIC)
  private Boolean canReviewTopic;

  public static final String SERIALIZED_NAME_CAN_CLOSE_TOPIC = "can_close_topic";
  @SerializedName(SERIALIZED_NAME_CAN_CLOSE_TOPIC)
  private Boolean canCloseTopic;

  public static final String SERIALIZED_NAME_CAN_ARCHIVE_TOPIC = "can_archive_topic";
  @SerializedName(SERIALIZED_NAME_CAN_ARCHIVE_TOPIC)
  private Boolean canArchiveTopic;

  public static final String SERIALIZED_NAME_CAN_SPLIT_MERGE_TOPIC = "can_split_merge_topic";
  @SerializedName(SERIALIZED_NAME_CAN_SPLIT_MERGE_TOPIC)
  private Boolean canSplitMergeTopic;

  public static final String SERIALIZED_NAME_CAN_EDIT_STAFF_NOTES = "can_edit_staff_notes";
  @SerializedName(SERIALIZED_NAME_CAN_EDIT_STAFF_NOTES)
  private Boolean canEditStaffNotes;

  public static final String SERIALIZED_NAME_CAN_TOGGLE_TOPIC_VISIBILITY = "can_toggle_topic_visibility";
  @SerializedName(SERIALIZED_NAME_CAN_TOGGLE_TOPIC_VISIBILITY)
  private Boolean canToggleTopicVisibility;

  public static final String SERIALIZED_NAME_CAN_PIN_UNPIN_TOPIC = "can_pin_unpin_topic";
  @SerializedName(SERIALIZED_NAME_CAN_PIN_UNPIN_TOPIC)
  private Boolean canPinUnpinTopic;

  public static final String SERIALIZED_NAME_CAN_MODERATE_CATEGORY = "can_moderate_category";
  @SerializedName(SERIALIZED_NAME_CAN_MODERATE_CATEGORY)
  private Boolean canModerateCategory;

  public static final String SERIALIZED_NAME_CAN_REMOVE_SELF_ID = "can_remove_self_id";
  @SerializedName(SERIALIZED_NAME_CAN_REMOVE_SELF_ID)
  private Integer canRemoveSelfId;

  public static final String SERIALIZED_NAME_PARTICIPANTS = "participants";
  @SerializedName(SERIALIZED_NAME_PARTICIPANTS)
  private List<TopicsGetSingleTopicResponseDetailsParticipantsInner> participants = null;

  public static final String SERIALIZED_NAME_CREATED_BY = "created_by";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private CategoriesListTopicsResponseUsersInner createdBy;

  public static final String SERIALIZED_NAME_LAST_POSTER = "last_poster";
  @SerializedName(SERIALIZED_NAME_LAST_POSTER)
  private CategoriesListTopicsResponseUsersInner lastPoster;

  public TopicsGetSingleTopicResponseDetails() {
  }

  public TopicsGetSingleTopicResponseDetails canEdit(Boolean canEdit) {
    
    
    
    
    this.canEdit = canEdit;
    return this;
  }

   /**
   * Get canEdit
   * @return canEdit
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanEdit() {
    return canEdit;
  }


  public void setCanEdit(Boolean canEdit) {
    
    
    
    this.canEdit = canEdit;
  }


  public TopicsGetSingleTopicResponseDetails notificationLevel(Integer notificationLevel) {
    
    
    
    
    this.notificationLevel = notificationLevel;
    return this;
  }

   /**
   * Get notificationLevel
   * @return notificationLevel
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getNotificationLevel() {
    return notificationLevel;
  }


  public void setNotificationLevel(Integer notificationLevel) {
    
    
    
    this.notificationLevel = notificationLevel;
  }


  public TopicsGetSingleTopicResponseDetails canMovePosts(Boolean canMovePosts) {
    
    
    
    
    this.canMovePosts = canMovePosts;
    return this;
  }

   /**
   * Get canMovePosts
   * @return canMovePosts
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanMovePosts() {
    return canMovePosts;
  }


  public void setCanMovePosts(Boolean canMovePosts) {
    
    
    
    this.canMovePosts = canMovePosts;
  }


  public TopicsGetSingleTopicResponseDetails canDelete(Boolean canDelete) {
    
    
    
    
    this.canDelete = canDelete;
    return this;
  }

   /**
   * Get canDelete
   * @return canDelete
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanDelete() {
    return canDelete;
  }


  public void setCanDelete(Boolean canDelete) {
    
    
    
    this.canDelete = canDelete;
  }


  public TopicsGetSingleTopicResponseDetails canRemoveAllowedUsers(Boolean canRemoveAllowedUsers) {
    
    
    
    
    this.canRemoveAllowedUsers = canRemoveAllowedUsers;
    return this;
  }

   /**
   * Get canRemoveAllowedUsers
   * @return canRemoveAllowedUsers
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanRemoveAllowedUsers() {
    return canRemoveAllowedUsers;
  }


  public void setCanRemoveAllowedUsers(Boolean canRemoveAllowedUsers) {
    
    
    
    this.canRemoveAllowedUsers = canRemoveAllowedUsers;
  }


  public TopicsGetSingleTopicResponseDetails canCreatePost(Boolean canCreatePost) {
    
    
    
    
    this.canCreatePost = canCreatePost;
    return this;
  }

   /**
   * Get canCreatePost
   * @return canCreatePost
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanCreatePost() {
    return canCreatePost;
  }


  public void setCanCreatePost(Boolean canCreatePost) {
    
    
    
    this.canCreatePost = canCreatePost;
  }


  public TopicsGetSingleTopicResponseDetails canReplyAsNewTopic(Boolean canReplyAsNewTopic) {
    
    
    
    
    this.canReplyAsNewTopic = canReplyAsNewTopic;
    return this;
  }

   /**
   * Get canReplyAsNewTopic
   * @return canReplyAsNewTopic
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanReplyAsNewTopic() {
    return canReplyAsNewTopic;
  }


  public void setCanReplyAsNewTopic(Boolean canReplyAsNewTopic) {
    
    
    
    this.canReplyAsNewTopic = canReplyAsNewTopic;
  }


  public TopicsGetSingleTopicResponseDetails canInviteTo(Boolean canInviteTo) {
    
    
    
    
    this.canInviteTo = canInviteTo;
    return this;
  }

   /**
   * Get canInviteTo
   * @return canInviteTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCanInviteTo() {
    return canInviteTo;
  }


  public void setCanInviteTo(Boolean canInviteTo) {
    
    
    
    this.canInviteTo = canInviteTo;
  }


  public TopicsGetSingleTopicResponseDetails canInviteViaEmail(Boolean canInviteViaEmail) {
    
    
    
    
    this.canInviteViaEmail = canInviteViaEmail;
    return this;
  }

   /**
   * Get canInviteViaEmail
   * @return canInviteViaEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCanInviteViaEmail() {
    return canInviteViaEmail;
  }


  public void setCanInviteViaEmail(Boolean canInviteViaEmail) {
    
    
    
    this.canInviteViaEmail = canInviteViaEmail;
  }


  public TopicsGetSingleTopicResponseDetails canFlagTopic(Boolean canFlagTopic) {
    
    
    
    
    this.canFlagTopic = canFlagTopic;
    return this;
  }

   /**
   * Get canFlagTopic
   * @return canFlagTopic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCanFlagTopic() {
    return canFlagTopic;
  }


  public void setCanFlagTopic(Boolean canFlagTopic) {
    
    
    
    this.canFlagTopic = canFlagTopic;
  }


  public TopicsGetSingleTopicResponseDetails canConvertTopic(Boolean canConvertTopic) {
    
    
    
    
    this.canConvertTopic = canConvertTopic;
    return this;
  }

   /**
   * Get canConvertTopic
   * @return canConvertTopic
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanConvertTopic() {
    return canConvertTopic;
  }


  public void setCanConvertTopic(Boolean canConvertTopic) {
    
    
    
    this.canConvertTopic = canConvertTopic;
  }


  public TopicsGetSingleTopicResponseDetails canReviewTopic(Boolean canReviewTopic) {
    
    
    
    
    this.canReviewTopic = canReviewTopic;
    return this;
  }

   /**
   * Get canReviewTopic
   * @return canReviewTopic
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanReviewTopic() {
    return canReviewTopic;
  }


  public void setCanReviewTopic(Boolean canReviewTopic) {
    
    
    
    this.canReviewTopic = canReviewTopic;
  }


  public TopicsGetSingleTopicResponseDetails canCloseTopic(Boolean canCloseTopic) {
    
    
    
    
    this.canCloseTopic = canCloseTopic;
    return this;
  }

   /**
   * Get canCloseTopic
   * @return canCloseTopic
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanCloseTopic() {
    return canCloseTopic;
  }


  public void setCanCloseTopic(Boolean canCloseTopic) {
    
    
    
    this.canCloseTopic = canCloseTopic;
  }


  public TopicsGetSingleTopicResponseDetails canArchiveTopic(Boolean canArchiveTopic) {
    
    
    
    
    this.canArchiveTopic = canArchiveTopic;
    return this;
  }

   /**
   * Get canArchiveTopic
   * @return canArchiveTopic
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanArchiveTopic() {
    return canArchiveTopic;
  }


  public void setCanArchiveTopic(Boolean canArchiveTopic) {
    
    
    
    this.canArchiveTopic = canArchiveTopic;
  }


  public TopicsGetSingleTopicResponseDetails canSplitMergeTopic(Boolean canSplitMergeTopic) {
    
    
    
    
    this.canSplitMergeTopic = canSplitMergeTopic;
    return this;
  }

   /**
   * Get canSplitMergeTopic
   * @return canSplitMergeTopic
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanSplitMergeTopic() {
    return canSplitMergeTopic;
  }


  public void setCanSplitMergeTopic(Boolean canSplitMergeTopic) {
    
    
    
    this.canSplitMergeTopic = canSplitMergeTopic;
  }


  public TopicsGetSingleTopicResponseDetails canEditStaffNotes(Boolean canEditStaffNotes) {
    
    
    
    
    this.canEditStaffNotes = canEditStaffNotes;
    return this;
  }

   /**
   * Get canEditStaffNotes
   * @return canEditStaffNotes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanEditStaffNotes() {
    return canEditStaffNotes;
  }


  public void setCanEditStaffNotes(Boolean canEditStaffNotes) {
    
    
    
    this.canEditStaffNotes = canEditStaffNotes;
  }


  public TopicsGetSingleTopicResponseDetails canToggleTopicVisibility(Boolean canToggleTopicVisibility) {
    
    
    
    
    this.canToggleTopicVisibility = canToggleTopicVisibility;
    return this;
  }

   /**
   * Get canToggleTopicVisibility
   * @return canToggleTopicVisibility
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanToggleTopicVisibility() {
    return canToggleTopicVisibility;
  }


  public void setCanToggleTopicVisibility(Boolean canToggleTopicVisibility) {
    
    
    
    this.canToggleTopicVisibility = canToggleTopicVisibility;
  }


  public TopicsGetSingleTopicResponseDetails canPinUnpinTopic(Boolean canPinUnpinTopic) {
    
    
    
    
    this.canPinUnpinTopic = canPinUnpinTopic;
    return this;
  }

   /**
   * Get canPinUnpinTopic
   * @return canPinUnpinTopic
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanPinUnpinTopic() {
    return canPinUnpinTopic;
  }


  public void setCanPinUnpinTopic(Boolean canPinUnpinTopic) {
    
    
    
    this.canPinUnpinTopic = canPinUnpinTopic;
  }


  public TopicsGetSingleTopicResponseDetails canModerateCategory(Boolean canModerateCategory) {
    
    
    
    
    this.canModerateCategory = canModerateCategory;
    return this;
  }

   /**
   * Get canModerateCategory
   * @return canModerateCategory
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Boolean getCanModerateCategory() {
    return canModerateCategory;
  }


  public void setCanModerateCategory(Boolean canModerateCategory) {
    
    
    
    this.canModerateCategory = canModerateCategory;
  }


  public TopicsGetSingleTopicResponseDetails canRemoveSelfId(Integer canRemoveSelfId) {
    
    
    
    
    this.canRemoveSelfId = canRemoveSelfId;
    return this;
  }

   /**
   * Get canRemoveSelfId
   * @return canRemoveSelfId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getCanRemoveSelfId() {
    return canRemoveSelfId;
  }


  public void setCanRemoveSelfId(Integer canRemoveSelfId) {
    
    
    
    this.canRemoveSelfId = canRemoveSelfId;
  }


  public TopicsGetSingleTopicResponseDetails participants(List<TopicsGetSingleTopicResponseDetailsParticipantsInner> participants) {
    
    
    
    
    this.participants = participants;
    return this;
  }

  public TopicsGetSingleTopicResponseDetails addParticipantsItem(TopicsGetSingleTopicResponseDetailsParticipantsInner participantsItem) {
    if (this.participants == null) {
      this.participants = new ArrayList<>();
    }
    this.participants.add(participantsItem);
    return this;
  }

   /**
   * Get participants
   * @return participants
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<TopicsGetSingleTopicResponseDetailsParticipantsInner> getParticipants() {
    return participants;
  }


  public void setParticipants(List<TopicsGetSingleTopicResponseDetailsParticipantsInner> participants) {
    
    
    
    this.participants = participants;
  }


  public TopicsGetSingleTopicResponseDetails createdBy(CategoriesListTopicsResponseUsersInner createdBy) {
    
    
    
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public CategoriesListTopicsResponseUsersInner getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(CategoriesListTopicsResponseUsersInner createdBy) {
    
    
    
    this.createdBy = createdBy;
  }


  public TopicsGetSingleTopicResponseDetails lastPoster(CategoriesListTopicsResponseUsersInner lastPoster) {
    
    
    
    
    this.lastPoster = lastPoster;
    return this;
  }

   /**
   * Get lastPoster
   * @return lastPoster
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public CategoriesListTopicsResponseUsersInner getLastPoster() {
    return lastPoster;
  }


  public void setLastPoster(CategoriesListTopicsResponseUsersInner lastPoster) {
    
    
    
    this.lastPoster = lastPoster;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the TopicsGetSingleTopicResponseDetails instance itself
   */
  public TopicsGetSingleTopicResponseDetails putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TopicsGetSingleTopicResponseDetails topicsGetSingleTopicResponseDetails = (TopicsGetSingleTopicResponseDetails) o;
    return Objects.equals(this.canEdit, topicsGetSingleTopicResponseDetails.canEdit) &&
        Objects.equals(this.notificationLevel, topicsGetSingleTopicResponseDetails.notificationLevel) &&
        Objects.equals(this.canMovePosts, topicsGetSingleTopicResponseDetails.canMovePosts) &&
        Objects.equals(this.canDelete, topicsGetSingleTopicResponseDetails.canDelete) &&
        Objects.equals(this.canRemoveAllowedUsers, topicsGetSingleTopicResponseDetails.canRemoveAllowedUsers) &&
        Objects.equals(this.canCreatePost, topicsGetSingleTopicResponseDetails.canCreatePost) &&
        Objects.equals(this.canReplyAsNewTopic, topicsGetSingleTopicResponseDetails.canReplyAsNewTopic) &&
        Objects.equals(this.canInviteTo, topicsGetSingleTopicResponseDetails.canInviteTo) &&
        Objects.equals(this.canInviteViaEmail, topicsGetSingleTopicResponseDetails.canInviteViaEmail) &&
        Objects.equals(this.canFlagTopic, topicsGetSingleTopicResponseDetails.canFlagTopic) &&
        Objects.equals(this.canConvertTopic, topicsGetSingleTopicResponseDetails.canConvertTopic) &&
        Objects.equals(this.canReviewTopic, topicsGetSingleTopicResponseDetails.canReviewTopic) &&
        Objects.equals(this.canCloseTopic, topicsGetSingleTopicResponseDetails.canCloseTopic) &&
        Objects.equals(this.canArchiveTopic, topicsGetSingleTopicResponseDetails.canArchiveTopic) &&
        Objects.equals(this.canSplitMergeTopic, topicsGetSingleTopicResponseDetails.canSplitMergeTopic) &&
        Objects.equals(this.canEditStaffNotes, topicsGetSingleTopicResponseDetails.canEditStaffNotes) &&
        Objects.equals(this.canToggleTopicVisibility, topicsGetSingleTopicResponseDetails.canToggleTopicVisibility) &&
        Objects.equals(this.canPinUnpinTopic, topicsGetSingleTopicResponseDetails.canPinUnpinTopic) &&
        Objects.equals(this.canModerateCategory, topicsGetSingleTopicResponseDetails.canModerateCategory) &&
        Objects.equals(this.canRemoveSelfId, topicsGetSingleTopicResponseDetails.canRemoveSelfId) &&
        Objects.equals(this.participants, topicsGetSingleTopicResponseDetails.participants) &&
        Objects.equals(this.createdBy, topicsGetSingleTopicResponseDetails.createdBy) &&
        Objects.equals(this.lastPoster, topicsGetSingleTopicResponseDetails.lastPoster)&&
        Objects.equals(this.additionalProperties, topicsGetSingleTopicResponseDetails.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canEdit, notificationLevel, canMovePosts, canDelete, canRemoveAllowedUsers, canCreatePost, canReplyAsNewTopic, canInviteTo, canInviteViaEmail, canFlagTopic, canConvertTopic, canReviewTopic, canCloseTopic, canArchiveTopic, canSplitMergeTopic, canEditStaffNotes, canToggleTopicVisibility, canPinUnpinTopic, canModerateCategory, canRemoveSelfId, participants, createdBy, lastPoster, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TopicsGetSingleTopicResponseDetails {\n");
    sb.append("    canEdit: ").append(toIndentedString(canEdit)).append("\n");
    sb.append("    notificationLevel: ").append(toIndentedString(notificationLevel)).append("\n");
    sb.append("    canMovePosts: ").append(toIndentedString(canMovePosts)).append("\n");
    sb.append("    canDelete: ").append(toIndentedString(canDelete)).append("\n");
    sb.append("    canRemoveAllowedUsers: ").append(toIndentedString(canRemoveAllowedUsers)).append("\n");
    sb.append("    canCreatePost: ").append(toIndentedString(canCreatePost)).append("\n");
    sb.append("    canReplyAsNewTopic: ").append(toIndentedString(canReplyAsNewTopic)).append("\n");
    sb.append("    canInviteTo: ").append(toIndentedString(canInviteTo)).append("\n");
    sb.append("    canInviteViaEmail: ").append(toIndentedString(canInviteViaEmail)).append("\n");
    sb.append("    canFlagTopic: ").append(toIndentedString(canFlagTopic)).append("\n");
    sb.append("    canConvertTopic: ").append(toIndentedString(canConvertTopic)).append("\n");
    sb.append("    canReviewTopic: ").append(toIndentedString(canReviewTopic)).append("\n");
    sb.append("    canCloseTopic: ").append(toIndentedString(canCloseTopic)).append("\n");
    sb.append("    canArchiveTopic: ").append(toIndentedString(canArchiveTopic)).append("\n");
    sb.append("    canSplitMergeTopic: ").append(toIndentedString(canSplitMergeTopic)).append("\n");
    sb.append("    canEditStaffNotes: ").append(toIndentedString(canEditStaffNotes)).append("\n");
    sb.append("    canToggleTopicVisibility: ").append(toIndentedString(canToggleTopicVisibility)).append("\n");
    sb.append("    canPinUnpinTopic: ").append(toIndentedString(canPinUnpinTopic)).append("\n");
    sb.append("    canModerateCategory: ").append(toIndentedString(canModerateCategory)).append("\n");
    sb.append("    canRemoveSelfId: ").append(toIndentedString(canRemoveSelfId)).append("\n");
    sb.append("    participants: ").append(toIndentedString(participants)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    lastPoster: ").append(toIndentedString(lastPoster)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("can_edit");
    openapiFields.add("notification_level");
    openapiFields.add("can_move_posts");
    openapiFields.add("can_delete");
    openapiFields.add("can_remove_allowed_users");
    openapiFields.add("can_create_post");
    openapiFields.add("can_reply_as_new_topic");
    openapiFields.add("can_invite_to");
    openapiFields.add("can_invite_via_email");
    openapiFields.add("can_flag_topic");
    openapiFields.add("can_convert_topic");
    openapiFields.add("can_review_topic");
    openapiFields.add("can_close_topic");
    openapiFields.add("can_archive_topic");
    openapiFields.add("can_split_merge_topic");
    openapiFields.add("can_edit_staff_notes");
    openapiFields.add("can_toggle_topic_visibility");
    openapiFields.add("can_pin_unpin_topic");
    openapiFields.add("can_moderate_category");
    openapiFields.add("can_remove_self_id");
    openapiFields.add("participants");
    openapiFields.add("created_by");
    openapiFields.add("last_poster");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("can_edit");
    openapiRequiredFields.add("notification_level");
    openapiRequiredFields.add("can_move_posts");
    openapiRequiredFields.add("can_delete");
    openapiRequiredFields.add("can_remove_allowed_users");
    openapiRequiredFields.add("can_create_post");
    openapiRequiredFields.add("can_reply_as_new_topic");
    openapiRequiredFields.add("can_convert_topic");
    openapiRequiredFields.add("can_review_topic");
    openapiRequiredFields.add("can_close_topic");
    openapiRequiredFields.add("can_archive_topic");
    openapiRequiredFields.add("can_split_merge_topic");
    openapiRequiredFields.add("can_edit_staff_notes");
    openapiRequiredFields.add("can_toggle_topic_visibility");
    openapiRequiredFields.add("can_pin_unpin_topic");
    openapiRequiredFields.add("can_moderate_category");
    openapiRequiredFields.add("can_remove_self_id");
    openapiRequiredFields.add("created_by");
    openapiRequiredFields.add("last_poster");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TopicsGetSingleTopicResponseDetails
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TopicsGetSingleTopicResponseDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TopicsGetSingleTopicResponseDetails is not found in the empty JSON string", TopicsGetSingleTopicResponseDetails.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TopicsGetSingleTopicResponseDetails.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("participants") != null && !jsonObj.get("participants").isJsonNull()) {
        JsonArray jsonArrayparticipants = jsonObj.getAsJsonArray("participants");
        if (jsonArrayparticipants != null) {
          // ensure the json data is an array
          if (!jsonObj.get("participants").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `participants` to be an array in the JSON string but got `%s`", jsonObj.get("participants").toString()));
          }

          // validate the optional field `participants` (array)
          for (int i = 0; i < jsonArrayparticipants.size(); i++) {
            TopicsGetSingleTopicResponseDetailsParticipantsInner.validateJsonObject(jsonArrayparticipants.get(i).getAsJsonObject());
          };
        }
      }
      // validate the required field `created_by`
      CategoriesListTopicsResponseUsersInner.validateJsonObject(jsonObj.getAsJsonObject("created_by"));
      // validate the required field `last_poster`
      CategoriesListTopicsResponseUsersInner.validateJsonObject(jsonObj.getAsJsonObject("last_poster"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TopicsGetSingleTopicResponseDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TopicsGetSingleTopicResponseDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TopicsGetSingleTopicResponseDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TopicsGetSingleTopicResponseDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<TopicsGetSingleTopicResponseDetails>() {
           @Override
           public void write(JsonWriter out, TopicsGetSingleTopicResponseDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public TopicsGetSingleTopicResponseDetails read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             TopicsGetSingleTopicResponseDetails instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TopicsGetSingleTopicResponseDetails given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TopicsGetSingleTopicResponseDetails
  * @throws IOException if the JSON string is invalid with respect to TopicsGetSingleTopicResponseDetails
  */
  public static TopicsGetSingleTopicResponseDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TopicsGetSingleTopicResponseDetails.class);
  }

 /**
  * Convert an instance of TopicsGetSingleTopicResponseDetails to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

