openapi: 3.0.3
info:
  description: |
    This page contains the documentation on how to use Discourse through API calls.

    > Note: For any endpoints not listed you can follow the
    [reverse engineer the Discourse API](https://meta.discourse.org/t/-/20576)
    guide to figure out how to use an API endpoint.

    ### Request Content-Type

    The Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded`,
    `multipart/form-data`, or `application/json`.

    ### Endpoint Names and Response Content-Type

    Most API endpoints provide the same content as their HTML counterparts. For example
    the URL `/categories` serves a list of categories, the `/categories.json` API provides the
    same information in JSON format.

    Instead of sending API requests to `/categories.json` you may also send them to `/categories`
    and add an `Accept: application/json` header to the request to get the JSON response.
    Sending requests with the `Accept` header is necessary if you want to use URLs
    for related endpoints returned by the API, such as pagination URLs.
    These URLs are returned without the `.json` prefix so you need to add the header in
    order to get the correct response format.

    ### Authentication

    Some endpoints do not require any authentication, pretty much anything else will
    require you to be authenticated.

    To become authenticated you will need to create an API Key from the admin panel.

    Once you have your API Key you can pass it in along with your API Username
    as an HTTP header like this:

    ```
    curl -X GET "http://127.0.0.1:3000/admin/users/list/active.json" \
    -H "Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19" \
    -H "Api-Username: system"
    ```

    and this is how POST requests will look:

    ```
    curl -X POST "http://127.0.0.1:3000/categories" \
    -H "Content-Type: multipart/form-data;" \
    -H "Api-Key: 714552c6148e1617aeab526d0606184b94a80ec048fc09894ff1a72b740c5f19" \
    -H "Api-Username: system" \
    -F "name=89853c20-4409-e91a-a8ea-f6cdff96aaaa" \
    -F "color=49d9e9" \
    -F "text_color=f0fcfd"
    ```

    ### Boolean values

    If an endpoint accepts a boolean be sure to specify it as a lowercase
    `true` or `false` value unless noted otherwise.
  license:
    name: MIT
    url: https://docs.discourse.org/LICENSE.txt
  title: Discourse API Documentation
  version: latest
  x-logo:
    url: https://docs.discourse.org/logo.svg
  x-api-status-urls: false
  x-konfig-ignore:
    potential-incorrect-type: true
  x-konfig-uses-multipart-form-data: true
servers:
- url: "https://{defaultHost}"
  variables:
    defaultHost:
      default: discourse.example.com
tags:
- name: Users
- name: Topics
- name: Admin
- name: Groups
- name: Posts
- name: Uploads
- name: Categories
- name: Tags
- name: Badges
- name: Backups
- name: Invites
- name: Private Messages
- name: Notifications
- name: Search
- name: Site
paths:
  /admin/backups.json:
    get:
      operationId: Backups_list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsListResponse'
          description: success response
      summary: List backups
      tags:
      - Backups
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--admin-backups.json
      x-accepts: application/json
    post:
      operationId: Backups_createBackupRequest
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupsCreateBackupRequestRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsCreateBackupRequestResponse'
          description: success response
      summary: Create backup
      tags:
      - Backups
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--admin-backups.json
      x-content-type: application/json
      x-accepts: application/json
  /admin/backups/{filename}:
    get:
      operationId: Backups_downloadBackup
      parameters:
      - explode: false
        in: path
        name: filename
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: success response
      summary: Download backup
      tags:
      - Backups
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--admin-backups-filename
      x-accepts: application/json
    put:
      operationId: Backups_sendDownloadBackupEmail
      parameters:
      - explode: false
        in: path
        name: filename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: success response
      summary: Send download backup email
      tags:
      - Backups
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--admin-backups-filename
      x-accepts: application/json
  /admin/badges.json:
    get:
      operationId: Badges_list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadgesListResponse'
          description: success response
      summary: List badges
      tags:
      - Badges
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--admin-badges.json
      x-accepts: application/json
    post:
      operationId: Badges_createBadge
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BadgesCreateBadgeRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadgesCreateBadgeResponse'
          description: success response
      summary: Create badge
      tags:
      - Badges
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--admin-badges.json
      x-content-type: application/json
      x-accepts: application/json
  /admin/badges/{id}.json:
    delete:
      operationId: Badges_deleteByIdJson
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: success response
      summary: Delete badge
      tags:
      - Badges
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--admin-badges-id.json
      x-accepts: application/json
    put:
      operationId: Badges_updateBadgeByIdJson
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BadgesUpdateBadgeByIdJsonRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadgesUpdateBadgeByIdJsonResponse'
          description: success response
      summary: Update badge
      tags:
      - Badges
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--admin-badges-id.json
      x-content-type: application/json
      x-accepts: application/json
  /categories.json:
    get:
      operationId: Categories_list
      parameters:
      - explode: true
        in: query
        name: include_subcategories
        required: false
        schema:
          enum:
          - true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesListResponse'
          description: success response
      summary: Retrieves a list of categories
      tags:
      - Categories
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--categories.json
      x-accepts: application/json
    post:
      operationId: Categories_createCategoryRequest
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriesCreateCategoryRequestRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesCreateCategoryRequestResponse'
          description: success response
      summary: Creates a category
      tags:
      - Categories
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--categories.json
      x-content-type: application/json
      x-accepts: application/json
  /categories/{id}.json:
    put:
      operationId: Categories_updateCategoryByIdJson
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriesUpdateCategoryByIdJsonRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesUpdateCategoryByIdJsonResponse'
          description: success response
      summary: Updates a category
      tags:
      - Categories
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--categories-id.json
      x-content-type: application/json
      x-accepts: application/json
  /c/{slug}/{id}.json:
    get:
      operationId: Categories_listTopics
      parameters:
      - explode: false
        in: path
        name: slug
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesListTopicsResponse'
          description: success response
      summary: List topics
      tags:
      - Categories
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--c-slug-id.json
      x-accepts: application/json
  /c/{id}/show.json:
    get:
      operationId: Categories_getCategoryByIdJson
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesGetCategoryByIdJsonResponse'
          description: response
      summary: Show category
      tags:
      - Categories
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--c-id-show.json
      x-accepts: application/json
  /admin/groups.json:
    post:
      operationId: Groups_createNewGroup
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsCreateNewGroupRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsCreateNewGroupResponse'
          description: group created
      summary: Create a group
      tags:
      - Groups
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--admin-groups.json
      x-content-type: application/json
      x-accepts: application/json
  /admin/groups/{id}.json:
    delete:
      operationId: Groups_deleteGroupByIdJson
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsDeleteGroupByIdJsonResponse'
          description: response
      summary: Delete a group
      tags:
      - Groups
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--admin-groups-id.json
      x-accepts: application/json
  /groups/{id}.json:
    get:
      operationId: Groups_getGroupById
      parameters:
      - description: Use group name instead of id
        example: name
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: name
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsGetGroupByIdResponse'
          description: success response
      summary: Get a group
      tags:
      - Groups
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--groups-id.json
      x-accepts: application/json
    put:
      operationId: Groups_updateGroupByIdJson
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsUpdateGroupByIdJsonRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsUpdateGroupByIdJsonResponse'
          description: success response
      summary: Update a group
      tags:
      - Groups
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--groups-id.json
      x-content-type: application/json
      x-accepts: application/json
  /groups/{id}/members.json:
    delete:
      operationId: Groups_removeMembers
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsRemoveMembersRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsRemoveMembersResponse'
          description: success response
      summary: Remove group members
      tags:
      - Groups
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--groups-id-members.json
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: Groups_listMembersJson
      parameters:
      - description: Use group name instead of id
        example: name
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-konfig-original-example: name
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsListMembersJsonResponse'
          description: success response
      summary: List group members
      tags:
      - Groups
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--groups-id-members.json
      x-accepts: application/json
    put:
      operationId: Groups_addMembersToGroup
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsAddMembersToGroupRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsAddMembersToGroupResponse'
          description: success response
      summary: Add group members
      tags:
      - Groups
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--groups-id-members.json
      x-content-type: application/json
      x-accepts: application/json
  /groups.json:
    get:
      operationId: Groups_list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsListResponse'
          description: response
      summary: List groups
      tags:
      - Groups
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--groups.json
      x-accepts: application/json
  /invites.json:
    post:
      operationId: Invites_createInvite
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitesCreateInviteRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitesCreateInviteResponse'
          description: success response
      summary: Create an invite
      tags:
      - Invites
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--invites.json
      x-content-type: application/json
      x-accepts: application/json
  /invites/create-multiple.json:
    post:
      operationId: Invites_createMultipleInvites
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitesCreateMultipleInvitesRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitesCreateMultipleInvitesResponse'
          description: success response
      summary: Create multiple invites
      tags:
      - Invites
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--invites-create-multiple.json
      x-content-type: application/json
      x-accepts: application/json
  /notifications.json:
    get:
      operationId: Notifications_getUserNotifications
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsGetUserNotificationsResponse'
          description: notifications
      summary: Get the notifications that belong to the current user
      tags:
      - Notifications
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--notifications.json
      x-accepts: application/json
  /notifications/mark-read.json:
    put:
      operationId: Notifications_markAsRead
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationsMarkAsReadRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationsMarkAsReadResponse'
          description: notifications marked read
      summary: Mark notifications as read
      tags:
      - Notifications
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--notifications-mark-read.json
      x-content-type: application/json
      x-accepts: application/json
  /posts.json:
    get:
      operationId: Posts_listLatestPostsAcrossTopics
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      - description: Load posts with an id lower than this value. Useful for pagination.
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostsListLatestPostsAcrossTopicsResponse'
          description: latest posts
      summary: List latest posts across topics
      tags:
      - Posts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--posts.json
      x-accepts: application/json
    post:
      operationId: Posts_createTopicPostMessage
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostsCreateTopicPostMessageRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostsCreateTopicPostMessageResponse'
          description: post created
      summary: "Creates a new topic, a new post, or a private message"
      tags:
      - Posts
      - Topics
      - Private Messages
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--posts.json
      x-content-type: application/json
      x-accepts: application/json
  /posts/{id}.json:
    delete:
      operationId: Posts_deleteSinglePost
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostsDeleteSinglePostRequest'
      responses:
        "200":
          description: success response
      summary: delete a single post
      tags:
      - Posts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--posts-id.json
      x-content-type: application/json
      x-accepts: application/json
    get:
      description: |
        This endpoint can be used to get the number of likes on a post using the
        `actions_summary` property in the response. `actions_summary` responses
        with the id of `2` signify a `like`. If there are no `actions_summary`
        items with the id of `2`, that means there are 0 likes. Other ids likely
        refer to various different flag types.
      operationId: Posts_getSinglePostLikes
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostsGetSinglePostLikesResponse'
          description: single post
      summary: Retrieve a single post
      tags:
      - Posts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--posts-id.json
      x-accepts: application/json
    put:
      operationId: Posts_updateSinglePostJson
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostsUpdateSinglePostJsonRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostsUpdateSinglePostJsonResponse'
          description: post updated
      summary: Update a single post
      tags:
      - Posts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--posts-id.json
      x-content-type: application/json
      x-accepts: application/json
  /posts/{id}/replies.json:
    get:
      operationId: Posts_listRepliesToPost
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostsListRepliesToPostResponse'
          description: post replies
      summary: List replies to a post
      tags:
      - Posts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--posts-id-replies.json
      x-accepts: application/json
  /posts/{id}/locked.json:
    put:
      operationId: Posts_lockPostAction
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostsLockPostActionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostsLockPostActionResponse'
          description: post updated
      summary: Lock a post from being edited
      tags:
      - Posts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--posts-id-locked.json
      x-content-type: application/json
      x-accepts: application/json
  /post_actions.json:
    post:
      operationId: Posts_likePostAction
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostsLikePostActionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostsLikePostActionResponse'
          description: post updated
      summary: Like a post and other actions
      tags:
      - Posts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--post_actions.json
      x-content-type: application/json
      x-accepts: application/json
  /topics/private-messages/{username}.json:
    get:
      operationId: PrivateMessages_listForUser
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateMessagesListForUserResponse'
          description: private messages
      summary: Get a list of private messages for a user
      tags:
      - Private Messages
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--topics-private-messages-username.json
      x-accepts: application/json
  /topics/private-messages-sent/{username}.json:
    get:
      operationId: PrivateMessages_listSentForUser
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateMessagesListSentForUserResponse'
          description: private messages
      summary: Get a list of private messages sent for a user
      tags:
      - Private Messages
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--topics-private-messages-sent-username.json
      x-accepts: application/json
  /search.json:
    get:
      operationId: Search_termResults
      parameters:
      - description: |
          The query string needs to be url encoded and is made up of the following options:
          - Search term. This is just a string. Usually it would be the first item in the query.
          - `@<username>`: Use the `@` followed by the username to specify posts by this user.
          - `#<category>`: Use the `#` followed by the category slug to search within this category.
          - `tags:`: `api,solved` or for posts that have all the specified tags `api+solved`.
          - `before:`: `yyyy-mm-dd`
          - `after:`: `yyyy-mm-dd`
          - `order:`: `latest`, `likes`, `views`, `latest_topic`
          - `assigned:`: username (without `@`)
          - `in:`: `title`, `likes`, `personal`, `messages`, `seen`, `unseen`, `posted`, `created`, `watching`, `tracking`, `bookmarks`, `assigned`, `unassigned`, `first`, `pinned`, `wiki`
          - `with:`: `images`
          - `status:`: `open`, `closed`, `public`, `archived`, `noreplies`, `single_user`, `solved`, `unsolved`
          - `group:`: group_name or group_id
          - `group_messages:`: group_name or group_id
          - `min_posts:`: 1
          - `max_posts:`: 10
          - `min_views:`: 1
          - `max_views:`: 10

          If you are using cURL you can use the `-G` and the `--data-urlencode` flags to encode the query:

          ```
          curl -i -sS -X GET -G "http://localhost:4200/search.json" \
          --data-urlencode 'q=wordpress @scossar #fun after:2020-01-01'
          ```
        example: |-
          api @blake #support tags:api after:2021-06-04 in:unseen in:open
          order:latest_topic
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
        x-konfig-original-example: |-
          api @blake #support tags:api after:2021-06-04 in:unseen in:open
          order:latest_topic
      - example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
        x-konfig-original-example: 1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchTermResultsResponse'
          description: success response
      summary: Search for a term
      tags:
      - Search
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--search.json
      x-accepts: application/json
  /site.json:
    get:
      description: Can be used to fetch all categories and subcategories
      operationId: Site_getCategoriesAndSubcategories
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteGetCategoriesAndSubcategoriesResponse'
          description: success response
      summary: Get site info
      tags:
      - Site
      - Categories
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--site.json
      x-accepts: application/json
  /tag_groups.json:
    get:
      operationId: Tags_getTagGroups
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsGetTagGroupsResponse'
          description: tags
      summary: Get a list of tag groups
      tags:
      - Tags
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tag_groups.json
      x-accepts: application/json
    post:
      operationId: Tags_createTagGroup
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsCreateTagGroupRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsCreateTagGroupResponse'
          description: tag group created
      summary: Creates a tag group
      tags:
      - Tags
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--tag_groups.json
      x-content-type: application/json
      x-accepts: application/json
  /tag_groups/{id}.json:
    get:
      operationId: Tags_getSingleTagGroup
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsGetSingleTagGroupResponse'
          description: notifications
      summary: Get a single tag group
      tags:
      - Tags
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tag_groups-id.json
      x-accepts: application/json
    put:
      operationId: Tags_updateTagGroup
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsUpdateTagGroupRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsUpdateTagGroupResponse'
          description: Tag group updated
      summary: Update tag group
      tags:
      - Tags
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--tag_groups-id.json
      x-content-type: application/json
      x-accepts: application/json
  /tags.json:
    get:
      operationId: Tags_list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsListResponse'
          description: notifications
      summary: Get a list of tags
      tags:
      - Tags
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tags.json
      x-accepts: application/json
  /tag/{name}.json:
    get:
      operationId: Tags_getSpecificTag
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsGetSpecificTagResponse'
          description: notifications
      summary: Get a specific tag
      tags:
      - Tags
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tag-name.json
      x-accepts: application/json
  /t/{id}/posts.json:
    get:
      operationId: Topics_getSpecificPosts
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicsGetSpecificPostsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicsGetSpecificPostsResponse'
          description: specific posts
      summary: Get specific posts from a topic
      tags:
      - Topics
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--t-id-posts.json
      x-content-type: application/json
      x-accepts: application/json
  /t/{id}.json:
    delete:
      operationId: Topics_removeTopicById
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: specific posts
      summary: Remove a topic
      tags:
      - Topics
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--t-id.json
      x-accepts: application/json
    get:
      operationId: Topics_getSingleTopic
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicsGetSingleTopicResponse'
          description: specific posts
      summary: Get a single topic
      tags:
      - Topics
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--t-id.json
      x-accepts: application/json
  /t/-/{id}.json:
    put:
      operationId: Topics_updateTopicByIdJson
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicsUpdateTopicByIdJsonRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicsUpdateTopicByIdJsonResponse'
          description: topic updated
      summary: Update a topic
      tags:
      - Topics
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--t---id.json
      x-content-type: application/json
      x-accepts: application/json
  /t/{id}/invite.json:
    post:
      operationId: Topics_sendInviteToTopic
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicsSendInviteToTopicRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicsSendInviteToTopicResponse'
          description: topic updated
      summary: Invite to topic
      tags:
      - Topics
      - Invites
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--t-id-invite.json
      x-content-type: application/json
      x-accepts: application/json
  /t/{id}/bookmark.json:
    put:
      operationId: Topics_updateBookmark
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: topic updated
      summary: Bookmark topic
      tags:
      - Topics
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--t-id-bookmark.json
      x-accepts: application/json
  /t/{id}/status.json:
    put:
      operationId: Topics_updateStatusOfTopic
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicsUpdateStatusOfTopicRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicsUpdateStatusOfTopicResponse'
          description: topic updated
      summary: Update the status of a topic
      tags:
      - Topics
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--t-id-status.json
      x-content-type: application/json
      x-accepts: application/json
  /latest.json:
    get:
      operationId: Topics_getLatestTopics
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          Enum: `default`, `created`, `activity`, `views`, `posts`, `category`,
          `likes`, `op_likes`, `posters`
        explode: true
        in: query
        name: order
        required: false
        schema:
          type: string
        style: form
      - description: "Defaults to `desc`, add `ascending=true` to sort asc"
        explode: true
        in: query
        name: ascending
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicsGetLatestTopicsResponse'
          description: topic updated
      summary: Get the latest topics
      tags:
      - Topics
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--latest.json
      x-accepts: application/json
  /top.json:
    get:
      operationId: Topics_getTopTopicsByPeriod
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      - description: "Enum: `all`, `yearly`, `quarterly`, `monthly`, `weekly`, `daily`"
        explode: true
        in: query
        name: period
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicsGetTopTopicsByPeriodResponse'
          description: response
      summary: Get the top topics filtered by period
      tags:
      - Topics
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--top.json
      x-accepts: application/json
  /t/{id}/notifications.json:
    post:
      operationId: Topics_setNotificationLevel
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicsSetNotificationLevelRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicsSetNotificationLevelResponse'
          description: topic updated
      summary: Set notification level
      tags:
      - Topics
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--t-id-notifications.json
      x-content-type: application/json
      x-accepts: application/json
  /t/{id}/change-timestamp.json:
    put:
      operationId: Topics_updateTimestampJson
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicsUpdateTimestampJsonRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicsUpdateTimestampJsonResponse'
          description: topic updated
      summary: Update topic timestamp
      tags:
      - Topics
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--t-id-change-timestamp.json
      x-content-type: application/json
      x-accepts: application/json
  /t/{id}/timer.json:
    post:
      operationId: Topics_createTopicTimer
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicsCreateTopicTimerRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicsCreateTopicTimerResponse'
          description: topic updated
      summary: Create topic timer
      tags:
      - Topics
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--t-id-timer.json
      x-content-type: application/json
      x-accepts: application/json
  /t/external_id/{external_id}.json:
    get:
      operationId: Topics_getByExternalId
      parameters:
      - explode: false
        in: path
        name: external_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          description: "redirects to /t/{topic_id}.json"
      summary: Get topic by external_id
      tags:
      - Topics
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--t-external_id-external_id.json
      x-accepts: application/json
  /uploads.json:
    post:
      operationId: Uploads_createNewUpload
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadsCreateNewUploadRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadsCreateNewUploadResponse'
          description: file uploaded
      summary: Creates an upload
      tags:
      - Uploads
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--uploads.json
      x-content-type: multipart/form-data
      x-accepts: application/json
  /uploads/generate-presigned-put.json:
    post:
      description: |+
        Direct external uploads bypass the usual method of creating uploads
        via the POST /uploads route, and upload directly to an external provider,
        which by default is S3. This route begins the process, and will return
        a unique identifier for the external upload as well as a presigned URL
        which is where the file binary blob should be uploaded to.

        Once the upload is complete to the external service, you must call the
        POST /complete-external-upload route using the unique identifier returned
        by this route, which will create any required Upload record in the Discourse
        database and also move file from its temporary location to the final
        destination in the external storage service.

        You must have the correct permissions and CORS settings configured in your
        external provider. We support AWS S3 as the default. See:

        https://meta.discourse.org/t/-/210469#s3-multipart-direct-uploads-4.

        An external file store must be set up and `enable_direct_s3_uploads` must
        be set to true for this endpoint to function.

      operationId: Uploads_initiateDirectExternalUpload
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadsInitiateDirectExternalUploadRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadsInitiateDirectExternalUploadResponse'
          description: external upload initialized
      summary: Initiates a direct external upload
      tags:
      - Uploads
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--uploads-generate-presigned-put.json
      x-content-type: application/json
      x-accepts: application/json
  /uploads/complete-external-upload.json:
    post:
      description: |+
        Completes an external upload initialized with /get-presigned-put. The
        file will be moved from its temporary location in external storage to
        a final destination in the S3 bucket. An Upload record will also be
        created in the database in most cases.

        If a sha1-checksum was provided in the initial request it will also
        be compared with the uploaded file in storage to make sure the same
        file was uploaded. The file size will be compared for the same reason.

        You must have the correct permissions and CORS settings configured in your
        external provider. We support AWS S3 as the default. See:

        https://meta.discourse.org/t/-/210469#s3-multipart-direct-uploads-4.

        An external file store must be set up and `enable_direct_s3_uploads` must
        be set to true for this endpoint to function.

      operationId: Uploads_completeExternalUpload
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadsCompleteExternalUploadRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadsCompleteExternalUploadResponse'
          description: external upload initialized
      summary: Completes a direct external upload
      tags:
      - Uploads
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--uploads-complete-external-upload.json
      x-content-type: application/json
      x-accepts: application/json
  /uploads/create-multipart.json:
    post:
      description: |+
        Creates a multipart upload in the external storage provider, storing
        a temporary reference to the external upload similar to /get-presigned-put.

        You must have the correct permissions and CORS settings configured in your
        external provider. We support AWS S3 as the default. See:

        https://meta.discourse.org/t/-/210469#s3-multipart-direct-uploads-4.

        An external file store must be set up and `enable_direct_s3_uploads` must
        be set to true for this endpoint to function.

      operationId: Uploads_createMultipartExternalUpload
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadsCreateMultipartExternalUploadRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadsCreateMultipartExternalUploadResponse'
          description: external upload initialized
      summary: Creates a multipart external upload
      tags:
      - Uploads
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--uploads-create-multipart.json
      x-content-type: application/json
      x-accepts: application/json
  /uploads/batch-presign-multipart-parts.json:
    post:
      description: |+
        Multipart uploads are uploaded in chunks or parts to individual presigned
        URLs, similar to the one generated by /generate-presigned-put. The part
        numbers provided must be between 1 and 10000. The total number of parts
        will depend on the chunk size in bytes that you intend to use to upload
        each chunk. For example a 12MB file may have 2 5MB chunks and a final
        2MB chunk, for part numbers 1, 2, and 3.

        This endpoint will return a presigned URL for each part number provided,
        which you can then use to send PUT requests for the binary chunk corresponding
        to that part. When the part is uploaded, the provider should return an
        ETag for the part, and this should be stored along with the part number,
        because this is needed to complete the multipart upload.

        You must have the correct permissions and CORS settings configured in your
        external provider. We support AWS S3 as the default. See:

        https://meta.discourse.org/t/-/210469#s3-multipart-direct-uploads-4.

        An external file store must be set up and `enable_direct_s3_uploads` must
        be set to true for this endpoint to function.

      operationId: Uploads_generatePresignedUrlsForMultipartParts
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadsGeneratePresignedUrlsForMultipartPartsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadsGeneratePresignedUrlsForMultipartPartsResponse'
          description: external upload initialized
      summary: Generates batches of presigned URLs for multipart parts
      tags:
      - Uploads
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--uploads-batch-presign-multipart-parts.json
      x-content-type: application/json
      x-accepts: application/json
  /uploads/abort-multipart.json:
    post:
      description: |+
        This endpoint aborts the multipart upload initiated with /create-multipart.
        This should be used when cancelling the upload. It does not matter if parts
        were already uploaded into the external storage provider.

        You must have the correct permissions and CORS settings configured in your
        external provider. We support AWS S3 as the default. See:

        https://meta.discourse.org/t/-/210469#s3-multipart-direct-uploads-4.

        An external file store must be set up and `enable_direct_s3_uploads` must
        be set to true for this endpoint to function.

      operationId: Uploads_abortMultipartUpload
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadsAbortMultipartUploadRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadsAbortMultipartUploadResponse'
          description: external upload initialized
      summary: Abort multipart upload
      tags:
      - Uploads
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--uploads-abort-multipart.json
      x-content-type: application/json
      x-accepts: application/json
  /uploads/complete-multipart.json:
    post:
      description: |+
        Completes the multipart upload in the external store, and copies the
        file from its temporary location to its final location in the store.
        All of the parts must have been uploaded to the external storage provider.
        An Upload record will be completed in most cases once the file is copied
        to its final location.

        You must have the correct permissions and CORS settings configured in your
        external provider. We support AWS S3 as the default. See:

        https://meta.discourse.org/t/-/210469#s3-multipart-direct-uploads-4.

        An external file store must be set up and `enable_direct_s3_uploads` must
        be set to true for this endpoint to function.

      operationId: Uploads_completeMultipartUpload
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadsCompleteMultipartUploadRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadsCompleteMultipartUploadResponse'
          description: external upload initialized
      summary: Complete multipart upload
      tags:
      - Uploads
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--uploads-complete-multipart.json
      x-content-type: application/json
      x-accepts: application/json
  /user-badges/{username}.json:
    get:
      operationId: Badges_listUserBadges
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadgesListUserBadgesResponse'
          description: success response
      summary: List badges for a user
      tags:
      - Badges
      - Users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--user-badges-username.json
      x-accepts: application/json
  /users.json:
    post:
      operationId: Users_createUser
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersCreateUserRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersCreateUserResponse'
          description: user created
      summary: Creates a user
      tags:
      - Users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--users.json
      x-content-type: application/json
      x-accepts: application/json
  /u/{username}.json:
    get:
      operationId: Users_getUserByUsername
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetUserByUsernameResponse'
          description: user response
      summary: Get a single user by username
      tags:
      - Users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--u-username.json
      x-accepts: application/json
    put:
      operationId: Users_updateUserDetails
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersUpdateUserDetailsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersUpdateUserDetailsResponse'
          description: user updated
      summary: Update a user
      tags:
      - Users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--u-username.json
      x-content-type: application/json
      x-accepts: application/json
  /u/by-external/{external_id}.json:
    get:
      operationId: Users_getUserByExternalId
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: external_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetUserByExternalIdResponse'
          description: user response
      summary: Get a user by external_id
      tags:
      - Users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--u-by-external-external_id.json
      x-accepts: application/json
  /u/by-external/{provider}/{external_id}.json:
    get:
      operationId: Users_getIdentityProviderExternalId
      parameters:
      - explode: false
        in: header
        name: Api-Key
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Api-Username
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          Authentication provider name. Can be found in the provider callback
          URL: `/auth/{provider}/callback`
        explode: false
        in: path
        name: provider
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: external_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetIdentityProviderExternalIdResponse'
          description: user response
      summary: Get a user by identity provider external ID
      tags:
      - Users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--u-by-external-provider-external_id.json
      x-accepts: application/json
  /u/{username}/preferences/avatar/pick.json:
    put:
      operationId: Users_updateAvatar
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersUpdateAvatarRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersUpdateAvatarResponse'
          description: avatar updated
      summary: Update avatar
      tags:
      - Users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--u-username-preferences-avatar-pick.json
      x-content-type: application/json
      x-accepts: application/json
  /u/{username}/preferences/email.json:
    put:
      operationId: Users_updateEmailPreferences
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersUpdateEmailPreferencesRequest'
      responses:
        "200":
          description: email updated
      summary: Update email
      tags:
      - Users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--u-username-preferences-email.json
      x-content-type: application/json
      x-accepts: application/json
  /u/{username}/preferences/username.json:
    put:
      operationId: Users_updatePreferencesJson
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersUpdatePreferencesJsonRequest'
      responses:
        "200":
          description: username updated
      summary: Update username
      tags:
      - Users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--u-username-preferences-username.json
      x-content-type: application/json
      x-accepts: application/json
  /directory_items.json:
    get:
      operationId: Users_listPublicUser
      parameters:
      - explode: true
        in: query
        name: period
        required: true
        schema:
          enum:
          - daily
          - weekly
          - monthly
          - quarterly
          - yearly
          - all
          type: string
        style: form
      - explode: true
        in: query
        name: order
        required: true
        schema:
          enum:
          - likes_received
          - likes_given
          - topic_count
          - post_count
          - topics_entered
          - posts_read
          - days_visited
          type: string
        style: form
      - explode: true
        in: query
        name: asc
        required: false
        schema:
          enum:
          - "true"
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersListPublicUserResponse'
          description: directory items response
      summary: Get a public list of users
      tags:
      - Users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--directory_items.json
      x-accepts: application/json
  /admin/users/{id}.json:
    delete:
      operationId: Users_deleteUserByIdJson
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersDeleteUserByIdJsonRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersDeleteUserByIdJsonResponse'
          description: response
      summary: Delete a user
      tags:
      - Users
      - Admin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--admin-users-id.json
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: Users_getUserByIdJson
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetUserByIdJsonResponse'
          description: response
      summary: Get a user by id
      tags:
      - Users
      - Admin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--admin-users-id.json
      x-accepts: application/json
  /admin/users/{id}/activate.json:
    put:
      operationId: Users_activateUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersActivateUserResponse'
          description: response
      summary: Activate a user
      tags:
      - Users
      - Admin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--admin-users-id-activate.json
      x-accepts: application/json
  /admin/users/{id}/deactivate.json:
    put:
      operationId: Users_deactivateUser
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersDeactivateUserResponse'
          description: response
      summary: Deactivate a user
      tags:
      - Users
      - Admin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--admin-users-id-deactivate.json
      x-accepts: application/json
  /admin/users/{id}/suspend.json:
    put:
      operationId: Users_suspendByIdJson
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersSuspendByIdJsonRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersSuspendByIdJsonResponse'
          description: response
      summary: Suspend a user
      tags:
      - Users
      - Admin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--admin-users-id-suspend.json
      x-content-type: application/json
      x-accepts: application/json
  /admin/users/{id}/silence.json:
    put:
      operationId: Users_silenceById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersSilenceByIdRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersSilenceByIdResponse'
          description: response
      summary: Silence a user
      tags:
      - Users
      - Admin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--admin-users-id-silence.json
      x-content-type: application/json
      x-accepts: application/json
  /admin/users/{id}/anonymize.json:
    put:
      operationId: Users_anonymizeByIdJson
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAnonymizeByIdJsonResponse'
          description: response
      summary: Anonymize a user
      tags:
      - Users
      - Admin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--admin-users-id-anonymize.json
      x-accepts: application/json
  /admin/users/{id}/log_out.json:
    post:
      operationId: Users_logOutUserAction
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersLogOutUserActionResponse'
          description: response
      summary: Log a user out
      tags:
      - Users
      - Admin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--admin-users-id-log_out.json
      x-accepts: application/json
  /user_avatar/{username}/refresh_gravatar.json:
    post:
      operationId: Users_refreshGravatarPost
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRefreshGravatarPostResponse'
          description: response
      summary: Refresh gravatar
      tags:
      - Users
      - Admin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--user_avatar-username-refresh_gravatar.json
      x-accepts: application/json
  /admin/users/list/{flag}.json:
    get:
      operationId: Users_getListOfUsers
      parameters:
      - explode: false
        in: path
        name: flag
        required: true
        schema:
          enum:
          - active
          - new
          - staff
          - suspended
          - blocked
          - suspect
          type: string
        style: simple
      - explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - created
          - last_emailed
          - seen
          - username
          - email
          - trust_level
          - days_visited
          - posts_read
          - topics_viewed
          - posts
          - read_time
          type: string
        style: form
      - explode: true
        in: query
        name: asc
        required: false
        schema:
          enum:
          - "true"
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          type: integer
        style: form
      - description: |-
          Include user email addresses in response. These requests will
          be logged in the staff action logs.
        explode: true
        in: query
        name: show_emails
        required: false
        schema:
          type: boolean
        style: form
      - description: Include user stats information
        explode: true
        in: query
        name: stats
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter to the user with this email address
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - description: Filter to users with this IP address
        explode: true
        in: query
        name: ip
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetListOfUsersResponse'
          description: response
      summary: Get a list of users
      tags:
      - Users
      - Admin
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--admin-users-list-flag.json
      x-accepts: application/json
  /user_actions.json:
    get:
      operationId: Users_listUserActions
      parameters:
      - explode: true
        in: query
        name: offset
        required: true
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersListUserActionsResponse'
          description: response
      summary: Get a list of user actions
      tags:
      - Users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--user_actions.json
      x-accepts: application/json
  /session/forgot_password.json:
    post:
      operationId: Users_sendPasswordResetEmail
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersSendPasswordResetEmailRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersSendPasswordResetEmailResponse'
          description: success response
      summary: Send password reset email
      tags:
      - Users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--session-forgot_password.json
      x-content-type: application/json
      x-accepts: application/json
  /users/password-reset/{token}.json:
    put:
      operationId: Users_changePasswordAction
      parameters:
      - explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersChangePasswordActionRequest'
      responses:
        "200":
          description: success response
      summary: Change password
      tags:
      - Users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--users-password-reset-token.json
      x-content-type: application/json
      x-accepts: application/json
  /u/{username}/emails.json:
    get:
      operationId: Users_getEmails
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetEmailsResponse'
          description: success response
      summary: Get email addresses belonging to a user
      tags:
      - Users
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--u-username-emails.json
      x-accepts: application/json
components:
  schemas:
    BackupsCreateBackupRequestRequest:
      additionalProperties: false
      example:
        with_uploads: true
      properties:
        with_uploads:
          type: boolean
      required:
      - with_uploads
      type: object
    BadgesCreateBadgeRequest:
      additionalProperties: false
      example:
        badge_type_id: 0
        name: name
      properties:
        name:
          description: The name for the new badge.
          type: string
        badge_type_id:
          description: |-
            The ID for the badge type. 1 for Gold, 2 for Silver,
            3 for Bronze.
          type: integer
      required:
      - badge_type_id
      - name
      type: object
    BadgesUpdateBadgeByIdJsonRequest:
      additionalProperties: false
      example:
        badge_type_id: 0
        name: name
      properties:
        name:
          description: The name for the new badge.
          type: string
        badge_type_id:
          description: |-
            The ID for the badge type. 1 for Gold, 2 for Silver,
            3 for Bronze.
          type: integer
      required:
      - badge_type_id
      - name
      type: object
    CategoriesCreateCategoryRequestRequest:
      additionalProperties: false
      example:
        parent_category_id: 0
        topic_featured_links_allowed: true
        color: 49d9e9
        form_template_ids:
        - ""
        - ""
        permissions:
          everyone: 1
          staff: 6
        name: name
        allow_badges: true
        text_color: f0fcfd
        search_priority: 1
        slug: slug
      properties:
        name:
          type: string
        color:
          example: 49d9e9
          type: string
          x-konfig-original-example: 49d9e9
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CategoriesCreateCategoryRequestRequest-properties-color
        text_color:
          example: f0fcfd
          type: string
          x-konfig-original-example: f0fcfd
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CategoriesCreateCategoryRequestRequest-properties-text_color
        parent_category_id:
          type: integer
        allow_badges:
          type: boolean
        slug:
          type: string
        topic_featured_links_allowed:
          type: boolean
        permissions:
          $ref: '#/components/schemas/CategoriesCreateCategoryRequestRequest_permissions'
        search_priority:
          type: integer
        form_template_ids:
          items: {}
          type: array
      required:
      - name
      type: object
    CategoriesUpdateCategoryByIdJsonRequest:
      additionalProperties: false
      example:
        parent_category_id: 0
        topic_featured_links_allowed: true
        color: 49d9e9
        form_template_ids:
        - ""
        - ""
        permissions:
          everyone: 1
          staff: 6
        name: name
        allow_badges: true
        text_color: f0fcfd
        search_priority: 1
        slug: slug
      properties:
        name:
          type: string
        color:
          example: 49d9e9
          type: string
          x-konfig-original-example: 49d9e9
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CategoriesUpdateCategoryByIdJsonRequest-properties-color
        text_color:
          example: f0fcfd
          type: string
          x-konfig-original-example: f0fcfd
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CategoriesUpdateCategoryByIdJsonRequest-properties-text_color
        parent_category_id:
          type: integer
        allow_badges:
          type: boolean
        slug:
          type: string
        topic_featured_links_allowed:
          type: boolean
        permissions:
          $ref: '#/components/schemas/CategoriesUpdateCategoryByIdJsonRequest_permissions'
        search_priority:
          type: integer
        form_template_ids:
          items: {}
          type: array
      required:
      - name
      type: object
    GroupsCreateNewGroupRequest:
      additionalProperties: false
      example:
        group:
          automatic_membership_email_domains: automatic_membership_email_domains
          regular_category_ids:
          - 5
          - 5
          tracking_category_ids:
          - 7
          - 7
          flair_icon: flair_icon
          public_admission: true
          primary_group: true
          bio_raw: bio_raw
          public_exit: true
          flair_upload_id: 6
          owner_usernames: owner_usernames
          flair_bg_color: flair_bg_color
          watching_category_ids:
          - 2
          - 2
          full_name: full_name
          default_notification_level: 1
          muted_category_ids:
          - 5
          - 5
          name: name
          visibility_level: 0
          usernames: usernames
          watching_first_post_category_ids:
          - 9
          - 9
      properties:
        group:
          $ref: '#/components/schemas/GroupsCreateNewGroupRequest_group'
      required:
      - group
      type: object
    GroupsUpdateGroupByIdJsonRequest:
      additionalProperties: false
      example:
        group:
          automatic_membership_email_domains: automatic_membership_email_domains
          regular_category_ids:
          - 5
          - 5
          tracking_category_ids:
          - 7
          - 7
          flair_icon: flair_icon
          public_admission: true
          primary_group: true
          bio_raw: bio_raw
          public_exit: true
          flair_upload_id: 6
          owner_usernames: owner_usernames
          flair_bg_color: flair_bg_color
          watching_category_ids:
          - 2
          - 2
          full_name: full_name
          default_notification_level: 1
          muted_category_ids:
          - 5
          - 5
          name: name
          visibility_level: 0
          usernames: usernames
          watching_first_post_category_ids:
          - 9
          - 9
      properties:
        group:
          $ref: '#/components/schemas/GroupsCreateNewGroupRequest_group'
      required:
      - group
      type: object
    GroupsRemoveMembersRequest:
      additionalProperties: false
      example:
        usernames: "username1,username2"
      properties:
        usernames:
          description: comma separated list
          example: "username1,username2"
          type: string
          x-konfig-original-example: "username1,username2"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GroupsRemoveMembersRequest-properties-usernames
      type: object
    GroupsAddMembersToGroupRequest:
      additionalProperties: false
      example:
        usernames: "username1,username2"
      properties:
        usernames:
          description: comma separated list
          example: "username1,username2"
          type: string
          x-konfig-original-example: "username1,username2"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GroupsAddMembersToGroupRequest-properties-usernames
      type: object
    InvitesCreateInviteRequest:
      example:
        skip_email: false
        custom_message: custom_message
        max_redemptions_allowed: 5
        expires_at: expires_at
        group_ids: "42,43"
        group_names: "foo,bar"
        topic_id: 0
        email: not-a-user-yet@example.com
      properties:
        email:
          description: required for email invites only
          example: not-a-user-yet@example.com
          type: string
          x-konfig-original-example: not-a-user-yet@example.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteRequest-properties-email
        skip_email:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteRequest-properties-skip_email
        custom_message:
          description: "optional, for email invites"
          type: string
        max_redemptions_allowed:
          default: 1
          description: "optional, for link invites"
          example: 5
          type: integer
          x-konfig-original-example: 5
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteRequest-properties-max_redemptions_allowed
        topic_id:
          type: integer
        group_ids:
          description: |-
            Optional, either this or `group_names`. Comma separated
            list for multiple ids.
          example: "42,43"
          type: string
          x-konfig-original-example: "42,43"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteRequest-properties-group_ids
        group_names:
          description: |-
            Optional, either this or `group_ids`. Comma separated
            list for multiple names.
          example: "foo,bar"
          type: string
          x-konfig-original-example: "foo,bar"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteRequest-properties-group_names
        expires_at:
          description: |-
            optional, if not supplied, the invite_expiry_days site
            setting is used
          type: string
      type: object
    InvitesCreateMultipleInvitesRequest:
      example:
        skip_email: false
        custom_message: custom_message
        max_redemptions_allowed: 5
        expires_at: expires_at
        group_ids: "42,43"
        group_names: "foo,bar"
        topic_id: 0
        email: "[\"not-a-user-yet-1@example.com\",\"not-a-user-yet-2@example.com\"\
          ]"
      properties:
        email:
          description: |-
            pass 1 email per invite to be generated. other properties
            will be shared by each invite.
          example: "[\"not-a-user-yet-1@example.com\",\"not-a-user-yet-2@example.com\"\
            ]"
          type: string
          x-konfig-original-example:
          - not-a-user-yet-1@example.com
          - not-a-user-yet-2@example.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesRequest-properties-email
        skip_email:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesRequest-properties-skip_email
        custom_message:
          description: "optional, for email invites"
          type: string
        max_redemptions_allowed:
          default: 1
          description: "optional, for link invites"
          example: 5
          type: integer
          x-konfig-original-example: 5
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesRequest-properties-max_redemptions_allowed
        topic_id:
          type: integer
        group_ids:
          description: |-
            Optional, either this or `group_names`. Comma separated
            list for multiple ids.
          example: "42,43"
          type: string
          x-konfig-original-example: "42,43"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesRequest-properties-group_ids
        group_names:
          description: |-
            Optional, either this or `group_ids`. Comma separated
            list for multiple names.
          example: "foo,bar"
          type: string
          x-konfig-original-example: "foo,bar"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesRequest-properties-group_names
        expires_at:
          description: |-
            optional, if not supplied, the invite_expiry_days site
            setting is used
          type: string
      type: object
    NotificationsMarkAsReadRequest:
      example:
        id: 0
      properties:
        id:
          description: |-
            (optional) Leave off to mark all notifications as
            read
          type: integer
      type: object
    PostsCreateTopicPostMessageRequest:
      additionalProperties: false
      example:
        target_recipients: "blake,sam"
        archetype: private_message
        embed_url: embed_url
        raw: raw
        target_usernames: target_usernames
        created_at: created_at
        external_id: external_id
        topic_id: 0
        title: title
        category: 6
        reply_to_post_number: 1
      properties:
        title:
          description: Required if creating a new topic or new private message.
          type: string
        raw:
          type: string
        topic_id:
          description: Required if creating a new post.
          type: integer
        category:
          description: |-
            Optional if creating a new topic, and ignored if creating
            a new post.
          type: integer
        target_recipients:
          description: "Required for private message, comma separated."
          example: "blake,sam"
          type: string
          x-konfig-original-example: "blake,sam"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PostsCreateTopicPostMessageRequest-properties-target_recipients
        target_usernames:
          deprecated: true
          description: Deprecated. Use target_recipients instead.
          type: string
        archetype:
          description: Required for new private message.
          example: private_message
          type: string
          x-konfig-original-example: private_message
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PostsCreateTopicPostMessageRequest-properties-archetype
        created_at:
          type: string
        reply_to_post_number:
          description: "Optional, the post number to reply to inside a topic."
          type: integer
        embed_url:
          description: |-
            Provide a URL from a remote system to associate a forum
            topic with that URL, typically for using Discourse as a comments
            system for an external blog.
          type: string
        external_id:
          description: |-
            Provide an external_id from a remote system to associate
            a forum topic with that id.
          type: string
      required:
      - raw
      type: object
    PostsDeleteSinglePostRequest:
      additionalProperties: false
      example:
        force_destroy: true
      properties:
        force_destroy:
          description: |-
            The `SiteSetting.can_permanently_delete` needs to be
            enabled first before this param can be used. Also this endpoint
            needs to be called first without `force_destroy` and then followed
            up with a second call 5 minutes later with `force_destroy` to
            permanently delete.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PostsDeleteSinglePostRequest-properties-force_destroy
      type: object
    PostsUpdateSinglePostJsonRequest:
      additionalProperties: false
      example:
        post:
          edit_reason: edit_reason
          raw: raw
      properties:
        post:
          $ref: '#/components/schemas/PostsUpdateSinglePostJsonRequest_post'
      type: object
    PostsLockPostActionRequest:
      example:
        locked: locked
      properties:
        locked:
          type: string
      required:
      - locked
      type: object
    PostsLikePostActionRequest:
      example:
        post_action_type_id: 6
        flag_topic: true
        id: 0
      properties:
        id:
          type: integer
        post_action_type_id:
          type: integer
        flag_topic:
          type: boolean
      required:
      - id
      - post_action_type_id
      type: object
    TagsCreateTagGroupRequest:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
    TagsUpdateTagGroupRequest:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    TopicsGetSpecificPostsRequest:
      example:
        post_ids[]: 0
      properties:
        post_ids[]:
          type: integer
      required:
      - "post_ids[]"
      type: object
    TopicsUpdateTopicByIdJsonRequest:
      example:
        topic:
          category_id: 0
          title: title
      properties:
        topic:
          $ref: '#/components/schemas/TopicsUpdateTopicByIdJsonRequest_topic'
      type: object
    TopicsSendInviteToTopicRequest:
      example:
        user: user
        email: email
      properties:
        user:
          type: string
        email:
          type: string
      type: object
    TopicsUpdateStatusOfTopicRequest:
      example:
        until: 2030-12-31
        enabled: "true"
        status: closed
      properties:
        status:
          enum:
          - closed
          - pinned
          - pinned_globally
          - archived
          - visible
          type: string
        enabled:
          enum:
          - "true"
          - "false"
          type: string
        until:
          description: Only required for `pinned` and `pinned_globally`
          example: 2030-12-31
          type: string
          x-konfig-original-example: 2030-12-31
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TopicsUpdateStatusOfTopicRequest-properties-until
      required:
      - enabled
      - status
      type: object
    TopicsSetNotificationLevelRequest:
      example:
        notification_level: "0"
      properties:
        notification_level:
          enum:
          - "0"
          - "1"
          - "2"
          - "3"
          type: string
      required:
      - notification_level
      type: object
    TopicsUpdateTimestampJsonRequest:
      example:
        timestamp: "1594291380"
      properties:
        timestamp:
          example: "1594291380"
          type: string
          x-konfig-original-example: "1594291380"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TopicsUpdateTimestampJsonRequest-properties-timestamp
      required:
      - timestamp
      type: object
    TopicsCreateTopicTimerRequest:
      example:
        category_id: 0
        status_type: status_type
        time: ""
        based_on_last_post: true
      properties:
        time:
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TopicsCreateTopicTimerRequest-properties-time
        status_type:
          type: string
        based_on_last_post:
          type: boolean
        category_id:
          type: integer
      type: object
    UploadsCreateNewUploadRequest:
      additionalProperties: false
      properties:
        type:
          enum:
          - avatar
          - profile_background
          - card_background
          - custom_emoji
          - composer
          type: string
        user_id:
          description: required if uploading an avatar
          type: integer
        synchronous:
          description: Use this flag to return an id and url
          type: boolean
        file:
          format: binary
          type: string
      required:
      - type
      type: object
    UploadsInitiateDirectExternalUploadRequest:
      additionalProperties: false
      example:
        metadata:
          sha1-checksum: sha1-checksum
        file_name: IMG_2021.jpeg
        type: avatar
        file_size: 4096
      properties:
        type:
          enum:
          - avatar
          - profile_background
          - card_background
          - custom_emoji
          - composer
          type: string
        file_name:
          example: IMG_2021.jpeg
          type: string
          x-konfig-original-example: IMG_2021.jpeg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsInitiateDirectExternalUploadRequest-properties-file_name
        file_size:
          description: File size should be represented in bytes.
          example: 4096
          type: integer
          x-konfig-original-example: 4096
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsInitiateDirectExternalUploadRequest-properties-file_size
        metadata:
          $ref: '#/components/schemas/UploadsInitiateDirectExternalUploadRequest_metadata'
      required:
      - file_name
      - file_size
      - type
      type: object
    UploadsCompleteExternalUploadRequest:
      additionalProperties: false
      example:
        for_private_message: "true"
        unique_identifier: 66e86218-80d9-4bda-b4d5-2b6def968705
        pasted: "true"
        for_site_setting: "true"
      properties:
        unique_identifier:
          description: |-
            The unique identifier returned in the original /generate-presigned-put
            request.
          example: 66e86218-80d9-4bda-b4d5-2b6def968705
          type: string
          x-konfig-original-example: 66e86218-80d9-4bda-b4d5-2b6def968705
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCompleteExternalUploadRequest-properties-unique_identifier
        for_private_message:
          description: |-
            Optionally set this to true if the upload is for a
            private message.
          example: "true"
          type: string
          x-konfig-original-example: "true"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCompleteExternalUploadRequest-properties-for_private_message
        for_site_setting:
          description: |-
            Optionally set this to true if the upload is for a
            site setting.
          example: "true"
          type: string
          x-konfig-original-example: "true"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCompleteExternalUploadRequest-properties-for_site_setting
        pasted:
          description: |-
            Optionally set this to true if the upload was pasted
            into the upload area. This will convert PNG files to JPEG.
          example: "true"
          type: string
          x-konfig-original-example: "true"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCompleteExternalUploadRequest-properties-pasted
      required:
      - unique_identifier
      type: object
    UploadsCreateMultipartExternalUploadRequest:
      additionalProperties: false
      example:
        upload_type: avatar
        metadata:
          sha1-checksum: sha1-checksum
        file_name: IMG_2021.jpeg
        file_size: 4096
      properties:
        upload_type:
          enum:
          - avatar
          - profile_background
          - card_background
          - custom_emoji
          - composer
          type: string
        file_name:
          example: IMG_2021.jpeg
          type: string
          x-konfig-original-example: IMG_2021.jpeg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCreateMultipartExternalUploadRequest-properties-file_name
        file_size:
          description: File size should be represented in bytes.
          example: 4096
          type: integer
          x-konfig-original-example: 4096
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCreateMultipartExternalUploadRequest-properties-file_size
        metadata:
          $ref: '#/components/schemas/UploadsInitiateDirectExternalUploadRequest_metadata'
      required:
      - file_name
      - file_size
      - upload_type
      type: object
    UploadsGeneratePresignedUrlsForMultipartPartsRequest:
      additionalProperties: false
      example:
        unique_identifier: 66e86218-80d9-4bda-b4d5-2b6def968705
        part_numbers:
        - 1
        - 2
        - 3
      properties:
        part_numbers:
          description: |-
            The part numbers to generate the presigned URLs for,
            must be between 1 and 10000.
          example:
          - 1
          - 2
          - 3
          type: array
          x-konfig-original-example:
          - 1
          - 2
          - 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsGeneratePresignedUrlsForMultipartPartsRequest-properties-part_numbers
        unique_identifier:
          description: |-
            The unique identifier returned in the original /create-multipart
            request.
          example: 66e86218-80d9-4bda-b4d5-2b6def968705
          type: string
          x-konfig-original-example: 66e86218-80d9-4bda-b4d5-2b6def968705
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsGeneratePresignedUrlsForMultipartPartsRequest-properties-unique_identifier
      required:
      - part_numbers
      - unique_identifier
      type: object
    UploadsAbortMultipartUploadRequest:
      additionalProperties: false
      example:
        external_upload_identifier: 84x83tmxy398t3y._Q_z8CoJYVr69bE6D7f8J6Oo0434QquLFoYdGVerWFx9X5HDEI_TP_95c34n853495x35345394.d.ghQ
      properties:
        external_upload_identifier:
          description: |-
            The identifier of the multipart upload in the external
            storage provider. This is the multipart upload_id in AWS S3.
          example: 84x83tmxy398t3y._Q_z8CoJYVr69bE6D7f8J6Oo0434QquLFoYdGVerWFx9X5HDEI_TP_95c34n853495x35345394.d.ghQ
          type: string
          x-konfig-original-example: 84x83tmxy398t3y._Q_z8CoJYVr69bE6D7f8J6Oo0434QquLFoYdGVerWFx9X5HDEI_TP_95c34n853495x35345394.d.ghQ
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsAbortMultipartUploadRequest-properties-external_upload_identifier
      required:
      - external_upload_identifier
      type: object
    UploadsCompleteMultipartUploadRequest:
      additionalProperties: false
      example:
        unique_identifier: 66e86218-80d9-4bda-b4d5-2b6def968705
        parts:
        - part_number: 1
          etag: 0c376dcfcc2606f4335bbc732de93344
        - part_number: 2
          etag: 09ert8cfcc2606f4335bbc732de91122
      properties:
        unique_identifier:
          description: |-
            The unique identifier returned in the original /create-multipart
            request.
          example: 66e86218-80d9-4bda-b4d5-2b6def968705
          type: string
          x-konfig-original-example: 66e86218-80d9-4bda-b4d5-2b6def968705
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCompleteMultipartUploadRequest-properties-unique_identifier
        parts:
          description: |-
            All of the part numbers and their corresponding ETags
            that have been uploaded must be provided.
          example:
          - part_number: 1
            etag: 0c376dcfcc2606f4335bbc732de93344
          - part_number: 2
            etag: 09ert8cfcc2606f4335bbc732de91122
          type: array
          x-konfig-original-example:
          - part_number: 1
            etag: 0c376dcfcc2606f4335bbc732de93344
          - part_number: 2
            etag: 09ert8cfcc2606f4335bbc732de91122
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCompleteMultipartUploadRequest-properties-parts
      required:
      - parts
      - unique_identifier
      type: object
    UsersCreateUserRequest:
      additionalProperties: false
      example:
        password: password
        approved: true
        user_fields[1]: true
        name: name
        active: true
        external_ids: "{}"
        email: email
        username: username
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        username:
          type: string
        active:
          description: |-
            This param requires an api key in the request header
            or it will be ignored
          type: boolean
        approved:
          type: boolean
        user_fields[1]:
          type: boolean
        external_ids:
          type: object
      required:
      - email
      - name
      - password
      - username
      type: object
    UsersUpdateUserDetailsRequest:
      additionalProperties: false
      example:
        name: name
        external_ids: "{}"
      properties:
        name:
          type: string
        external_ids:
          type: object
      type: object
    UsersUpdateAvatarRequest:
      additionalProperties: false
      example:
        upload_id: 0
        type: uploaded
      properties:
        upload_id:
          type: integer
        type:
          enum:
          - uploaded
          - custom
          - gravatar
          - system
          type: string
      required:
      - type
      - upload_id
      type: object
    UsersUpdateEmailPreferencesRequest:
      additionalProperties: false
      example:
        email: email
      properties:
        email:
          format: email
          type: string
      required:
      - email
      type: object
    UsersUpdatePreferencesJsonRequest:
      additionalProperties: false
      example:
        new_username: new_username
      properties:
        new_username:
          type: string
      required:
      - new_username
      type: object
    UsersDeleteUserByIdJsonRequest:
      additionalProperties: false
      example:
        block_email: true
        block_urls: true
        block_ip: true
        delete_posts: true
      properties:
        delete_posts:
          type: boolean
        block_email:
          type: boolean
        block_urls:
          type: boolean
        block_ip:
          type: boolean
      type: object
    UsersSuspendByIdJsonRequest:
      additionalProperties: false
      example:
        suspend_until: 2121-02-22
        reason: reason
        message: message
        post_action: delete
      properties:
        suspend_until:
          example: 2121-02-22
          type: string
          x-konfig-original-example: 2121-02-22
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersSuspendByIdJsonRequest-properties-suspend_until
        reason:
          type: string
        message:
          description: Will send an email with this message when present
          type: string
        post_action:
          example: delete
          type: string
          x-konfig-original-example: delete
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersSuspendByIdJsonRequest-properties-post_action
      required:
      - reason
      - suspend_until
      type: object
    UsersSilenceByIdRequest:
      additionalProperties: false
      example:
        reason: reason
        silenced_till: 2022-06-01T08:00:00.000Z
        message: message
        post_action: delete
      properties:
        silenced_till:
          example: 2022-06-01T08:00:00.000Z
          type: string
          x-konfig-original-example: 2022-06-01T08:00:00.000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersSilenceByIdRequest-properties-silenced_till
        reason:
          type: string
        message:
          description: Will send an email with this message when present
          type: string
        post_action:
          example: delete
          type: string
          x-konfig-original-example: delete
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersSilenceByIdRequest-properties-post_action
      type: object
    UsersSendPasswordResetEmailRequest:
      additionalProperties: false
      example:
        login: login
      properties:
        login:
          type: string
      required:
      - login
      type: object
    UsersChangePasswordActionRequest:
      additionalProperties: false
      example:
        password: password
        username: username
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
      type: object
    BackupsListResponse:
      items:
        $ref: '#/components/schemas/BackupsListResponse_inner'
      minItems: 1
      type: array
      uniqueItems: true
      x-konfig-is-used-in-successful-response: true
    BackupsCreateBackupRequestResponse:
      additionalProperties: false
      example:
        success: OK
      properties:
        success:
          example: OK
          type: string
          x-konfig-original-example: OK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-BackupsCreateBackupRequestResponse-properties-success
      required:
      - success
      type: object
      x-konfig-is-used-in-successful-response: true
    BadgesListResponse:
      additionalProperties: false
      example:
        badges:
        - listable: true
          image_url: ""
          query: ""
          i18n_name: ""
          icon: icon
          description: description
          multiple_grant: true
          auto_revoke: true
          long_description: long_description
          trigger: ""
          target_posts: true
          enabled: true
          manually_grantable: true
          grant_count: 6
          system: true
          badge_type_id: 5
          badge_grouping_id: 1
          name: name
          allow_title: true
          id: 0
          show_posts: true
          slug: slug
        - listable: true
          image_url: ""
          query: ""
          i18n_name: ""
          icon: icon
          description: description
          multiple_grant: true
          auto_revoke: true
          long_description: long_description
          trigger: ""
          target_posts: true
          enabled: true
          manually_grantable: true
          grant_count: 6
          system: true
          badge_type_id: 5
          badge_grouping_id: 1
          name: name
          allow_title: true
          id: 0
          show_posts: true
          slug: slug
        badge_groupings:
        - system: true
          name: name
          description: ""
          id: 7
          position: 9
        - system: true
          name: name
          description: ""
          id: 7
          position: 9
        badge_types:
        - name: name
          id: 5
          sort_order: 2
        - name: name
          id: 5
          sort_order: 2
        admin_badges:
          badge_type_ids:
          - ""
          - ""
          protected_system_fields:
          - ""
          - ""
          triggers:
            user_change: 3
            trust_level_change: 7
            none: 2
            post_revision: 4
            post_action: 1
          badge_ids:
          - ""
          - ""
          badge_grouping_ids:
          - ""
          - ""
      properties:
        badges:
          items:
            $ref: '#/components/schemas/BadgesListResponse_badges_inner'
          type: array
        badge_types:
          items:
            $ref: '#/components/schemas/BadgesListResponse_badge_types_inner'
          type: array
        badge_groupings:
          items:
            $ref: '#/components/schemas/BadgesListResponse_badge_groupings_inner'
          type: array
        admin_badges:
          $ref: '#/components/schemas/BadgesListResponse_admin_badges'
      required:
      - admin_badges
      - badge_groupings
      - badge_types
      - badges
      type: object
      x-konfig-is-used-in-successful-response: true
    BadgesCreateBadgeResponse:
      additionalProperties: false
      example:
        badge:
          listable: true
          image_url: ""
          query: ""
          icon: icon
          description: description
          multiple_grant: true
          auto_revoke: true
          long_description: long_description
          trigger: ""
          target_posts: true
          enabled: true
          manually_grantable: true
          grant_count: 6
          system: true
          badge_type_id: 5
          badge_grouping_id: 1
          name: name
          allow_title: true
          id: 0
          show_posts: true
          slug: slug
        badge_types:
        - name: name
          id: 5
          sort_order: 2
        - name: name
          id: 5
          sort_order: 2
      properties:
        badge_types:
          items:
            $ref: '#/components/schemas/BadgesListResponse_badge_types_inner'
          type: array
        badge:
          $ref: '#/components/schemas/BadgesCreateBadgeResponse_badge'
      required:
      - badge
      - badge_types
      type: object
      x-konfig-is-used-in-successful-response: true
    BadgesUpdateBadgeByIdJsonResponse:
      additionalProperties: false
      example:
        badge:
          listable: true
          image_url: ""
          query: ""
          icon: icon
          description: description
          multiple_grant: true
          auto_revoke: true
          long_description: long_description
          trigger: ""
          target_posts: true
          enabled: true
          manually_grantable: true
          grant_count: 6
          system: true
          badge_type_id: 5
          badge_grouping_id: 1
          name: name
          allow_title: true
          id: 0
          show_posts: true
          slug: slug
        badge_types:
        - name: name
          id: 5
          sort_order: 2
        - name: name
          id: 5
          sort_order: 2
      properties:
        badge_types:
          items:
            $ref: '#/components/schemas/BadgesListResponse_badge_types_inner'
          type: array
        badge:
          $ref: '#/components/schemas/BadgesCreateBadgeResponse_badge'
      required:
      - badge
      - badge_types
      type: object
      x-konfig-is-used-in-successful-response: true
    CategoriesListResponse:
      additionalProperties: false
      example:
        category_list:
          can_create_topic: true
          can_create_category: true
          categories:
          - uploaded_background: ""
            color: color
            topics_year: 7
            uploaded_background_dark: ""
            navigate_to_first_post_after_read: true
            description: ""
            topics_month: 4
            topic_template: ""
            show_subcategory_list: true
            topics_week: 2
            uploaded_logo: ""
            description_excerpt: ""
            sort_ascending: ""
            num_featured_topics: 7
            is_uncategorized: true
            topics_day: 3
            id: 0
            subcategory_list:
            - ""
            - ""
            sort_order: ""
            default_view: ""
            slug: slug
            subcategory_list_style: subcategory_list_style
            has_children: true
            default_top_period: default_top_period
            can_edit: true
            description_text: ""
            permission: 5
            topic_count: 6
            uploaded_logo_dark: ""
            read_restricted: true
            topics_all_time: 1
            minimum_required_tags: 9
            topic_url: ""
            subcategory_ids:
            - ""
            - ""
            default_list_filter: default_list_filter
            name: name
            notification_level: 2
            text_color: text_color
            post_count: 1
            position: 5
          - uploaded_background: ""
            color: color
            topics_year: 7
            uploaded_background_dark: ""
            navigate_to_first_post_after_read: true
            description: ""
            topics_month: 4
            topic_template: ""
            show_subcategory_list: true
            topics_week: 2
            uploaded_logo: ""
            description_excerpt: ""
            sort_ascending: ""
            num_featured_topics: 7
            is_uncategorized: true
            topics_day: 3
            id: 0
            subcategory_list:
            - ""
            - ""
            sort_order: ""
            default_view: ""
            slug: slug
            subcategory_list_style: subcategory_list_style
            has_children: true
            default_top_period: default_top_period
            can_edit: true
            description_text: ""
            permission: 5
            topic_count: 6
            uploaded_logo_dark: ""
            read_restricted: true
            topics_all_time: 1
            minimum_required_tags: 9
            topic_url: ""
            subcategory_ids:
            - ""
            - ""
            default_list_filter: default_list_filter
            name: name
            notification_level: 2
            text_color: text_color
            post_count: 1
            position: 5
      properties:
        category_list:
          $ref: '#/components/schemas/CategoriesListResponse_category_list'
      required:
      - category_list
      type: object
      x-konfig-is-used-in-successful-response: true
    CategoriesCreateCategoryRequestResponse:
      additionalProperties: false
      example:
        category:
          uploaded_background: ""
          form_template_ids:
          - ""
          - ""
          navigate_to_first_post_after_read: true
          email_in_allow_strangers: true
          show_subcategory_list: true
          read_only_banner: ""
          uploaded_logo: ""
          description_excerpt: ""
          auto_close_based_on_last_post: true
          can_delete: true
          allow_unlimited_owner_edits_on_first_post: true
          id: 0
          slug: slug
          subcategory_list_style: subcategory_list_style
          auto_close_hours: ""
          has_children: ""
          custom_fields: "{}"
          default_top_period: default_top_period
          all_topics_wiki: true
          allow_badges: true
          description_text: ""
          minimum_required_tags: 7
          default_list_filter: default_list_filter
          allowed_tag_groups:
          - ""
          - ""
          name: name
          notification_level: 5
          text_color: text_color
          post_count: 1
          position: 5
          mailinglist_mirror: true
          available_groups:
          - ""
          - ""
          color: color
          uploaded_background_dark: ""
          description: ""
          topic_featured_link_allowed: true
          topic_template: ""
          sort_ascending: ""
          category_setting: ""
          num_featured_topics: 2
          allowed_tags:
          - ""
          - ""
          group_permissions:
          - permission_type: 3
            group_name: group_name
          - permission_type: 3
            group_name: group_name
          search_priority: 2
          sort_order: ""
          default_view: ""
          can_edit: true
          permission: ""
          topic_count: 6
          uploaded_logo_dark: ""
          read_restricted: true
          allow_global_tags: true
          topic_url: ""
          email_in: ""
          default_slow_mode_seconds: ""
          required_tag_groups:
          - name: name
            min_count: 9
          - name: name
            min_count: 9
      properties:
        category:
          $ref: '#/components/schemas/CategoriesCreateCategoryRequestResponse_category'
      required:
      - category
      type: object
      x-konfig-is-used-in-successful-response: true
    CategoriesUpdateCategoryByIdJsonResponse:
      additionalProperties: false
      example:
        success: success
        category:
          uploaded_background: ""
          form_template_ids:
          - ""
          - ""
          navigate_to_first_post_after_read: true
          email_in_allow_strangers: true
          show_subcategory_list: true
          read_only_banner: ""
          uploaded_logo: ""
          description_excerpt: ""
          auto_close_based_on_last_post: true
          can_delete: true
          allow_unlimited_owner_edits_on_first_post: true
          id: 0
          slug: slug
          subcategory_list_style: subcategory_list_style
          auto_close_hours: ""
          has_children: ""
          custom_fields: "{}"
          default_top_period: default_top_period
          all_topics_wiki: true
          allow_badges: true
          description_text: ""
          minimum_required_tags: 7
          default_list_filter: default_list_filter
          allowed_tag_groups:
          - ""
          - ""
          name: name
          notification_level: 5
          text_color: text_color
          post_count: 1
          position: 5
          mailinglist_mirror: true
          available_groups:
          - ""
          - ""
          color: color
          uploaded_background_dark: ""
          description: ""
          topic_featured_link_allowed: true
          topic_template: ""
          sort_ascending: ""
          category_setting: ""
          num_featured_topics: 2
          allowed_tags:
          - ""
          - ""
          group_permissions:
          - permission_type: 3
            group_name: group_name
          - permission_type: 3
            group_name: group_name
          search_priority: 9
          sort_order: ""
          default_view: ""
          can_edit: true
          permission: ""
          topic_count: 6
          uploaded_logo_dark: ""
          read_restricted: true
          allow_global_tags: true
          topic_url: ""
          email_in: ""
          default_slow_mode_seconds: ""
          required_tag_groups:
          - name: name
            min_count: 9
          - name: name
            min_count: 9
      properties:
        success:
          type: string
        category:
          $ref: '#/components/schemas/CategoriesUpdateCategoryByIdJsonResponse_category'
      required:
      - category
      - success
      type: object
      x-konfig-is-used-in-successful-response: true
    CategoriesListTopicsResponse:
      additionalProperties: false
      example:
        primary_groups:
        - ""
        - ""
        topic_list:
          can_create_topic: true
          per_page: 6
          topics:
          - unpinned: ""
            pinned: true
            featured_link: ""
            created_at: created_at
            bumped: true
            title: title
            liked: ""
            archived: true
            has_summary: true
            fancy_title: fancy_title
            category_id: 3
            id: 1
            bumped_at: bumped_at
            slug: slug
            views: 7
            last_posted_at: last_posted_at
            visible: true
            like_count: 9
            image_url: ""
            bookmarked: ""
            last_poster_username: last_poster_username
            posters:
            - primary_group_id: ""
              user_id: 2
              description: description
              extras: extras
            - primary_group_id: ""
              user_id: 2
              description: description
              extras: extras
            pinned_globally: true
            reply_count: 5
            archetype: archetype
            highest_post_number: 2
            closed: true
            excerpt: excerpt
            unseen: true
            posts_count: 5
          - unpinned: ""
            pinned: true
            featured_link: ""
            created_at: created_at
            bumped: true
            title: title
            liked: ""
            archived: true
            has_summary: true
            fancy_title: fancy_title
            category_id: 3
            id: 1
            bumped_at: bumped_at
            slug: slug
            views: 7
            last_posted_at: last_posted_at
            visible: true
            like_count: 9
            image_url: ""
            bookmarked: ""
            last_poster_username: last_poster_username
            posters:
            - primary_group_id: ""
              user_id: 2
              description: description
              extras: extras
            - primary_group_id: ""
              user_id: 2
              description: description
              extras: extras
            pinned_globally: true
            reply_count: 5
            archetype: archetype
            highest_post_number: 2
            closed: true
            excerpt: excerpt
            unseen: true
            posts_count: 5
          top_tags:
          - ""
          - ""
        users:
        - name: name
          id: 0
          avatar_template: avatar_template
          username: username
        - name: name
          id: 0
          avatar_template: avatar_template
          username: username
      properties:
        users:
          items:
            $ref: '#/components/schemas/CategoriesListTopicsResponse_users_inner'
          type: array
        primary_groups:
          items: {}
          type: array
        topic_list:
          $ref: '#/components/schemas/CategoriesListTopicsResponse_topic_list'
      required:
      - topic_list
      type: object
      x-konfig-is-used-in-successful-response: true
    CategoriesGetCategoryByIdJsonResponse:
      additionalProperties: false
      example:
        category:
          uploaded_background: ""
          form_template_ids:
          - ""
          - ""
          navigate_to_first_post_after_read: true
          email_in_allow_strangers: true
          show_subcategory_list: true
          read_only_banner: ""
          uploaded_logo: ""
          description_excerpt: ""
          auto_close_based_on_last_post: true
          can_delete: true
          allow_unlimited_owner_edits_on_first_post: true
          id: 0
          slug: slug
          subcategory_list_style: subcategory_list_style
          auto_close_hours: ""
          has_children: ""
          custom_fields: "{}"
          default_top_period: default_top_period
          all_topics_wiki: true
          allow_badges: true
          description_text: ""
          minimum_required_tags: 7
          default_list_filter: default_list_filter
          allowed_tag_groups:
          - ""
          - ""
          name: name
          notification_level: 5
          text_color: text_color
          post_count: 1
          position: 5
          mailinglist_mirror: true
          available_groups:
          - ""
          - ""
          color: color
          uploaded_background_dark: ""
          description: ""
          topic_featured_link_allowed: true
          topic_template: ""
          sort_ascending: ""
          category_setting: ""
          num_featured_topics: 2
          allowed_tags:
          - ""
          - ""
          group_permissions:
          - permission_type: 3
            group_name: group_name
          - permission_type: 3
            group_name: group_name
          search_priority: 2
          sort_order: ""
          default_view: ""
          can_edit: true
          permission: ""
          topic_count: 6
          uploaded_logo_dark: ""
          read_restricted: true
          allow_global_tags: true
          topic_url: ""
          email_in: ""
          default_slow_mode_seconds: ""
          required_tag_groups:
          - name: name
            min_count: 9
          - name: name
            min_count: 9
      properties:
        category:
          $ref: '#/components/schemas/CategoriesCreateCategoryRequestResponse_category'
      required:
      - category
      type: object
      x-konfig-is-used-in-successful-response: true
    GroupsCreateNewGroupResponse:
      additionalProperties: false
      example:
        basic_group:
          mentionable_level: 1
          public_admission: true
          primary_group: true
          flair_color: ""
          title: ""
          can_see_members: true
          publish_read_state: true
          visibility_level: 5
          id: 0
          allow_membership_requests: true
          messageable_level: 5
          grant_trust_level: ""
          can_edit_group: true
          automatic: true
          bio_raw: ""
          flair_url: ""
          public_exit: true
          members_visibility_level: 7
          bio_excerpt: ""
          flair_bg_color: ""
          full_name: ""
          default_notification_level: 2
          user_count: 6
          membership_request_template: ""
          name: name
          incoming_email: ""
          has_messages: true
          can_admin_group: true
          bio_cooked: ""
      properties:
        basic_group:
          $ref: '#/components/schemas/GroupsCreateNewGroupResponse_basic_group'
      required:
      - basic_group
      type: object
      x-konfig-is-used-in-successful-response: true
    GroupsDeleteGroupByIdJsonResponse:
      additionalProperties: false
      example:
        success: OK
      properties:
        success:
          example: OK
          type: string
          x-konfig-original-example: OK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GroupsDeleteGroupByIdJsonResponse-properties-success
      required:
      - success
      type: object
      x-konfig-is-used-in-successful-response: true
    GroupsGetGroupByIdResponse:
      additionalProperties: false
      example:
        extras:
          visible_group_names:
          - ""
          - ""
        group:
          mentionable_level: 1
          tracking_tags:
          - ""
          - ""
          regular_tags:
          - ""
          - ""
          primary_group: true
          flair_color: ""
          publish_read_state: true
          email_password: ""
          muted_tags:
          - ""
          - ""
          imap_old_emails: ""
          smtp_updated_at: ""
          imap_new_emails: ""
          visibility_level: 5
          mentionable: true
          messageable: true
          id: 0
          is_group_user: true
          allow_membership_requests: true
          watching_first_post_category_ids:
          - ""
          - ""
          imap_ssl: ""
          automatic_membership_email_domains: ""
          regular_category_ids:
          - ""
          - ""
          watching_first_post_tags:
          - ""
          - ""
          messageable_level: 5
          can_edit_group: true
          public_exit: true
          watching_tags:
          - ""
          - ""
          imap_updated_at: ""
          full_name: ""
          smtp_port: ""
          imap_mailbox_name: imap_mailbox_name
          smtp_server: ""
          membership_request_template: ""
          name: name
          smtp_updated_by: ""
          tracking_category_ids:
          - ""
          - ""
          public_admission: true
          imap_updated_by: ""
          title: ""
          can_see_members: true
          imap_port: ""
          muted_category_ids:
          - ""
          - ""
          smtp_ssl: ""
          associated_group_ids:
          - ""
          - ""
          imap_server: ""
          smtp_enabled: true
          imap_mailboxes:
          - ""
          - ""
          email_from_alias: ""
          imap_last_error: ""
          grant_trust_level: ""
          email_username: ""
          automatic: true
          bio_raw: ""
          flair_url: ""
          message_count: 9
          members_visibility_level: 7
          bio_excerpt: ""
          flair_bg_color: ""
          is_group_owner_display: true
          watching_category_ids:
          - ""
          - ""
          default_notification_level: 2
          user_count: 6
          imap_enabled: true
          incoming_email: ""
          has_messages: true
          allow_unknown_sender_topic_replies: true
          can_admin_group: true
          bio_cooked: ""
      properties:
        group:
          $ref: '#/components/schemas/GroupsGetGroupByIdResponse_group'
        extras:
          $ref: '#/components/schemas/GroupsGetGroupByIdResponse_extras'
      required:
      - extras
      - group
      type: object
      x-konfig-is-used-in-successful-response: true
    GroupsUpdateGroupByIdJsonResponse:
      example:
        success: OK
      properties:
        success:
          example: OK
          type: string
          x-konfig-original-example: OK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GroupsUpdateGroupByIdJsonResponse-properties-success
      type: object
      x-konfig-is-used-in-successful-response: true
    GroupsRemoveMembersResponse:
      additionalProperties: false
      example:
        success: success
        usernames:
        - ""
        - ""
        skipped_usernames:
        - ""
        - ""
      properties:
        success:
          type: string
        usernames:
          items: {}
          type: array
        skipped_usernames:
          items: {}
          type: array
      required:
      - skipped_usernames
      - success
      - usernames
      type: object
      x-konfig-is-used-in-successful-response: true
    GroupsListMembersJsonResponse:
      additionalProperties: false
      example:
        meta:
          total: 6
          offset: 5
          limit: 1
        members:
        - added_at: added_at
          timezone: timezone
          name: ""
          id: 0
          title: ""
          last_seen_at: last_seen_at
          avatar_template: avatar_template
          username: username
          last_posted_at: last_posted_at
        - added_at: added_at
          timezone: timezone
          name: ""
          id: 0
          title: ""
          last_seen_at: last_seen_at
          avatar_template: avatar_template
          username: username
          last_posted_at: last_posted_at
        owners:
        - added_at: added_at
          timezone: timezone
          name: ""
          id: 0
          title: ""
          last_seen_at: last_seen_at
          avatar_template: avatar_template
          username: username
          last_posted_at: last_posted_at
        - added_at: added_at
          timezone: timezone
          name: ""
          id: 0
          title: ""
          last_seen_at: last_seen_at
          avatar_template: avatar_template
          username: username
          last_posted_at: last_posted_at
      properties:
        members:
          items:
            $ref: '#/components/schemas/GroupsListMembersJsonResponse_members_inner'
          type: array
        owners:
          items:
            $ref: '#/components/schemas/GroupsListMembersJsonResponse_members_inner'
          type: array
        meta:
          $ref: '#/components/schemas/GroupsListMembersJsonResponse_meta'
      required:
      - members
      - meta
      - owners
      type: object
      x-konfig-is-used-in-successful-response: true
    GroupsAddMembersToGroupResponse:
      additionalProperties: false
      example:
        emails:
        - ""
        - ""
        success: success
        usernames:
        - ""
        - ""
      properties:
        success:
          type: string
        usernames:
          items: {}
          type: array
        emails:
          items: {}
          type: array
      required:
      - emails
      - success
      - usernames
      type: object
      x-konfig-is-used-in-successful-response: true
    GroupsListResponse:
      additionalProperties: false
      example:
        load_more_groups: load_more_groups
        groups:
        - mentionable_level: 1
          public_admission: true
          primary_group: true
          flair_color: ""
          title: ""
          can_see_members: true
          publish_read_state: true
          visibility_level: 5
          id: 0
          is_group_user: true
          allow_membership_requests: true
          messageable_level: 5
          grant_trust_level: ""
          is_group_owner: true
          can_edit_group: true
          automatic: true
          bio_raw: ""
          flair_url: ""
          display_name: display_name
          public_exit: true
          members_visibility_level: 7
          bio_excerpt: ""
          flair_bg_color: ""
          full_name: ""
          default_notification_level: 2
          user_count: 6
          membership_request_template: ""
          name: name
          incoming_email: ""
          has_messages: true
          can_admin_group: true
          bio_cooked: ""
        - mentionable_level: 1
          public_admission: true
          primary_group: true
          flair_color: ""
          title: ""
          can_see_members: true
          publish_read_state: true
          visibility_level: 5
          id: 0
          is_group_user: true
          allow_membership_requests: true
          messageable_level: 5
          grant_trust_level: ""
          is_group_owner: true
          can_edit_group: true
          automatic: true
          bio_raw: ""
          flair_url: ""
          display_name: display_name
          public_exit: true
          members_visibility_level: 7
          bio_excerpt: ""
          flair_bg_color: ""
          full_name: ""
          default_notification_level: 2
          user_count: 6
          membership_request_template: ""
          name: name
          incoming_email: ""
          has_messages: true
          can_admin_group: true
          bio_cooked: ""
        extras:
          type_filters:
          - ""
          - ""
        total_rows_groups: 9
      properties:
        groups:
          items:
            $ref: '#/components/schemas/GroupsListResponse_groups_inner'
          type: array
        extras:
          $ref: '#/components/schemas/GroupsListResponse_extras'
        total_rows_groups:
          type: integer
        load_more_groups:
          type: string
      required:
      - extras
      - groups
      - load_more_groups
      - total_rows_groups
      type: object
      x-konfig-is-used-in-successful-response: true
    InvitesCreateInviteResponse:
      example:
        custom_message: Hello world!
        expires_at: 2021-02-01T12:00:00.000Z
        expired: false
        updated_at: 2021-01-01T12:00:00.000Z
        emailed: false
        topics: []
        link: http://example.com/invites/9045fd767efe201ca60c6658bcf14158
        groups: []
        created_at: 2021-01-01T12:00:00.000Z
        id: 42
        email: not-a-user-yet@example.com
      properties:
        id:
          example: 42
          type: integer
          x-konfig-original-example: 42
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-id
        link:
          example: http://example.com/invites/9045fd767efe201ca60c6658bcf14158
          type: string
          x-konfig-original-example: http://example.com/invites/9045fd767efe201ca60c6658bcf14158
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-link
        email:
          example: not-a-user-yet@example.com
          type: string
          x-konfig-original-example: not-a-user-yet@example.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-email
        emailed:
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-emailed
        custom_message:
          example: Hello world!
          x-konfig-original-example: Hello world!
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-custom_message
        topics:
          example: []
          items: {}
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-topics
        groups:
          example: []
          items: {}
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-groups
        created_at:
          example: 2021-01-01T12:00:00.000Z
          type: string
          x-konfig-original-example: 2021-01-01T12:00:00.000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-created_at
        updated_at:
          example: 2021-01-01T12:00:00.000Z
          type: string
          x-konfig-original-example: 2021-01-01T12:00:00.000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-updated_at
        expires_at:
          example: 2021-02-01T12:00:00.000Z
          type: string
          x-konfig-original-example: 2021-02-01T12:00:00.000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-expires_at
        expired:
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-expired
      type: object
      x-konfig-is-used-in-successful-response: true
    InvitesCreateMultipleInvitesResponse:
      example:
        successful_invitations:
        - id: 42
          link: http://example.com/invites/9045fd767efe201ca60c6658bcf14158
          email: not-a-user-yet-1@example.com
          emailed: true
          custom_message: Hello world!
          topics: []
          groups: []
          created_at: 2021-01-01T12:00:00.000Z
          updated_at: 2021-01-01T12:00:00.000Z
          expires_at: 2021-02-01T12:00:00.000Z
          expired: false
        - id: 42
          link: http://example.com/invites/c6658bcf141589045fd767efe201ca60
          email: not-a-user-yet-2@example.com
          emailed: true
          custom_message: Hello world!
          topics: []
          groups: []
          created_at: 2021-01-01T12:00:00.000Z
          updated_at: 2021-01-01T12:00:00.000Z
          expires_at: 2021-02-01T12:00:00.000Z
          expired: false
        num_successfully_created_invitations: 42
        failed_invitations: []
        num_failed_invitations: 42
      properties:
        num_successfully_created_invitations:
          example: 42
          type: integer
          x-konfig-original-example: 42
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesResponse-properties-num_successfully_created_invitations
        num_failed_invitations:
          example: 42
          type: integer
          x-konfig-original-example: 42
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesResponse-properties-num_failed_invitations
        failed_invitations:
          example: []
          items: {}
          type: array
          x-konfig-original-example: []
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesResponse-properties-failed_invitations
        successful_invitations:
          example:
          - id: 42
            link: http://example.com/invites/9045fd767efe201ca60c6658bcf14158
            email: not-a-user-yet-1@example.com
            emailed: true
            custom_message: Hello world!
            topics: []
            groups: []
            created_at: 2021-01-01T12:00:00.000Z
            updated_at: 2021-01-01T12:00:00.000Z
            expires_at: 2021-02-01T12:00:00.000Z
            expired: false
          - id: 42
            link: http://example.com/invites/c6658bcf141589045fd767efe201ca60
            email: not-a-user-yet-2@example.com
            emailed: true
            custom_message: Hello world!
            topics: []
            groups: []
            created_at: 2021-01-01T12:00:00.000Z
            updated_at: 2021-01-01T12:00:00.000Z
            expires_at: 2021-02-01T12:00:00.000Z
            expired: false
          type: array
          x-konfig-original-example:
          - id: 42
            link: http://example.com/invites/9045fd767efe201ca60c6658bcf14158
            email: not-a-user-yet-1@example.com
            emailed: true
            custom_message: Hello world!
            topics: []
            groups: []
            created_at: 2021-01-01T12:00:00.000Z
            updated_at: 2021-01-01T12:00:00.000Z
            expires_at: 2021-02-01T12:00:00.000Z
            expired: false
          - id: 42
            link: http://example.com/invites/c6658bcf141589045fd767efe201ca60
            email: not-a-user-yet-2@example.com
            emailed: true
            custom_message: Hello world!
            topics: []
            groups: []
            created_at: 2021-01-01T12:00:00.000Z
            updated_at: 2021-01-01T12:00:00.000Z
            expires_at: 2021-02-01T12:00:00.000Z
            expired: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesResponse-properties-successful_invitations
      type: object
      x-konfig-is-used-in-successful-response: true
    NotificationsGetUserNotificationsResponse:
      example:
        seen_notification_id: 2
        total_rows_notifications: 5
        load_more_notifications: load_more_notifications
        notifications:
        - notification_type: 1
          read: true
          data:
            badge_title: true
            badge_id: 5
            badge_slug: badge_slug
            badge_name: badge_name
            username: username
          user_id: 6
          created_at: created_at
          id: 0
          topic_id: ""
          post_number: ""
          slug: ""
        - notification_type: 1
          read: true
          data:
            badge_title: true
            badge_id: 5
            badge_slug: badge_slug
            badge_name: badge_name
            username: username
          user_id: 6
          created_at: created_at
          id: 0
          topic_id: ""
          post_number: ""
          slug: ""
      properties:
        notifications:
          items:
            $ref: '#/components/schemas/NotificationsGetUserNotificationsResponse_notifications_inner'
          type: array
        total_rows_notifications:
          type: integer
        seen_notification_id:
          type: integer
        load_more_notifications:
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    NotificationsMarkAsReadResponse:
      example:
        success: success
      properties:
        success:
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    PostsListLatestPostsAcrossTopicsResponse:
      example:
        latest_posts:
        - flair_color: ""
          moderator: true
          wiki: true
          trust_level: 1
          score: 2.027123023002322
          can_see_hidden_post: true
          can_view_edit_history: true
          reviewable_score_count: 6
          actions_summary:
          - can_act: true
            id: 1
          - can_act: true
            id: 1
          incoming_link_count: 7
          can_delete: true
          post_type: 5
          id: 6
          readers_count: 3
          edit_reason: ""
          cooked: cooked
          raw: raw
          reply_count: 5
          reply_to_post_number: ""
          version: 0
          deleted_at: ""
          user_id: 1
          topic_title: topic_title
          can_recover: true
          name: name
          user_title: ""
          post_number: 1
          hidden: true
          can_wiki: true
          topic_html_title: topic_html_title
          created_at: created_at
          admin: true
          updated_at: updated_at
          category_id: 7
          topic_id: 4
          quote_count: 2
          avatar_template: avatar_template
          reads: 9
          can_edit: true
          staff: true
          flair_url: ""
          flair_bg_color: ""
          reviewable_score_pending_count: 7
          reviewable_id: ""
          primary_group_name: ""
          flair_group_id: ""
          user_deleted: true
          yours: true
          topic_slug: topic_slug
          flair_name: ""
          username: username
          display_username: display_username
        - flair_color: ""
          moderator: true
          wiki: true
          trust_level: 1
          score: 2.027123023002322
          can_see_hidden_post: true
          can_view_edit_history: true
          reviewable_score_count: 6
          actions_summary:
          - can_act: true
            id: 1
          - can_act: true
            id: 1
          incoming_link_count: 7
          can_delete: true
          post_type: 5
          id: 6
          readers_count: 3
          edit_reason: ""
          cooked: cooked
          raw: raw
          reply_count: 5
          reply_to_post_number: ""
          version: 0
          deleted_at: ""
          user_id: 1
          topic_title: topic_title
          can_recover: true
          name: name
          user_title: ""
          post_number: 1
          hidden: true
          can_wiki: true
          topic_html_title: topic_html_title
          created_at: created_at
          admin: true
          updated_at: updated_at
          category_id: 7
          topic_id: 4
          quote_count: 2
          avatar_template: avatar_template
          reads: 9
          can_edit: true
          staff: true
          flair_url: ""
          flair_bg_color: ""
          reviewable_score_pending_count: 7
          reviewable_id: ""
          primary_group_name: ""
          flair_group_id: ""
          user_deleted: true
          yours: true
          topic_slug: topic_slug
          flair_name: ""
          username: username
          display_username: display_username
      properties:
        latest_posts:
          items:
            $ref: '#/components/schemas/PostsListLatestPostsAcrossTopicsResponse_latest_posts_inner'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    PostsCreateTopicPostMessageResponse:
      additionalProperties: false
      example:
        flair_color: ""
        moderator: true
        wiki: true
        trust_level: 1
        score: 2.027123023002322
        can_see_hidden_post: true
        can_view_edit_history: true
        reviewable_score_count: 6
        actions_summary:
        - can_act: true
          id: 7
        - can_act: true
          id: 7
        incoming_link_count: 7
        can_delete: true
        draft_sequence: 1
        post_type: 5
        id: 6
        mentioned_users:
        - ""
        - ""
        readers_count: 3
        edit_reason: ""
        cooked: cooked
        raw: raw
        reply_count: 5
        reply_to_post_number: ""
        version: 0
        deleted_at: ""
        user_id: 1
        can_recover: true
        name: ""
        user_title: ""
        post_number: 1
        hidden: true
        can_wiki: true
        created_at: created_at
        admin: true
        updated_at: updated_at
        topic_id: 4
        quote_count: 2
        avatar_template: avatar_template
        bookmarked: true
        reads: 9
        can_edit: true
        staff: true
        flair_url: ""
        flair_bg_color: ""
        reviewable_score_pending_count: 7
        reviewable_id: ""
        primary_group_name: ""
        flair_group_id: ""
        user_deleted: true
        yours: true
        topic_slug: topic_slug
        flair_name: ""
        username: username
        display_username: ""
      properties:
        version:
          type: integer
        id:
          type: integer
        name: {}
        username:
          type: string
        avatar_template:
          type: string
        created_at:
          type: string
        raw:
          type: string
        cooked:
          type: string
        post_number:
          type: integer
        post_type:
          type: integer
        updated_at:
          type: string
        reply_count:
          type: integer
        reply_to_post_number: {}
        quote_count:
          type: integer
        incoming_link_count:
          type: integer
        reads:
          type: integer
        readers_count:
          type: integer
        score:
          type: number
        yours:
          type: boolean
        topic_id:
          type: integer
        topic_slug:
          type: string
        display_username: {}
        primary_group_name: {}
        flair_name: {}
        flair_url: {}
        flair_bg_color: {}
        flair_color: {}
        flair_group_id: {}
        can_edit:
          type: boolean
        can_delete:
          type: boolean
        can_recover:
          type: boolean
        can_see_hidden_post:
          type: boolean
        can_wiki:
          type: boolean
        user_title: {}
        bookmarked:
          type: boolean
        actions_summary:
          items:
            $ref: '#/components/schemas/PostsCreateTopicPostMessageResponse_actions_summary_inner'
          type: array
        moderator:
          type: boolean
        admin:
          type: boolean
        staff:
          type: boolean
        user_id:
          type: integer
        draft_sequence:
          type: integer
        hidden:
          type: boolean
        trust_level:
          type: integer
        deleted_at: {}
        user_deleted:
          type: boolean
        edit_reason: {}
        can_view_edit_history:
          type: boolean
        wiki:
          type: boolean
        reviewable_id: {}
        reviewable_score_count:
          type: integer
        reviewable_score_pending_count:
          type: integer
        mentioned_users:
          items: {}
          type: array
      required:
      - actions_summary
      - admin
      - avatar_template
      - bookmarked
      - can_delete
      - can_edit
      - can_recover
      - can_view_edit_history
      - can_wiki
      - cooked
      - created_at
      - deleted_at
      - display_username
      - draft_sequence
      - edit_reason
      - flair_bg_color
      - flair_color
      - flair_name
      - flair_url
      - hidden
      - id
      - incoming_link_count
      - moderator
      - name
      - post_number
      - post_type
      - primary_group_name
      - quote_count
      - readers_count
      - reads
      - reply_count
      - reply_to_post_number
      - reviewable_id
      - reviewable_score_count
      - reviewable_score_pending_count
      - score
      - staff
      - topic_id
      - topic_slug
      - trust_level
      - updated_at
      - user_deleted
      - user_id
      - user_title
      - username
      - version
      - wiki
      - yours
      type: object
      x-konfig-is-used-in-successful-response: true
    PostsGetSinglePostLikesResponse:
      additionalProperties: true
      example:
        flair_color: ""
        moderator: true
        wiki: true
        trust_level: 1
        score: 2.027123023002322
        can_see_hidden_post: true
        can_view_edit_history: true
        reviewable_score_count: 6
        actions_summary:
        - acted: true
          can_undo: true
          count: 1
          can_act: true
          id: 7
        - acted: true
          can_undo: true
          count: 1
          can_act: true
          id: 7
        incoming_link_count: 7
        can_delete: true
        post_type: 5
        id: 6
        mentioned_users:
        - ""
        - ""
        readers_count: 3
        edit_reason: ""
        cooked: cooked
        raw: raw
        reply_count: 5
        reply_to_post_number: ""
        version: 0
        deleted_at: ""
        user_id: 1
        can_recover: true
        user_title: ""
        name: ""
        post_number: 1
        hidden: true
        can_wiki: true
        created_at: created_at
        admin: true
        updated_at: updated_at
        topic_id: 4
        quote_count: 2
        avatar_template: avatar_template
        bookmarked: true
        reads: 9
        can_edit: true
        staff: true
        flair_url: ""
        flair_bg_color: ""
        reviewable_score_pending_count: 7
        reviewable_id: ""
        primary_group_name: ""
        flair_group_id: ""
        user_deleted: true
        yours: true
        topic_slug: topic_slug
        flair_name: ""
        username: username
        display_username: ""
      properties:
        version:
          type: integer
        id:
          type: integer
        username:
          type: string
        avatar_template:
          type: string
        created_at:
          type: string
        cooked:
          type: string
        post_number:
          type: integer
        post_type:
          type: integer
        updated_at:
          type: string
        reply_count:
          type: integer
        reply_to_post_number: {}
        quote_count:
          type: integer
        incoming_link_count:
          type: integer
        reads:
          type: integer
        readers_count:
          type: integer
        score:
          type: number
        yours:
          type: boolean
        topic_id:
          type: integer
        topic_slug:
          type: string
        primary_group_name: {}
        flair_name: {}
        flair_url: {}
        flair_bg_color: {}
        flair_color: {}
        flair_group_id: {}
        can_edit:
          type: boolean
        can_delete:
          type: boolean
        can_recover:
          type: boolean
        can_see_hidden_post:
          type: boolean
        can_wiki:
          type: boolean
        user_title: {}
        bookmarked:
          type: boolean
        raw:
          type: string
        actions_summary:
          items:
            $ref: '#/components/schemas/PostsGetSinglePostLikesResponse_actions_summary_inner'
          type: array
        moderator:
          type: boolean
        admin:
          type: boolean
        staff:
          type: boolean
        user_id:
          type: integer
        hidden:
          type: boolean
        trust_level:
          type: integer
        deleted_at: {}
        user_deleted:
          type: boolean
        edit_reason: {}
        can_view_edit_history:
          type: boolean
        wiki:
          type: boolean
        reviewable_id: {}
        reviewable_score_count:
          type: integer
        reviewable_score_pending_count:
          type: integer
        mentioned_users:
          items: {}
          type: array
        name: {}
        display_username: {}
      required:
      - actions_summary
      - admin
      - avatar_template
      - bookmarked
      - can_delete
      - can_edit
      - can_recover
      - can_view_edit_history
      - can_wiki
      - cooked
      - created_at
      - deleted_at
      - edit_reason
      - flair_bg_color
      - flair_color
      - flair_name
      - flair_url
      - hidden
      - id
      - incoming_link_count
      - moderator
      - post_number
      - post_type
      - primary_group_name
      - quote_count
      - raw
      - readers_count
      - reads
      - reply_count
      - reply_to_post_number
      - reviewable_id
      - reviewable_score_count
      - reviewable_score_pending_count
      - score
      - staff
      - topic_id
      - topic_slug
      - trust_level
      - updated_at
      - user_deleted
      - user_id
      - user_title
      - username
      - version
      - wiki
      - yours
      type: object
      x-konfig-is-used-in-successful-response: true
    PostsUpdateSinglePostJsonResponse:
      additionalProperties: false
      example:
        post:
          flair_color: ""
          moderator: true
          wiki: true
          trust_level: 1
          score: 2.027123023002322
          can_see_hidden_post: true
          can_view_edit_history: true
          reviewable_score_count: 1
          actions_summary:
          - can_act: true
            id: 7
          - can_act: true
            id: 7
          incoming_link_count: 7
          can_delete: true
          draft_sequence: 1
          post_type: 5
          id: 6
          mentioned_users:
          - ""
          - ""
          readers_count: 3
          edit_reason: ""
          cooked: cooked
          raw: raw
          reply_count: 5
          reply_to_post_number: ""
          version: 0
          deleted_at: ""
          user_id: 7
          can_recover: true
          user_title: ""
          name: ""
          post_number: 1
          hidden: true
          can_wiki: true
          created_at: created_at
          admin: true
          updated_at: updated_at
          topic_id: 4
          quote_count: 2
          avatar_template: avatar_template
          bookmarked: true
          reads: 9
          can_edit: true
          staff: true
          flair_url: ""
          flair_bg_color: ""
          reviewable_score_pending_count: 6
          reviewable_id: ""
          primary_group_name: ""
          flair_group_id: ""
          user_deleted: true
          yours: true
          topic_slug: topic_slug
          flair_name: ""
          username: username
          display_username: ""
      properties:
        post:
          $ref: '#/components/schemas/PostsUpdateSinglePostJsonResponse_post'
      required:
      - post
      type: object
      x-konfig-is-used-in-successful-response: true
    PostsListRepliesToPostResponse:
      items:
        $ref: '#/components/schemas/PostsListRepliesToPostResponse_inner'
      minItems: 1
      type: array
      uniqueItems: true
      x-konfig-is-used-in-successful-response: true
    PostsLockPostActionResponse:
      example:
        locked: true
      properties:
        locked:
          type: boolean
      type: object
      x-konfig-is-used-in-successful-response: true
    PostsLikePostActionResponse:
      example:
        hidden: true
        flair_color: ""
        can_wiki: true
        moderator: true
        wiki: true
        created_at: created_at
        admin: true
        trust_level: 1
        score: 2.027123023002322
        can_view_edit_history: true
        reviewable_score_count: 6
        updated_at: updated_at
        actions_summary:
        - acted: true
          can_undo: true
          count: 1
          id: 7
        - acted: true
          can_undo: true
          count: 1
          id: 7
        incoming_link_count: 7
        can_delete: true
        post_type: 5
        id: 6
        topic_id: 4
        quote_count: 2
        readers_count: 3
        avatar_template: avatar_template
        notice: "{}"
        edit_reason: ""
        cooked: cooked
        reads: 9
        can_edit: true
        staff: true
        flair_url: ""
        reply_count: 5
        reply_to_post_number: ""
        version: 0
        deleted_at: ""
        flair_bg_color: ""
        reviewable_score_pending_count: 7
        user_id: 1
        reviewable_id: ""
        primary_group_name: ""
        can_recover: true
        name: name
        user_title: ""
        user_deleted: true
        post_number: 1
        yours: true
        topic_slug: topic_slug
        flair_name: ""
        username: username
        display_username: display_username
      properties:
        version:
          type: integer
        id:
          type: integer
        name:
          type: string
        username:
          type: string
        avatar_template:
          type: string
        created_at:
          type: string
        cooked:
          type: string
        post_number:
          type: integer
        post_type:
          type: integer
        updated_at:
          type: string
        reply_count:
          type: integer
        reply_to_post_number: {}
        quote_count:
          type: integer
        incoming_link_count:
          type: integer
        reads:
          type: integer
        readers_count:
          type: integer
        score:
          type: number
        yours:
          type: boolean
        topic_id:
          type: integer
        topic_slug:
          type: string
        display_username:
          type: string
        primary_group_name: {}
        flair_name: {}
        flair_url: {}
        flair_bg_color: {}
        flair_color: {}
        can_edit:
          type: boolean
        can_delete:
          type: boolean
        can_recover:
          type: boolean
        can_wiki:
          type: boolean
        user_title: {}
        actions_summary:
          items:
            $ref: '#/components/schemas/PostsLikePostActionResponse_actions_summary_inner'
          type: array
        moderator:
          type: boolean
        admin:
          type: boolean
        staff:
          type: boolean
        user_id:
          type: integer
        hidden:
          type: boolean
        trust_level:
          type: integer
        deleted_at: {}
        user_deleted:
          type: boolean
        edit_reason: {}
        can_view_edit_history:
          type: boolean
        wiki:
          type: boolean
        notice:
          type: object
        reviewable_id: {}
        reviewable_score_count:
          type: integer
        reviewable_score_pending_count:
          type: integer
      type: object
      x-konfig-is-used-in-successful-response: true
    PrivateMessagesListForUserResponse:
      example:
        primary_groups:
        - ""
        - ""
        topic_list:
          can_create_topic: true
          per_page: 1
          topics:
          - unpinned: ""
            pinned: true
            featured_link: ""
            created_at: created_at
            bumped: true
            allowed_user_count: 1
            title: title
            last_read_post_number: 9
            liked: true
            archived: true
            has_summary: true
            fancy_title: fancy_title
            category_id: ""
            id: 5
            bumped_at: bumped_at
            slug: slug
            views: 4
            last_posted_at: last_posted_at
            participants:
            - primary_group_id: ""
              user_id: 1
              description: ""
              extras: extras
            - primary_group_id: ""
              user_id: 1
              description: ""
              extras: extras
            visible: true
            like_count: 7
            image_url: ""
            unread_posts: 3
            bookmarked: true
            last_poster_username: last_poster_username
            posters:
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: extras
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: extras
            pinned_globally: true
            reply_count: 2
            archetype: archetype
            highest_post_number: 7
            closed: true
            notification_level: 2
            unseen: true
            posts_count: 5
          - unpinned: ""
            pinned: true
            featured_link: ""
            created_at: created_at
            bumped: true
            allowed_user_count: 1
            title: title
            last_read_post_number: 9
            liked: true
            archived: true
            has_summary: true
            fancy_title: fancy_title
            category_id: ""
            id: 5
            bumped_at: bumped_at
            slug: slug
            views: 4
            last_posted_at: last_posted_at
            participants:
            - primary_group_id: ""
              user_id: 1
              description: ""
              extras: extras
            - primary_group_id: ""
              user_id: 1
              description: ""
              extras: extras
            visible: true
            like_count: 7
            image_url: ""
            unread_posts: 3
            bookmarked: true
            last_poster_username: last_poster_username
            posters:
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: extras
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: extras
            pinned_globally: true
            reply_count: 2
            archetype: archetype
            highest_post_number: 7
            closed: true
            notification_level: 2
            unseen: true
            posts_count: 5
          draft: ""
          draft_sequence: 6
          draft_key: draft_key
        users:
        - name: name
          id: 0
          avatar_template: avatar_template
          username: username
        - name: name
          id: 0
          avatar_template: avatar_template
          username: username
      properties:
        users:
          items:
            $ref: '#/components/schemas/PrivateMessagesListForUserResponse_users_inner'
          type: array
        primary_groups:
          items: {}
          type: array
        topic_list:
          $ref: '#/components/schemas/PrivateMessagesListForUserResponse_topic_list'
      type: object
      x-konfig-is-used-in-successful-response: true
    PrivateMessagesListSentForUserResponse:
      example:
        primary_groups:
        - ""
        - ""
        topic_list:
          can_create_topic: true
          per_page: 1
          topics:
          - unpinned: ""
            pinned: true
            featured_link: ""
            created_at: created_at
            bumped: true
            allowed_user_count: 1
            title: title
            last_read_post_number: 9
            liked: true
            archived: true
            has_summary: true
            fancy_title: fancy_title
            category_id: ""
            id: 5
            bumped_at: bumped_at
            slug: slug
            views: 4
            last_posted_at: last_posted_at
            participants:
            - ""
            - ""
            visible: true
            like_count: 7
            image_url: ""
            unread_posts: 3
            bookmarked: true
            last_poster_username: last_poster_username
            posters:
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: extras
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: extras
            pinned_globally: true
            reply_count: 2
            archetype: archetype
            highest_post_number: 7
            closed: true
            notification_level: 2
            unseen: true
            posts_count: 5
          - unpinned: ""
            pinned: true
            featured_link: ""
            created_at: created_at
            bumped: true
            allowed_user_count: 1
            title: title
            last_read_post_number: 9
            liked: true
            archived: true
            has_summary: true
            fancy_title: fancy_title
            category_id: ""
            id: 5
            bumped_at: bumped_at
            slug: slug
            views: 4
            last_posted_at: last_posted_at
            participants:
            - ""
            - ""
            visible: true
            like_count: 7
            image_url: ""
            unread_posts: 3
            bookmarked: true
            last_poster_username: last_poster_username
            posters:
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: extras
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: extras
            pinned_globally: true
            reply_count: 2
            archetype: archetype
            highest_post_number: 7
            closed: true
            notification_level: 2
            unseen: true
            posts_count: 5
          draft: ""
          draft_sequence: 6
          draft_key: draft_key
        users:
        - name: ""
          id: 0
          avatar_template: avatar_template
          username: username
        - name: ""
          id: 0
          avatar_template: avatar_template
          username: username
      properties:
        users:
          items:
            $ref: '#/components/schemas/PrivateMessagesListSentForUserResponse_users_inner'
          type: array
        primary_groups:
          items: {}
          type: array
        topic_list:
          $ref: '#/components/schemas/PrivateMessagesListSentForUserResponse_topic_list'
      type: object
      x-konfig-is-used-in-successful-response: true
    SearchTermResultsResponse:
      additionalProperties: false
      example:
        grouped_search_result:
          can_create_topic: true
          tag_ids:
          - ""
          - ""
          user_ids:
          - ""
          - ""
          search_log_id: 0
          error: ""
          more_categories: ""
          more_posts: ""
          more_users: ""
          extra:
            categories: ""
          group_ids:
          - ""
          - ""
          term: term
          category_ids:
          - ""
          - ""
          more_full_page_results: ""
          post_ids:
          - ""
          - ""
        groups:
        - ""
        - ""
        categories:
        - ""
        - ""
        posts:
        - ""
        - ""
        users:
        - ""
        - ""
        tags:
        - ""
        - ""
      properties:
        tags:
          items: {}
          type: array
        posts:
          items: {}
          type: array
        users:
          items: {}
          type: array
        categories:
          items: {}
          type: array
        groups:
          items: {}
          type: array
        grouped_search_result:
          $ref: '#/components/schemas/SearchTermResultsResponse_grouped_search_result'
      required:
      - categories
      - grouped_search_result
      - groups
      - posts
      - tags
      - users
      type: object
      x-konfig-is-used-in-successful-response: true
    SiteGetCategoriesAndSubcategoriesResponse:
      additionalProperties: false
      example:
        user_color_schemes:
        - name: name
          id: 5
          is_dark: true
        - name: name
          id: 5
          is_dark: true
        hashtag_icons: "{}"
        user_field_max_length: 0
        topic_featured_link_allowed_category_ids:
        - ""
        - ""
        default_archetype: default_archetype
        wizard_required: true
        denied_emojis: ""
        displayed_about_plugin_stat_groups: ""
        post_action_types:
        - name_key: ""
          short_description: short_description
          is_custom_flag: true
          is_flag: true
          name: name
          description: description
          id: ""
        - name_key: ""
          short_description: short_description
          is_custom_flag: true
          is_flag: true
          name: name
          description: description
          id: ""
        user_tips:
          first_notification: 6
          post_menu: 1
          suggested_topics: 7
          topic_notification_levels: 4
          topic_timeline: 4
          admin_guide: 9
        watched_words_replace: ""
        tags_filter_regexp: tags_filter_regexp
        hashtag_configurations: "{}"
        user_fields:
        - ""
        - ""
        archetypes:
        - name: name
          options:
          - ""
          - ""
          id: id
        - name: name
          options:
          - ""
          - ""
          id: id
        topic_flag_types:
        - name_key: ""
          short_description: short_description
          is_custom_flag: true
          is_flag: true
          name: name
          description: description
          id: ""
        - name_key: ""
          short_description: short_description
          is_custom_flag: true
          is_flag: true
          name: name
          description: description
          id: ""
        trust_levels:
          newuser: 7
          leader: 0
          member: 3
          basic: 5
          regular: 4
        periods:
        - ""
        - ""
        can_create_tag: true
        can_associate_groups: true
        categories:
        - uploaded_background: ""
          color: color
          form_template_ids:
          - ""
          - ""
          uploaded_background_dark: ""
          navigate_to_first_post_after_read: true
          description: ""
          topic_template: ""
          parent_category_id: 8
          show_subcategory_list: true
          read_only_banner: ""
          uploaded_logo: ""
          description_excerpt: ""
          sort_ascending: ""
          num_featured_topics: 2
          allowed_tags:
          - ""
          - ""
          id: 4
          sort_order: ""
          default_view: ""
          slug: slug
          subcategory_list_style: subcategory_list_style
          has_children: true
          custom_fields:
            key: ""
          default_top_period: default_top_period
          can_edit: true
          description_text: ""
          permission: 3
          topic_count: 6
          uploaded_logo_dark: ""
          read_restricted: true
          allow_global_tags: true
          minimum_required_tags: 1
          topic_url: topic_url
          default_list_filter: default_list_filter
          allowed_tag_groups:
          - ""
          - ""
          name: name
          notification_level: 0
          text_color: text_color
          post_count: 8
          position: 4
          required_tag_groups:
          - name: name
            min_count: 9
          - name: name
            min_count: 9
        - uploaded_background: ""
          color: color
          form_template_ids:
          - ""
          - ""
          uploaded_background_dark: ""
          navigate_to_first_post_after_read: true
          description: ""
          topic_template: ""
          parent_category_id: 8
          show_subcategory_list: true
          read_only_banner: ""
          uploaded_logo: ""
          description_excerpt: ""
          sort_ascending: ""
          num_featured_topics: 2
          allowed_tags:
          - ""
          - ""
          id: 4
          sort_order: ""
          default_view: ""
          slug: slug
          subcategory_list_style: subcategory_list_style
          has_children: true
          custom_fields:
            key: ""
          default_top_period: default_top_period
          can_edit: true
          description_text: ""
          permission: 3
          topic_count: 6
          uploaded_logo_dark: ""
          read_restricted: true
          allow_global_tags: true
          minimum_required_tags: 1
          topic_url: topic_url
          default_list_filter: default_list_filter
          allowed_tag_groups:
          - ""
          - ""
          name: name
          notification_level: 0
          text_color: text_color
          post_count: 8
          position: 4
          required_tag_groups:
          - name: name
            min_count: 9
          - name: name
            min_count: 9
        watched_words_link: ""
        default_dark_color_scheme: ""
        censored_regexp:
        - "{}"
        - "{}"
        anonymous_top_menu_items:
        - ""
        - ""
        notification_types:
          private_message: 2
          replied: 6
          liked_consolidated: 9
          event_invitation: 6
          moved_post: 1
          chat_quoted: 3
          admin_problems: 7
          chat_message: 5
          liked: 5
          invited_to_private_message: 7
          posted: 3
          quoted: 1
          post_approved: 6
          group_message_summary: 4
          chat_invitation: 6
          following_created_topic: 6
          watching_first_post: 5
          circles_activity: 4
          mentioned: 0
          question_answer_user_commented: 0
          invited_to_topic: 6
          chat_group_mention: 3
          linked: 1
          granted_badge: 1
          bookmark_reminder: 3
          reaction: 6
          watching_category_or_tag: 2
          edited: 5
          code_review_commit_approved: 8
          chat_mention: 6
          custom: 7
          following_replied: 0
          invitee_accepted: 9
          event_reminder: 2
          topic_reminder: 9
          following: 7
          votes_released: 1
          new_features: 4
          group_mentioned: 1
          membership_request_accepted: 9
          assigned: 7
          membership_request_consolidated: 6
        custom_emoji_translation: "{}"
        post_types:
          small_action: 3
          whisper: 3
          regular: 8
          moderator_action: 7
        can_tag_topics: true
        navigation_menu_site_top_tags: ""
        top_tags:
        - ""
        - ""
        groups:
        - flair_bg_color: ""
          flair_color: ""
          name: name
          id: 0
          flair_url: ""
        - flair_bg_color: ""
          flair_color: ""
          name: name
          id: 0
          flair_url: ""
        user_themes:
        - default: true
          color_scheme_id: ""
          theme_id: 7
          name: name
        - default: true
          color_scheme_id: ""
          theme_id: 7
          name: name
        filters:
        - ""
        - ""
        can_tag_pms: true
        uncategorized_category_id: 9
        top_menu_items:
        - ""
        - ""
        auth_providers:
        - ""
        - ""
        whispers_allowed_groups_names: ""
        markdown_additional_options: "{}"
      properties:
        default_archetype:
          type: string
        notification_types:
          $ref: '#/components/schemas/SiteGetCategoriesAndSubcategoriesResponse_notification_types'
        post_types:
          $ref: '#/components/schemas/SiteGetCategoriesAndSubcategoriesResponse_post_types'
        trust_levels:
          $ref: '#/components/schemas/SiteGetCategoriesAndSubcategoriesResponse_trust_levels'
        user_tips:
          $ref: '#/components/schemas/SiteGetCategoriesAndSubcategoriesResponse_user_tips'
        groups:
          items:
            $ref: '#/components/schemas/SiteGetCategoriesAndSubcategoriesResponse_groups_inner'
          type: array
        filters:
          items: {}
          type: array
        periods:
          items: {}
          type: array
        top_menu_items:
          items: {}
          type: array
        anonymous_top_menu_items:
          items: {}
          type: array
        uncategorized_category_id:
          type: integer
        user_field_max_length:
          type: integer
        post_action_types:
          items:
            $ref: '#/components/schemas/SiteGetCategoriesAndSubcategoriesResponse_post_action_types_inner'
          type: array
        topic_flag_types:
          items:
            $ref: '#/components/schemas/SiteGetCategoriesAndSubcategoriesResponse_post_action_types_inner'
          type: array
        can_create_tag:
          type: boolean
        can_tag_topics:
          type: boolean
        can_tag_pms:
          type: boolean
        tags_filter_regexp:
          type: string
        top_tags:
          items: {}
          type: array
        wizard_required:
          type: boolean
        can_associate_groups:
          type: boolean
        topic_featured_link_allowed_category_ids:
          items: {}
          type: array
        user_themes:
          items:
            $ref: '#/components/schemas/SiteGetCategoriesAndSubcategoriesResponse_user_themes_inner'
          type: array
        user_color_schemes:
          items:
            $ref: '#/components/schemas/SiteGetCategoriesAndSubcategoriesResponse_user_color_schemes_inner'
          type: array
        default_dark_color_scheme: {}
        censored_regexp:
          items:
            type: object
          type: array
        custom_emoji_translation:
          properties: {}
          type: object
        watched_words_replace: {}
        watched_words_link: {}
        markdown_additional_options:
          type: object
        hashtag_configurations:
          type: object
        hashtag_icons:
          type: object
        displayed_about_plugin_stat_groups:
          type: array
        categories:
          items:
            $ref: '#/components/schemas/SiteGetCategoriesAndSubcategoriesResponse_categories_inner'
          type: array
        archetypes:
          items:
            $ref: '#/components/schemas/SiteGetCategoriesAndSubcategoriesResponse_archetypes_inner'
          type: array
        user_fields:
          items: {}
          type: array
        auth_providers:
          items: {}
          type: array
        whispers_allowed_groups_names:
          type: array
        denied_emojis:
          type: array
        navigation_menu_site_top_tags:
          type: array
      required:
      - anonymous_top_menu_items
      - archetypes
      - auth_providers
      - can_create_tag
      - can_tag_pms
      - can_tag_topics
      - categories
      - censored_regexp
      - custom_emoji_translation
      - default_archetype
      - default_dark_color_scheme
      - filters
      - groups
      - notification_types
      - periods
      - post_action_types
      - post_types
      - tags_filter_regexp
      - top_menu_items
      - top_tags
      - topic_featured_link_allowed_category_ids
      - topic_flag_types
      - trust_levels
      - uncategorized_category_id
      - user_color_schemes
      - user_field_max_length
      - user_fields
      - user_themes
      - watched_words_link
      - watched_words_replace
      type: object
      x-konfig-is-used-in-successful-response: true
    TagsGetTagGroupsResponse:
      example:
        tag_groups:
        - one_per_topic: true
          permissions:
            staff: 6
          name: name
          id: 0
          parent_tag_name:
          - ""
          - ""
          tag_names:
          - ""
          - ""
        - one_per_topic: true
          permissions:
            staff: 6
          name: name
          id: 0
          parent_tag_name:
          - ""
          - ""
          tag_names:
          - ""
          - ""
      properties:
        tag_groups:
          items:
            $ref: '#/components/schemas/TagsGetTagGroupsResponse_tag_groups_inner'
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    TagsCreateTagGroupResponse:
      example:
        tag_group:
          one_per_topic: true
          permissions: "{}"
          name: name
          id: 0
          parent_tag_name:
          - ""
          - ""
          tag_names:
          - ""
          - ""
      properties:
        tag_group:
          $ref: '#/components/schemas/TagsCreateTagGroupResponse_tag_group'
      required:
      - tag_group
      type: object
      x-konfig-is-used-in-successful-response: true
    TagsGetSingleTagGroupResponse:
      example:
        tag_group:
          one_per_topic: true
          permissions:
            everyone: 6
          name: name
          id: 0
          parent_tag_name:
          - ""
          - ""
          tag_names:
          - ""
          - ""
      properties:
        tag_group:
          $ref: '#/components/schemas/TagsGetSingleTagGroupResponse_tag_group'
      type: object
      x-konfig-is-used-in-successful-response: true
    TagsUpdateTagGroupResponse:
      example:
        success: success
        tag_group:
          one_per_topic: true
          permissions:
            everyone: 6
          name: name
          id: 0
          parent_tag_name:
          - ""
          - ""
          tag_names:
          - ""
          - ""
      properties:
        success:
          type: string
        tag_group:
          $ref: '#/components/schemas/TagsGetSingleTagGroupResponse_tag_group'
      type: object
      x-konfig-is-used-in-successful-response: true
    TagsListResponse:
      example:
        extras:
          categories:
          - ""
          - ""
        tags:
        - pm_count: 6
          count: 0
          target_tag: ""
          id: id
          text: text
        - pm_count: 6
          count: 0
          target_tag: ""
          id: id
          text: text
      properties:
        tags:
          items:
            $ref: '#/components/schemas/TagsListResponse_tags_inner'
          type: array
        extras:
          $ref: '#/components/schemas/TagsListResponse_extras'
      type: object
      x-konfig-is-used-in-successful-response: true
    TagsGetSpecificTagResponse:
      example:
        primary_groups:
        - ""
        - ""
        topic_list:
          can_create_topic: true
          per_page: 5
          topics:
          - unpinned: ""
            pinned: true
            featured_link: ""
            created_at: created_at
            bumped: true
            title: title
            last_read_post_number: 3
            liked: true
            archived: true
            has_summary: true
            fancy_title: fancy_title
            category_id: 1
            id: 5
            bumped_at: bumped_at
            slug: slug
            views: 7
            last_posted_at: last_posted_at
            visible: true
            like_count: 1
            image_url: ""
            unread_posts: 2
            bookmarked: true
            last_poster_username: last_poster_username
            posters:
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: extras
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: extras
            pinned_globally: true
            reply_count: 7
            tags:
            - ""
            - ""
            archetype: archetype
            highest_post_number: 9
            closed: true
            notification_level: 4
            unseen: true
            posts_count: 2
          - unpinned: ""
            pinned: true
            featured_link: ""
            created_at: created_at
            bumped: true
            title: title
            last_read_post_number: 3
            liked: true
            archived: true
            has_summary: true
            fancy_title: fancy_title
            category_id: 1
            id: 5
            bumped_at: bumped_at
            slug: slug
            views: 7
            last_posted_at: last_posted_at
            visible: true
            like_count: 1
            image_url: ""
            unread_posts: 2
            bookmarked: true
            last_poster_username: last_poster_username
            posters:
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: extras
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: extras
            pinned_globally: true
            reply_count: 7
            tags:
            - ""
            - ""
            archetype: archetype
            highest_post_number: 9
            closed: true
            notification_level: 4
            unseen: true
            posts_count: 2
          draft: ""
          draft_sequence: 1
          draft_key: draft_key
          tags:
          - name: name
            staff: true
            id: 0
            topic_count: 6
          - name: name
            staff: true
            id: 0
            topic_count: 6
        users:
        - name: ""
          id: 0
          avatar_template: avatar_template
          username: username
        - name: ""
          id: 0
          avatar_template: avatar_template
          username: username
      properties:
        users:
          items:
            $ref: '#/components/schemas/PrivateMessagesListSentForUserResponse_users_inner'
          type: array
        primary_groups:
          items: {}
          type: array
        topic_list:
          $ref: '#/components/schemas/TagsGetSpecificTagResponse_topic_list'
      type: object
      x-konfig-is-used-in-successful-response: true
    TopicsGetSpecificPostsResponse:
      example:
        id: 7
        post_stream:
          posts:
          - hidden: true
            flair_color: ""
            can_wiki: true
            moderator: true
            wiki: true
            created_at: created_at
            admin: true
            trust_level: 1
            score: 2.027123023002322
            can_view_edit_history: true
            reviewable_score_count: 1
            updated_at: updated_at
            actions_summary:
            - can_act: true
              id: 1
            - can_act: true
              id: 1
            incoming_link_count: 7
            can_delete: true
            post_type: 5
            id: 6
            topic_id: 4
            quote_count: 2
            readers_count: 3
            avatar_template: avatar_template
            read: true
            edit_reason: ""
            cooked: cooked
            reads: 9
            can_edit: true
            staff: true
            flair_url: ""
            reply_count: 5
            reply_to_post_number: ""
            version: 0
            deleted_at: ""
            flair_bg_color: ""
            reviewable_score_pending_count: 6
            user_id: 7
            reviewable_id: 1
            primary_group_name: ""
            can_recover: true
            name: ""
            user_title: ""
            user_deleted: true
            post_number: 1
            yours: true
            topic_slug: topic_slug
            flair_name: ""
            username: username
            display_username: ""
          - hidden: true
            flair_color: ""
            can_wiki: true
            moderator: true
            wiki: true
            created_at: created_at
            admin: true
            trust_level: 1
            score: 2.027123023002322
            can_view_edit_history: true
            reviewable_score_count: 1
            updated_at: updated_at
            actions_summary:
            - can_act: true
              id: 1
            - can_act: true
              id: 1
            incoming_link_count: 7
            can_delete: true
            post_type: 5
            id: 6
            topic_id: 4
            quote_count: 2
            readers_count: 3
            avatar_template: avatar_template
            read: true
            edit_reason: ""
            cooked: cooked
            reads: 9
            can_edit: true
            staff: true
            flair_url: ""
            reply_count: 5
            reply_to_post_number: ""
            version: 0
            deleted_at: ""
            flair_bg_color: ""
            reviewable_score_pending_count: 6
            user_id: 7
            reviewable_id: 1
            primary_group_name: ""
            can_recover: true
            name: ""
            user_title: ""
            user_deleted: true
            post_number: 1
            yours: true
            topic_slug: topic_slug
            flair_name: ""
            username: username
            display_username: ""
      properties:
        post_stream:
          $ref: '#/components/schemas/TopicsGetSpecificPostsResponse_post_stream'
        id:
          type: integer
      type: object
      x-konfig-is-used-in-successful-response: true
    TopicsGetSingleTopicResponse:
      additionalProperties: false
      example:
        has_deleted: true
        chunk_size: 7
        deleted_by: ""
        slow_mode_enabled_until: ""
        post_stream:
          stream:
          - ""
          - ""
          posts:
          - flair_color: ""
            moderator: true
            wiki: true
            trust_level: 1
            score: 2.027123023002322
            can_see_hidden_post: true
            can_view_edit_history: true
            reviewable_score_count: 6
            actions_summary:
            - can_act: true
              id: 7
            - can_act: true
              id: 7
            incoming_link_count: 7
            can_delete: true
            post_type: 5
            id: 6
            readers_count: 3
            read: true
            edit_reason: ""
            cooked: cooked
            reply_count: 5
            reply_to_post_number: ""
            version: 0
            deleted_at: ""
            user_id: 1
            can_recover: true
            name: name
            user_title: ""
            post_number: 1
            hidden: true
            can_wiki: true
            created_at: created_at
            admin: true
            updated_at: updated_at
            topic_id: 4
            quote_count: 2
            avatar_template: avatar_template
            bookmarked: true
            reads: 9
            can_edit: true
            staff: true
            flair_url: ""
            flair_bg_color: ""
            reviewable_score_pending_count: 7
            reviewable_id: 1
            primary_group_name: ""
            link_counts:
            - internal: true
              reflection: true
              clicks: 7
              title: title
              url: url
            - internal: true
              reflection: true
              clicks: 7
              title: title
              url: url
            user_deleted: true
            yours: true
            topic_slug: topic_slug
            flair_name: ""
            username: username
            display_username: display_username
          - flair_color: ""
            moderator: true
            wiki: true
            trust_level: 1
            score: 2.027123023002322
            can_see_hidden_post: true
            can_view_edit_history: true
            reviewable_score_count: 6
            actions_summary:
            - can_act: true
              id: 7
            - can_act: true
              id: 7
            incoming_link_count: 7
            can_delete: true
            post_type: 5
            id: 6
            readers_count: 3
            read: true
            edit_reason: ""
            cooked: cooked
            reply_count: 5
            reply_to_post_number: ""
            version: 0
            deleted_at: ""
            user_id: 1
            can_recover: true
            name: name
            user_title: ""
            post_number: 1
            hidden: true
            can_wiki: true
            created_at: created_at
            admin: true
            updated_at: updated_at
            topic_id: 4
            quote_count: 2
            avatar_template: avatar_template
            bookmarked: true
            reads: 9
            can_edit: true
            staff: true
            flair_url: ""
            flair_bg_color: ""
            reviewable_score_pending_count: 7
            reviewable_id: 1
            primary_group_name: ""
            link_counts:
            - internal: true
              reflection: true
              clicks: 7
              title: title
              url: url
            - internal: true
              reflection: true
              clicks: 7
              title: title
              url: url
            user_deleted: true
            yours: true
            topic_slug: topic_slug
            flair_name: ""
            username: username
            display_username: display_username
        timeline_lookup:
        - ""
        - ""
        bookmarks:
        - ""
        - ""
        fancy_title: fancy_title
        actions_summary:
        - hidden: true
          count: 3
          can_act: true
          id: 3
        - hidden: true
          count: 3
          can_act: true
          id: 3
        draft: ""
        draft_sequence: 5
        draft_key: draft_key
        details:
          last_poster:
            name: name
            id: 0
            avatar_template: avatar_template
            username: username
          can_reply_as_new_topic: true
          can_edit: true
          can_invite_via_email: true
          can_pin_unpin_topic: true
          can_flag_topic: true
          created_by:
            name: name
            id: 0
            avatar_template: avatar_template
            username: username
          can_remove_allowed_users: true
          can_split_merge_topic: true
          can_moderate_category: true
          can_invite_to: true
          can_delete: true
          can_remove_self_id: 0
          can_toggle_topic_visibility: true
          notification_level: 6
          can_edit_staff_notes: true
          can_create_post: true
          can_archive_topic: true
          can_convert_topic: true
          can_close_topic: true
          can_move_posts: true
          can_review_topic: true
          participants:
          - flair_color: ""
            moderator: true
            admin: true
            trust_level: 7
            flair_url: ""
            flair_bg_color: ""
            primary_group_name: ""
            name: name
            id: 4
            post_count: 8
            flair_group_id: ""
            avatar_template: avatar_template
            flair_name: ""
            username: username
          - flair_color: ""
            moderator: true
            admin: true
            trust_level: 7
            flair_url: ""
            flair_bg_color: ""
            primary_group_name: ""
            name: name
            id: 4
            post_count: 8
            flair_group_id: ""
            avatar_template: avatar_template
            flair_name: ""
            username: username
        id: 9
        tags_descriptions: "{}"
        slug: slug
        like_count: 1
        visible: true
        image_url: ""
        reply_count: 6
        deleted_at: ""
        tags:
        - ""
        - ""
        show_read_indicator: true
        user_id: 6
        pinned_until: ""
        highest_post_number: ""
        unpinned: ""
        pinned: true
        suggested_topics:
        - unpinned: ""
          pinned: true
          featured_link: ""
          created_at: created_at
          bumped: true
          title: title
          liked: ""
          archived: true
          fancy_title: fancy_title
          category_id: 8
          id: 1
          tags_descriptions: "{}"
          bumped_at: bumped_at
          slug: slug
          views: 6
          last_posted_at: ""
          visible: true
          like_count: 9
          image_url: ""
          bookmarked: ""
          posters:
          - description: description
            extras: extras
            user:
              name: name
              id: 0
              avatar_template: avatar_template
              username: username
          - description: description
            extras: extras
            user:
              name: name
              id: 0
              avatar_template: avatar_template
              username: username
          reply_count: 5
          tags:
          - ""
          - ""
          archetype: archetype
          highest_post_number: 9
          closed: true
          excerpt: excerpt
          unseen: true
          posts_count: 4
        - unpinned: ""
          pinned: true
          featured_link: ""
          created_at: created_at
          bumped: true
          title: title
          liked: ""
          archived: true
          fancy_title: fancy_title
          category_id: 8
          id: 1
          tags_descriptions: "{}"
          bumped_at: bumped_at
          slug: slug
          views: 6
          last_posted_at: ""
          visible: true
          like_count: 9
          image_url: ""
          bookmarked: ""
          posters:
          - description: description
            extras: extras
            user:
              name: name
              id: 0
              avatar_template: avatar_template
              username: username
          - description: description
            extras: extras
            user:
              name: name
              id: 0
              avatar_template: avatar_template
              username: username
          reply_count: 5
          tags:
          - ""
          - ""
          archetype: archetype
          highest_post_number: 9
          closed: true
          excerpt: excerpt
          unseen: true
          posts_count: 4
        current_post_number: 6
        featured_link: ""
        created_at: created_at
        topic_timer: ""
        title: title
        slow_mode_seconds: 6
        archived: true
        has_summary: true
        word_count: ""
        category_id: 2
        pinned_at: ""
        summarizable: true
        views: 3
        last_posted_at: ""
        message_bus_last_id: 0
        bookmarked: true
        pinned_globally: true
        archetype: archetype
        participant_count: 7
        closed: true
        thumbnails: ""
        posts_count: 6
      properties:
        tags:
          items: {}
          type: array
        title:
          type: string
        post_stream:
          $ref: '#/components/schemas/TopicsGetSingleTopicResponse_post_stream'
        timeline_lookup:
          items: {}
          type: array
        suggested_topics:
          items:
            $ref: '#/components/schemas/TopicsGetSingleTopicResponse_suggested_topics_inner'
          type: array
        tags_descriptions:
          properties: {}
          type: object
        id:
          type: integer
        fancy_title:
          type: string
        posts_count:
          type: integer
        created_at:
          type: string
        views:
          type: integer
        reply_count:
          type: integer
        like_count:
          type: integer
        last_posted_at: {}
        visible:
          type: boolean
        closed:
          type: boolean
        archived:
          type: boolean
        has_summary:
          type: boolean
        archetype:
          type: string
        slug:
          type: string
        category_id:
          type: integer
        word_count: {}
        deleted_at: {}
        user_id:
          type: integer
        featured_link: {}
        pinned_globally:
          type: boolean
        pinned_at: {}
        pinned_until: {}
        image_url: {}
        slow_mode_seconds:
          type: integer
        draft: {}
        draft_key:
          type: string
        draft_sequence:
          type: integer
        unpinned: {}
        pinned:
          type: boolean
        current_post_number:
          type: integer
        highest_post_number: {}
        deleted_by: {}
        has_deleted:
          type: boolean
        actions_summary:
          items:
            $ref: '#/components/schemas/TopicsGetSingleTopicResponse_actions_summary_inner'
          type: array
        chunk_size:
          type: integer
        bookmarked:
          type: boolean
        bookmarks:
          items: {}
          type: array
        topic_timer: {}
        message_bus_last_id:
          type: integer
        participant_count:
          type: integer
        show_read_indicator:
          type: boolean
        thumbnails: {}
        slow_mode_enabled_until: {}
        summarizable:
          type: boolean
        details:
          $ref: '#/components/schemas/TopicsGetSingleTopicResponse_details'
      required:
      - actions_summary
      - archetype
      - archived
      - bookmarked
      - bookmarks
      - category_id
      - chunk_size
      - closed
      - created_at
      - deleted_at
      - deleted_by
      - details
      - draft
      - draft_key
      - draft_sequence
      - fancy_title
      - featured_link
      - has_deleted
      - has_summary
      - highest_post_number
      - id
      - image_url
      - last_posted_at
      - like_count
      - message_bus_last_id
      - participant_count
      - pinned
      - pinned_at
      - pinned_globally
      - pinned_until
      - post_stream
      - posts_count
      - reply_count
      - show_read_indicator
      - slow_mode_enabled_until
      - slow_mode_seconds
      - slug
      - suggested_topics
      - summarizable
      - tags
      - tags_descriptions
      - thumbnails
      - timeline_lookup
      - title
      - topic_timer
      - unpinned
      - user_id
      - views
      - visible
      - word_count
      type: object
      x-konfig-is-used-in-successful-response: true
    TopicsUpdateTopicByIdJsonResponse:
      example:
        basic_topic:
          fancy_title: fancy_title
          id: 0
          title: title
          slug: slug
          posts_count: 6
      properties:
        basic_topic:
          $ref: '#/components/schemas/TopicsUpdateTopicByIdJsonResponse_basic_topic'
      type: object
      x-konfig-is-used-in-successful-response: true
    TopicsSendInviteToTopicResponse:
      example:
        user:
          name: name
          id: 0
          avatar_template: avatar_template
          username: username
      properties:
        user:
          $ref: '#/components/schemas/PrivateMessagesListForUserResponse_users_inner'
      type: object
      x-konfig-is-used-in-successful-response: true
    TopicsUpdateStatusOfTopicResponse:
      example:
        success: OK
        topic_status_update: ""
      properties:
        success:
          example: OK
          type: string
          x-konfig-original-example: OK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TopicsUpdateStatusOfTopicResponse-properties-success
        topic_status_update: {}
      type: object
      x-konfig-is-used-in-successful-response: true
    TopicsGetLatestTopicsResponse:
      example:
        primary_groups:
        - ""
        - ""
        topic_list:
          can_create_topic: true
          per_page: 6
          topics:
          - unpinned: ""
            pinned: true
            featured_link: ""
            created_at: created_at
            bumped: true
            title: title
            last_read_post_number: 7
            liked: true
            archived: true
            has_summary: true
            fancy_title: fancy_title
            category_id: 7
            id: 1
            bumped_at: bumped_at
            slug: slug
            views: 2
            last_posted_at: last_posted_at
            visible: true
            like_count: 4
            image_url: image_url
            unread_posts: 9
            bookmarked: true
            last_poster_username: last_poster_username
            posters:
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: extras
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: extras
            pinned_globally: true
            reply_count: 5
            op_like_count: 1
            archetype: archetype
            highest_post_number: 2
            closed: true
            notification_level: 3
            unseen: true
            posts_count: 5
          - unpinned: ""
            pinned: true
            featured_link: ""
            created_at: created_at
            bumped: true
            title: title
            last_read_post_number: 7
            liked: true
            archived: true
            has_summary: true
            fancy_title: fancy_title
            category_id: 7
            id: 1
            bumped_at: bumped_at
            slug: slug
            views: 2
            last_posted_at: last_posted_at
            visible: true
            like_count: 4
            image_url: image_url
            unread_posts: 9
            bookmarked: true
            last_poster_username: last_poster_username
            posters:
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: extras
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: extras
            pinned_globally: true
            reply_count: 5
            op_like_count: 1
            archetype: archetype
            highest_post_number: 2
            closed: true
            notification_level: 3
            unseen: true
            posts_count: 5
          draft: ""
          draft_sequence: 0
          draft_key: draft_key
        users:
        - name: ""
          id: 0
          avatar_template: avatar_template
          username: username
        - name: ""
          id: 0
          avatar_template: avatar_template
          username: username
      properties:
        users:
          items:
            $ref: '#/components/schemas/PrivateMessagesListSentForUserResponse_users_inner'
          type: array
        primary_groups:
          items: {}
          type: array
        topic_list:
          $ref: '#/components/schemas/TopicsGetLatestTopicsResponse_topic_list'
      type: object
      x-konfig-is-used-in-successful-response: true
    TopicsGetTopTopicsByPeriodResponse:
      example:
        primary_groups:
        - ""
        - ""
        topic_list:
          can_create_topic: true
          per_page: 6
          topics:
          - unpinned: true
            pinned: true
            featured_link: ""
            created_at: created_at
            bumped: true
            title: title
            last_read_post_number: 7
            liked: true
            archived: true
            has_summary: true
            fancy_title: fancy_title
            category_id: 7
            id: 1
            bumped_at: bumped_at
            slug: slug
            views: 2
            last_posted_at: last_posted_at
            visible: true
            like_count: 4
            image_url: ""
            unread_posts: 9
            bookmarked: true
            last_poster_username: last_poster_username
            posters:
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: ""
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: ""
            pinned_globally: true
            reply_count: 5
            op_like_count: 1
            archetype: archetype
            highest_post_number: 2
            closed: true
            notification_level: 3
            unseen: true
            posts_count: 5
          - unpinned: true
            pinned: true
            featured_link: ""
            created_at: created_at
            bumped: true
            title: title
            last_read_post_number: 7
            liked: true
            archived: true
            has_summary: true
            fancy_title: fancy_title
            category_id: 7
            id: 1
            bumped_at: bumped_at
            slug: slug
            views: 2
            last_posted_at: last_posted_at
            visible: true
            like_count: 4
            image_url: ""
            unread_posts: 9
            bookmarked: true
            last_poster_username: last_poster_username
            posters:
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: ""
            - primary_group_id: ""
              user_id: 1
              description: description
              extras: ""
            pinned_globally: true
            reply_count: 5
            op_like_count: 1
            archetype: archetype
            highest_post_number: 2
            closed: true
            notification_level: 3
            unseen: true
            posts_count: 5
          draft: ""
          draft_sequence: 0
          draft_key: draft_key
          for_period: for_period
        users:
        - name: name
          id: 0
          avatar_template: avatar_template
          username: username
        - name: name
          id: 0
          avatar_template: avatar_template
          username: username
      properties:
        users:
          items:
            $ref: '#/components/schemas/PrivateMessagesListForUserResponse_users_inner'
          type: array
        primary_groups:
          items: {}
          type: array
        topic_list:
          $ref: '#/components/schemas/TopicsGetTopTopicsByPeriodResponse_topic_list'
      type: object
      x-konfig-is-used-in-successful-response: true
    TopicsSetNotificationLevelResponse:
      example:
        success: OK
      properties:
        success:
          example: OK
          type: string
          x-konfig-original-example: OK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TopicsSetNotificationLevelResponse-properties-success
      type: object
      x-konfig-is-used-in-successful-response: true
    TopicsUpdateTimestampJsonResponse:
      example:
        success: OK
      properties:
        success:
          example: OK
          type: string
          x-konfig-original-example: OK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TopicsUpdateTimestampJsonResponse-properties-success
      type: object
      x-konfig-is-used-in-successful-response: true
    TopicsCreateTopicTimerResponse:
      example:
        duration: ""
        category_id: ""
        success: OK
        closed: true
        execute_at: execute_at
        based_on_last_post: true
      properties:
        success:
          example: OK
          type: string
          x-konfig-original-example: OK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TopicsCreateTopicTimerResponse-properties-success
        execute_at:
          type: string
        duration: {}
        based_on_last_post:
          type: boolean
        closed:
          type: boolean
        category_id: {}
      type: object
      x-konfig-is-used-in-successful-response: true
    UploadsCreateNewUploadResponse:
      additionalProperties: false
      example:
        extension: extension
        filesize: 6
        retain_hours: ""
        url: url
        thumbnail_height: 2
        short_url: short_url
        original_filename: original_filename
        dominant_color: ""
        width: 1
        thumbnail_width: 5
        id: 0
        short_path: short_path
        human_filesize: human_filesize
        height: 5
      properties:
        id:
          type: integer
        url:
          type: string
        original_filename:
          type: string
        filesize:
          type: integer
        width:
          type: integer
        height:
          type: integer
        thumbnail_width:
          type: integer
        thumbnail_height:
          type: integer
        extension:
          type: string
        short_url:
          type: string
        short_path:
          type: string
        retain_hours: {}
        human_filesize:
          type: string
        dominant_color: {}
      required:
      - extension
      - filesize
      - height
      - human_filesize
      - id
      - original_filename
      - retain_hours
      - short_path
      - short_url
      - thumbnail_height
      - thumbnail_width
      - url
      - width
      type: object
      x-konfig-is-used-in-successful-response: true
    UploadsInitiateDirectExternalUploadResponse:
      additionalProperties: false
      example:
        unique_identifier: 66e86218-80d9-4bda-b4d5-2b6def968705
        signed_headers:
          x-amz-acl: private
          x-amz-meta-sha1-checksum: sha1
        key: temp/site/uploads/default/12345/67890.jpg
        url: https://file-uploads.s3.us-west-2.amazonaws.com/temp/site/uploads/default/123/456.jpg?x-amz-acl=private&x-amz-meta-sha1-checksum=sha1&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AAAAus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20211221T011246Z&X-Amz-Expires=600&X-Amz-SignedHeaders=host&X-Amz-Signature=12345678
      properties:
        key:
          description: |-
            The path of the temporary file on the external storage
            service.
          example: temp/site/uploads/default/12345/67890.jpg
          type: string
          x-konfig-original-example: temp/site/uploads/default/12345/67890.jpg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsInitiateDirectExternalUploadResponse-properties-key
        url:
          description: |-
            A presigned PUT URL which must be used to upload
            the file binary blob to.
          example: https://file-uploads.s3.us-west-2.amazonaws.com/temp/site/uploads/default/123/456.jpg?x-amz-acl=private&x-amz-meta-sha1-checksum=sha1&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AAAAus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20211221T011246Z&X-Amz-Expires=600&X-Amz-SignedHeaders=host&X-Amz-Signature=12345678
          type: string
          x-konfig-original-example: https://file-uploads.s3.us-west-2.amazonaws.com/temp/site/uploads/default/123/456.jpg?x-amz-acl=private&x-amz-meta-sha1-checksum=sha1&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AAAAus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20211221T011246Z&X-Amz-Expires=600&X-Amz-SignedHeaders=host&X-Amz-Signature=12345678
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsInitiateDirectExternalUploadResponse-properties-url
        signed_headers:
          description: A map of headers that must be sent with the PUT request.
          example:
            x-amz-acl: private
            x-amz-meta-sha1-checksum: sha1
          type: object
          x-konfig-original-example:
            x-amz-acl: private
            x-amz-meta-sha1-checksum: sha1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsInitiateDirectExternalUploadResponse-properties-signed_headers
        unique_identifier:
          description: |-
            A unique string that identifies the external upload.
            This must be stored and then sent in the /complete-external-upload
            endpoint to complete the direct upload.
          example: 66e86218-80d9-4bda-b4d5-2b6def968705
          type: string
          x-konfig-original-example: 66e86218-80d9-4bda-b4d5-2b6def968705
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsInitiateDirectExternalUploadResponse-properties-unique_identifier
      type: object
      x-konfig-is-used-in-successful-response: true
    UploadsCompleteExternalUploadResponse:
      additionalProperties: false
      example:
        extension: extension
        filesize: 6
        retain_hours: ""
        url: url
        thumbnail_height: 2
        short_url: short_url
        original_filename: original_filename
        dominant_color: ""
        width: 1
        thumbnail_width: 5
        id: 0
        short_path: short_path
        human_filesize: human_filesize
        height: 5
      properties:
        id:
          type: integer
        url:
          type: string
        original_filename:
          type: string
        filesize:
          type: integer
        width:
          type: integer
        height:
          type: integer
        thumbnail_width:
          type: integer
        thumbnail_height:
          type: integer
        extension:
          type: string
        short_url:
          type: string
        short_path:
          type: string
        retain_hours: {}
        human_filesize:
          type: string
        dominant_color: {}
      required:
      - extension
      - filesize
      - height
      - human_filesize
      - id
      - original_filename
      - retain_hours
      - short_path
      - short_url
      - thumbnail_height
      - thumbnail_width
      - url
      - width
      type: object
      x-konfig-is-used-in-successful-response: true
    UploadsCreateMultipartExternalUploadResponse:
      additionalProperties: false
      example:
        unique_identifier: 66e86218-80d9-4bda-b4d5-2b6def968705
        external_upload_identifier: 84x83tmxy398t3y._Q_z8CoJYVr69bE6D7f8J6Oo0434QquLFoYdGVerWFx9X5HDEI_TP_95c34n853495x35345394.d.ghQ
        key: temp/site/uploads/default/12345/67890.jpg
      properties:
        key:
          description: |-
            The path of the temporary file on the external storage
            service.
          example: temp/site/uploads/default/12345/67890.jpg
          type: string
          x-konfig-original-example: temp/site/uploads/default/12345/67890.jpg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCreateMultipartExternalUploadResponse-properties-key
        external_upload_identifier:
          description: |-
            The identifier of the multipart upload in the external
            storage provider. This is the multipart upload_id in AWS S3.
          example: 84x83tmxy398t3y._Q_z8CoJYVr69bE6D7f8J6Oo0434QquLFoYdGVerWFx9X5HDEI_TP_95c34n853495x35345394.d.ghQ
          type: string
          x-konfig-original-example: 84x83tmxy398t3y._Q_z8CoJYVr69bE6D7f8J6Oo0434QquLFoYdGVerWFx9X5HDEI_TP_95c34n853495x35345394.d.ghQ
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCreateMultipartExternalUploadResponse-properties-external_upload_identifier
        unique_identifier:
          description: |-
            A unique string that identifies the external upload.
            This must be stored and then sent in the /complete-multipart
            and /batch-presign-multipart-parts endpoints.
          example: 66e86218-80d9-4bda-b4d5-2b6def968705
          type: string
          x-konfig-original-example: 66e86218-80d9-4bda-b4d5-2b6def968705
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCreateMultipartExternalUploadResponse-properties-unique_identifier
      required:
      - external_upload_identifier
      - key
      - unique_identifier
      type: object
      x-konfig-is-used-in-successful-response: true
    UploadsGeneratePresignedUrlsForMultipartPartsResponse:
      additionalProperties: false
      example:
        presigned_urls:
          "1": https://discourse-martin-uploads-test.s3.us-east-2.amazonaws.com/temp/uploads/default/123abc/123abc.jpg?partNumber=1&uploadId=123456abcd&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=test&X-Amz-Date=20211222T012336Z&X-Amz-Expires=600&X-Amz-SignedHeaders=host&X-Amz-Signature=abc123
      properties:
        presigned_urls:
          description: |-
            The presigned URLs for each part number, which has
            the part numbers as keys.
          example:
            "1": https://discourse-martin-uploads-test.s3.us-east-2.amazonaws.com/temp/uploads/default/123abc/123abc.jpg?partNumber=1&uploadId=123456abcd&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=test&X-Amz-Date=20211222T012336Z&X-Amz-Expires=600&X-Amz-SignedHeaders=host&X-Amz-Signature=abc123
          type: object
          x-konfig-original-example:
            "1": https://discourse-martin-uploads-test.s3.us-east-2.amazonaws.com/temp/uploads/default/123abc/123abc.jpg?partNumber=1&uploadId=123456abcd&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=test&X-Amz-Date=20211222T012336Z&X-Amz-Expires=600&X-Amz-SignedHeaders=host&X-Amz-Signature=abc123
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsGeneratePresignedUrlsForMultipartPartsResponse-properties-presigned_urls
      required:
      - presigned_urls
      type: object
      x-konfig-is-used-in-successful-response: true
    UploadsAbortMultipartUploadResponse:
      additionalProperties: false
      example:
        success: OK
      properties:
        success:
          example: OK
          type: string
          x-konfig-original-example: OK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsAbortMultipartUploadResponse-properties-success
      required:
      - success
      type: object
      x-konfig-is-used-in-successful-response: true
    UploadsCompleteMultipartUploadResponse:
      additionalProperties: false
      example:
        extension: extension
        filesize: 6
        retain_hours: ""
        url: url
        thumbnail_height: 2
        short_url: short_url
        original_filename: original_filename
        dominant_color: ""
        width: 1
        thumbnail_width: 5
        id: 0
        short_path: short_path
        human_filesize: human_filesize
        height: 5
      properties:
        id:
          type: integer
        url:
          type: string
        original_filename:
          type: string
        filesize:
          type: integer
        width:
          type: integer
        height:
          type: integer
        thumbnail_width:
          type: integer
        thumbnail_height:
          type: integer
        extension:
          type: string
        short_url:
          type: string
        short_path:
          type: string
        retain_hours: {}
        human_filesize:
          type: string
        dominant_color: {}
      required:
      - extension
      - filesize
      - height
      - human_filesize
      - id
      - original_filename
      - retain_hours
      - short_path
      - short_url
      - thumbnail_height
      - thumbnail_width
      - url
      - width
      type: object
      x-konfig-is-used-in-successful-response: true
    BadgesListUserBadgesResponse:
      additionalProperties: false
      example:
        badges:
        - listable: true
          image_url: ""
          icon: icon
          description: description
          multiple_grant: true
          enabled: true
          manually_grantable: true
          grant_count: 6
          system: true
          badge_type_id: 5
          badge_grouping_id: 1
          name: name
          allow_title: true
          id: 0
          slug: slug
        - listable: true
          image_url: ""
          icon: icon
          description: description
          multiple_grant: true
          enabled: true
          manually_grantable: true
          grant_count: 6
          system: true
          badge_type_id: 5
          badge_grouping_id: 1
          name: name
          allow_title: true
          id: 0
          slug: slug
        badge_types:
        - name: name
          id: 5
          sort_order: 2
        - name: name
          id: 5
          sort_order: 2
        granted_bies:
        - moderator: true
          name: name
          admin: true
          trust_level: 2
          id: 5
          avatar_template: avatar_template
          flair_name: ""
          username: username
        - moderator: true
          name: name
          admin: true
          trust_level: 2
          id: 5
          avatar_template: avatar_template
          flair_name: ""
          username: username
        user_badges:
        - granted_at: granted_at
          grouping_position: 9
          is_favorite: ""
          granted_by_id: 2
          badge_id: 3
          id: 7
          can_favorite: true
        - granted_at: granted_at
          grouping_position: 9
          is_favorite: ""
          granted_by_id: 2
          badge_id: 3
          id: 7
          can_favorite: true
      properties:
        badges:
          items:
            $ref: '#/components/schemas/BadgesListUserBadgesResponse_badges_inner'
          type: array
        badge_types:
          items:
            $ref: '#/components/schemas/BadgesListResponse_badge_types_inner'
          type: array
        granted_bies:
          items:
            $ref: '#/components/schemas/BadgesListUserBadgesResponse_granted_bies_inner'
          type: array
        user_badges:
          items:
            $ref: '#/components/schemas/BadgesListUserBadgesResponse_user_badges_inner'
          type: array
      required:
      - user_badges
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersCreateUserResponse:
      additionalProperties: false
      example:
        user_id: 0
        success: true
        active: true
        message: message
      properties:
        success:
          type: boolean
        active:
          type: boolean
        message:
          type: string
        user_id:
          type: integer
      required:
      - active
      - message
      - success
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersGetUserByUsernameResponse:
      additionalProperties: false
      example:
        user:
          group_users:
          - owner: true
            group_id: 5
            user_id: 6
            notification_level: 3
          - owner: true
            group_id: 5
            user_id: 6
            notification_level: 3
          recent_time_read: 5
          flair_color: ""
          moderator: true
          trust_level: 6
          tracked_category_ids:
          - ""
          - ""
          muted_tags:
          - ""
          - ""
          user_fields:
            "1": ""
            "2": ""
          can_send_private_messages: true
          user_notification_schedule:
            day_0_end_time: 1
            day_5_start_time: 9
            day_0_start_time: 7
            day_2_start_time: 6
            day_6_end_time: 9
            day_1_end_time: 1
            enabled: true
            day_5_end_time: 6
            day_6_start_time: 8
            day_2_end_time: 7
            day_3_start_time: 1
            day_1_start_time: 1
            day_4_end_time: 9
            day_4_start_time: 5
            day_3_end_time: 4
          sidebar_category_ids: ""
          id: 0
          second_factor_enabled: true
          can_delete_all_posts: true
          can_change_location: true
          uploaded_avatar_id: ""
          ignored: true
          regular_category_ids:
          - ""
          - ""
          watching_first_post_tags:
          - ""
          - ""
          can_send_private_message_to_user: true
          tracked_tags:
          - ""
          - ""
          custom_fields:
            first_name: ""
          pending_posts_count: 7
          can_mute_user: true
          can_edit_email: true
          profile_view_count: 9
          can_change_tracking_preferences: true
          sidebar_tags: ""
          featured_user_badge_ids:
          - ""
          - ""
          can_edit_name: true
          name: name
          system_avatar_upload_id: ""
          allowed_pm_usernames:
          - ""
          - ""
          post_count: 3
          badge_count: 1
          display_sidebar_tags: true
          primary_group_id: ""
          use_logo_small_as_avatar: true
          user_api_keys: ""
          created_at: created_at
          admin: true
          title: ""
          locale: ""
          can_change_website: true
          muted_category_ids:
          - ""
          - ""
          watched_tags:
          - ""
          - ""
          muted_usernames:
          - ""
          - ""
          can_be_deleted: true
          system_avatar_template: system_avatar_template
          mailing_list_posts_per_day: 2
          can_change_bio: true
          has_title_badges: true
          muted: true
          featured_topic: ""
          avatar_template: avatar_template
          last_posted_at: ""
          can_upload_profile_header: true
          second_factor_backup_enabled: true
          time_read: 5
          can_upload_user_card_background: true
          can_edit: true
          groups:
          - mentionable_level: 6
            public_admission: true
            primary_group: true
            flair_color: ""
            title: ""
            can_see_members: true
            publish_read_state: true
            visibility_level: 2
            id: 6
            allow_membership_requests: true
            messageable_level: 1
            grant_trust_level: ""
            automatic: true
            bio_raw: ""
            flair_url: ""
            display_name: display_name
            public_exit: true
            members_visibility_level: 6
            bio_excerpt: ""
            flair_bg_color: ""
            full_name: ""
            default_notification_level: 6
            user_count: 3
            membership_request_template: ""
            name: name
            incoming_email: ""
            has_messages: true
            can_admin_group: true
            bio_cooked: ""
          - mentionable_level: 6
            public_admission: true
            primary_group: true
            flair_color: ""
            title: ""
            can_see_members: true
            publish_read_state: true
            visibility_level: 2
            id: 6
            allow_membership_requests: true
            messageable_level: 1
            grant_trust_level: ""
            automatic: true
            bio_raw: ""
            flair_url: ""
            display_name: display_name
            public_exit: true
            members_visibility_level: 6
            bio_excerpt: ""
            flair_bg_color: ""
            full_name: ""
            default_notification_level: 6
            user_count: 3
            membership_request_template: ""
            name: name
            incoming_email: ""
            has_messages: true
            can_admin_group: true
            bio_cooked: ""
          user_option:
            email_messages_level: 7
            title_count_mode: title_count_mode
            timezone: ""
            email_level: 0
            dynamic_favicon: true
            theme_key_seq: 7
            theme_ids:
            - ""
            - ""
            topics_unread_when_closed: true
            email_digests: true
            hide_profile_and_presence: true
            watched_precedence_over_muted: ""
            color_scheme_id: ""
            oldest_search_log_date: ""
            skip_new_user_tips: true
            bookmark_auto_delete_preference: 6
            homepage_id: ""
            digest_after_minutes: 0
            sidebar_show_count_of_new_items: true
            auto_track_topics_after_msecs: 4
            seen_popups: ""
            new_topic_duration_minutes: 7
            notification_level_when_replying: 8
            allow_private_messages: true
            text_size_seq: 5
            enable_allowed_pm_users: true
            like_notification_frequency: 3
            dark_scheme_id: ""
            enable_quoting: true
            automatically_unpin_topics: true
            enable_defer: true
            email_in_reply_to: true
            text_size: text_size
            user_id: 3
            mailing_list_mode_frequency: 7
            mailing_list_mode: true
            include_tl0_in_digests: true
            external_links_in_new_tab: true
            email_previous_replies: 3
            default_calendar: default_calendar
            sidebar_link_to_filtered_list: true
          flair_url: ""
          staged: true
          ignored_usernames:
          - ""
          - ""
          invited_by: ""
          watched_first_post_category_ids:
          - ""
          - ""
          flair_bg_color: ""
          pending_count: 2
          primary_group_name: ""
          can_edit_username: true
          can_ignore_user: true
          user_auth_tokens:
          - is_active: true
            os: os
            browser: browser
            icon: icon
            created_at: created_at
            client_ip: client_ip
            location: location
            id: 4
            device: device
            seen_at: seen_at
          - is_active: true
            os: os
            browser: browser
            icon: icon
            created_at: created_at
            client_ip: client_ip
            location: location
            id: 4
            device: device
            seen_at: seen_at
          last_seen_at: ""
          flair_group_id: ""
          flair_name: ""
          user_passkeys: ""
          username: username
          watched_category_ids:
          - ""
          - ""
        user_badges:
        - ""
        - ""
      properties:
        user_badges:
          items: {}
          type: array
        user:
          $ref: '#/components/schemas/UsersGetUserByUsernameResponse_user'
      required:
      - user
      - user_badges
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersUpdateUserDetailsResponse:
      additionalProperties: false
      example:
        success: success
        user: "{}"
      properties:
        success:
          type: string
        user:
          type: object
      required:
      - success
      - user
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersGetUserByExternalIdResponse:
      additionalProperties: false
      example:
        user:
          group_users:
          - owner: true
            group_id: 5
            user_id: 6
            notification_level: 3
          - owner: true
            group_id: 5
            user_id: 6
            notification_level: 3
          recent_time_read: 5
          flair_color: ""
          moderator: true
          trust_level: 6
          tracked_category_ids:
          - ""
          - ""
          muted_tags:
          - ""
          - ""
          user_fields:
            "1": ""
            "2": ""
          can_send_private_messages: true
          user_notification_schedule:
            day_0_end_time: 1
            day_5_start_time: 9
            day_0_start_time: 7
            day_2_start_time: 6
            day_6_end_time: 9
            day_1_end_time: 1
            enabled: true
            day_5_end_time: 6
            day_6_start_time: 8
            day_2_end_time: 7
            day_3_start_time: 1
            day_1_start_time: 1
            day_4_end_time: 9
            day_4_start_time: 5
            day_3_end_time: 4
          sidebar_category_ids: ""
          id: 0
          second_factor_enabled: true
          can_delete_all_posts: true
          can_change_location: true
          uploaded_avatar_id: ""
          ignored: true
          regular_category_ids:
          - ""
          - ""
          watching_first_post_tags:
          - ""
          - ""
          can_send_private_message_to_user: true
          tracked_tags:
          - ""
          - ""
          custom_fields:
            first_name: ""
          pending_posts_count: 7
          can_mute_user: true
          can_edit_email: true
          profile_view_count: 9
          can_change_tracking_preferences: true
          sidebar_tags: ""
          featured_user_badge_ids:
          - ""
          - ""
          can_edit_name: true
          name: name
          system_avatar_upload_id: ""
          allowed_pm_usernames:
          - ""
          - ""
          post_count: 3
          badge_count: 1
          display_sidebar_tags: true
          primary_group_id: ""
          use_logo_small_as_avatar: true
          user_api_keys: ""
          created_at: created_at
          admin: true
          title: ""
          locale: ""
          can_change_website: true
          muted_category_ids:
          - ""
          - ""
          watched_tags:
          - ""
          - ""
          muted_usernames:
          - ""
          - ""
          can_be_deleted: true
          system_avatar_template: system_avatar_template
          mailing_list_posts_per_day: 2
          can_change_bio: true
          has_title_badges: true
          muted: true
          featured_topic: ""
          avatar_template: avatar_template
          last_posted_at: ""
          can_upload_profile_header: true
          second_factor_backup_enabled: true
          time_read: 5
          can_upload_user_card_background: true
          can_edit: true
          groups:
          - mentionable_level: 6
            public_admission: true
            primary_group: true
            flair_color: ""
            title: ""
            can_see_members: true
            publish_read_state: true
            visibility_level: 2
            id: 6
            allow_membership_requests: true
            messageable_level: 1
            grant_trust_level: ""
            automatic: true
            bio_raw: ""
            flair_url: ""
            display_name: display_name
            public_exit: true
            members_visibility_level: 6
            bio_excerpt: ""
            flair_bg_color: ""
            full_name: ""
            default_notification_level: 6
            user_count: 3
            membership_request_template: ""
            name: name
            incoming_email: ""
            has_messages: true
            can_admin_group: true
            bio_cooked: ""
          - mentionable_level: 6
            public_admission: true
            primary_group: true
            flair_color: ""
            title: ""
            can_see_members: true
            publish_read_state: true
            visibility_level: 2
            id: 6
            allow_membership_requests: true
            messageable_level: 1
            grant_trust_level: ""
            automatic: true
            bio_raw: ""
            flair_url: ""
            display_name: display_name
            public_exit: true
            members_visibility_level: 6
            bio_excerpt: ""
            flair_bg_color: ""
            full_name: ""
            default_notification_level: 6
            user_count: 3
            membership_request_template: ""
            name: name
            incoming_email: ""
            has_messages: true
            can_admin_group: true
            bio_cooked: ""
          user_option:
            email_messages_level: 7
            title_count_mode: title_count_mode
            timezone: ""
            email_level: 0
            dynamic_favicon: true
            theme_key_seq: 7
            theme_ids:
            - ""
            - ""
            topics_unread_when_closed: true
            email_digests: true
            hide_profile_and_presence: true
            watched_precedence_over_muted: ""
            color_scheme_id: ""
            oldest_search_log_date: ""
            skip_new_user_tips: true
            bookmark_auto_delete_preference: 6
            homepage_id: ""
            digest_after_minutes: 0
            sidebar_show_count_of_new_items: true
            auto_track_topics_after_msecs: 4
            seen_popups: ""
            new_topic_duration_minutes: 7
            notification_level_when_replying: 8
            allow_private_messages: true
            text_size_seq: 5
            enable_allowed_pm_users: true
            like_notification_frequency: 3
            dark_scheme_id: ""
            enable_quoting: true
            automatically_unpin_topics: true
            enable_defer: true
            email_in_reply_to: true
            text_size: text_size
            user_id: 3
            mailing_list_mode_frequency: 7
            mailing_list_mode: true
            include_tl0_in_digests: true
            external_links_in_new_tab: true
            email_previous_replies: 3
            default_calendar: default_calendar
            sidebar_link_to_filtered_list: true
          flair_url: ""
          staged: true
          ignored_usernames:
          - ""
          - ""
          invited_by: ""
          watched_first_post_category_ids:
          - ""
          - ""
          flair_bg_color: ""
          pending_count: 2
          primary_group_name: ""
          can_edit_username: true
          can_ignore_user: true
          user_auth_tokens:
          - is_active: true
            os: os
            browser: browser
            icon: icon
            created_at: created_at
            client_ip: client_ip
            location: location
            id: 4
            device: device
            seen_at: seen_at
          - is_active: true
            os: os
            browser: browser
            icon: icon
            created_at: created_at
            client_ip: client_ip
            location: location
            id: 4
            device: device
            seen_at: seen_at
          last_seen_at: ""
          flair_group_id: ""
          flair_name: ""
          user_passkeys: ""
          username: username
          watched_category_ids:
          - ""
          - ""
        user_badges:
        - ""
        - ""
      properties:
        user_badges:
          items: {}
          type: array
        user:
          $ref: '#/components/schemas/UsersGetUserByUsernameResponse_user'
      required:
      - user
      - user_badges
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersGetIdentityProviderExternalIdResponse:
      additionalProperties: false
      example:
        user:
          group_users:
          - owner: true
            group_id: 5
            user_id: 6
            notification_level: 3
          - owner: true
            group_id: 5
            user_id: 6
            notification_level: 3
          recent_time_read: 5
          flair_color: ""
          moderator: true
          trust_level: 6
          tracked_category_ids:
          - ""
          - ""
          muted_tags:
          - ""
          - ""
          user_fields:
            "1": ""
            "2": ""
          can_send_private_messages: true
          user_notification_schedule:
            day_0_end_time: 1
            day_5_start_time: 9
            day_0_start_time: 7
            day_2_start_time: 6
            day_6_end_time: 9
            day_1_end_time: 1
            enabled: true
            day_5_end_time: 6
            day_6_start_time: 8
            day_2_end_time: 7
            day_3_start_time: 1
            day_1_start_time: 1
            day_4_end_time: 9
            day_4_start_time: 5
            day_3_end_time: 4
          sidebar_category_ids: ""
          id: 0
          second_factor_enabled: true
          can_delete_all_posts: true
          can_change_location: true
          uploaded_avatar_id: ""
          ignored: true
          regular_category_ids:
          - ""
          - ""
          watching_first_post_tags:
          - ""
          - ""
          can_send_private_message_to_user: true
          tracked_tags:
          - ""
          - ""
          custom_fields:
            first_name: ""
          pending_posts_count: 7
          can_mute_user: true
          can_edit_email: true
          profile_view_count: 9
          can_change_tracking_preferences: true
          sidebar_tags: ""
          featured_user_badge_ids:
          - ""
          - ""
          can_edit_name: true
          name: name
          system_avatar_upload_id: ""
          allowed_pm_usernames:
          - ""
          - ""
          post_count: 3
          badge_count: 1
          display_sidebar_tags: true
          primary_group_id: ""
          use_logo_small_as_avatar: true
          user_api_keys: ""
          created_at: created_at
          admin: true
          title: ""
          locale: ""
          can_change_website: true
          muted_category_ids:
          - ""
          - ""
          watched_tags:
          - ""
          - ""
          muted_usernames:
          - ""
          - ""
          can_be_deleted: true
          system_avatar_template: system_avatar_template
          mailing_list_posts_per_day: 2
          can_change_bio: true
          has_title_badges: true
          muted: true
          featured_topic: ""
          avatar_template: avatar_template
          last_posted_at: ""
          can_upload_profile_header: true
          second_factor_backup_enabled: true
          time_read: 5
          can_upload_user_card_background: true
          can_edit: true
          groups:
          - mentionable_level: 6
            public_admission: true
            primary_group: true
            flair_color: ""
            title: ""
            can_see_members: true
            publish_read_state: true
            visibility_level: 2
            id: 6
            allow_membership_requests: true
            messageable_level: 1
            grant_trust_level: ""
            automatic: true
            bio_raw: ""
            flair_url: ""
            display_name: display_name
            public_exit: true
            members_visibility_level: 6
            bio_excerpt: ""
            flair_bg_color: ""
            full_name: ""
            default_notification_level: 6
            user_count: 3
            membership_request_template: ""
            name: name
            incoming_email: ""
            has_messages: true
            can_admin_group: true
            bio_cooked: ""
          - mentionable_level: 6
            public_admission: true
            primary_group: true
            flair_color: ""
            title: ""
            can_see_members: true
            publish_read_state: true
            visibility_level: 2
            id: 6
            allow_membership_requests: true
            messageable_level: 1
            grant_trust_level: ""
            automatic: true
            bio_raw: ""
            flair_url: ""
            display_name: display_name
            public_exit: true
            members_visibility_level: 6
            bio_excerpt: ""
            flair_bg_color: ""
            full_name: ""
            default_notification_level: 6
            user_count: 3
            membership_request_template: ""
            name: name
            incoming_email: ""
            has_messages: true
            can_admin_group: true
            bio_cooked: ""
          user_option:
            email_messages_level: 7
            title_count_mode: title_count_mode
            timezone: ""
            email_level: 0
            dynamic_favicon: true
            theme_key_seq: 7
            theme_ids:
            - ""
            - ""
            topics_unread_when_closed: true
            email_digests: true
            hide_profile_and_presence: true
            watched_precedence_over_muted: ""
            color_scheme_id: ""
            oldest_search_log_date: ""
            skip_new_user_tips: true
            bookmark_auto_delete_preference: 6
            homepage_id: ""
            digest_after_minutes: 0
            sidebar_show_count_of_new_items: true
            auto_track_topics_after_msecs: 4
            seen_popups: ""
            new_topic_duration_minutes: 7
            notification_level_when_replying: 8
            allow_private_messages: true
            text_size_seq: 5
            enable_allowed_pm_users: true
            like_notification_frequency: 3
            dark_scheme_id: ""
            enable_quoting: true
            automatically_unpin_topics: true
            enable_defer: true
            email_in_reply_to: true
            text_size: text_size
            user_id: 3
            mailing_list_mode_frequency: 7
            mailing_list_mode: true
            include_tl0_in_digests: true
            external_links_in_new_tab: true
            email_previous_replies: 3
            default_calendar: default_calendar
            sidebar_link_to_filtered_list: true
          flair_url: ""
          staged: true
          ignored_usernames:
          - ""
          - ""
          invited_by: ""
          watched_first_post_category_ids:
          - ""
          - ""
          flair_bg_color: ""
          pending_count: 2
          primary_group_name: ""
          can_edit_username: true
          can_ignore_user: true
          user_auth_tokens:
          - is_active: true
            os: os
            browser: browser
            icon: icon
            created_at: created_at
            client_ip: client_ip
            location: location
            id: 4
            device: device
            seen_at: seen_at
          - is_active: true
            os: os
            browser: browser
            icon: icon
            created_at: created_at
            client_ip: client_ip
            location: location
            id: 4
            device: device
            seen_at: seen_at
          last_seen_at: ""
          flair_group_id: ""
          flair_name: ""
          user_passkeys: ""
          username: username
          watched_category_ids:
          - ""
          - ""
        user_badges:
        - ""
        - ""
      properties:
        user_badges:
          items: {}
          type: array
        user:
          $ref: '#/components/schemas/UsersGetUserByUsernameResponse_user'
      required:
      - user
      - user_badges
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersUpdateAvatarResponse:
      additionalProperties: false
      example:
        success: OK
      properties:
        success:
          example: OK
          type: string
          x-konfig-original-example: OK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersUpdateAvatarResponse-properties-success
      required:
      - success
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersListPublicUserResponse:
      additionalProperties: false
      example:
        meta:
          last_updated_at: ""
          load_more_directory_items: load_more_directory_items
          total_rows_directory_items: 2
        directory_items:
        - days_visited: 9
          posts_read: 7
          topics_entered: 5
          id: 0
          likes_given: 1
          post_count: 2
          likes_received: 6
          user:
            name: ""
            id: 3
            title: ""
            avatar_template: avatar_template
            username: username
          topic_count: 5
        - days_visited: 9
          posts_read: 7
          topics_entered: 5
          id: 0
          likes_given: 1
          post_count: 2
          likes_received: 6
          user:
            name: ""
            id: 3
            title: ""
            avatar_template: avatar_template
            username: username
          topic_count: 5
      properties:
        directory_items:
          items:
            $ref: '#/components/schemas/UsersListPublicUserResponse_directory_items_inner'
          type: array
        meta:
          $ref: '#/components/schemas/UsersListPublicUserResponse_meta'
      required:
      - directory_items
      - meta
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersDeleteUserByIdJsonResponse:
      additionalProperties: false
      example:
        deleted: true
      properties:
        deleted:
          type: boolean
      required:
      - deleted
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersGetUserByIdJsonResponse:
      additionalProperties: false
      example:
        can_impersonate: true
        flags_given_count: 4
        can_grant_admin: true
        can_disable_second_factor: true
        moderator: true
        reset_bounce_score_after: ""
        trust_level: 6
        can_revoke_moderation: true
        manual_locked_trust_level: ""
        can_revoke_admin: true
        can_activate: true
        id: 0
        can_delete_all_posts: true
        silenced_by: ""
        days_visited: 5
        can_be_anonymized: true
        single_sign_on_record: ""
        like_count: 9
        active: true
        like_given_count: 3
        external_ids: "{}"
        private_topics_count: 1
        approved_by:
          name: name
          id: 7
          avatar_template: avatar_template
          username: username
        created_at_age: ""
        bounce_score: ""
        name: ""
        api_key_count: 6
        last_emailed_at: ""
        post_count: 7
        badge_count: 1
        silence_reason: ""
        primary_group_id: ""
        can_view_action_logs: true
        can_be_merged: true
        admin: true
        created_at: created_at
        last_seen_age: ""
        posts_read_count: 5
        title: ""
        warnings_received_count: 1
        full_suspend_reason: ""
        post_edits_count: ""
        registration_ip_address: ""
        suspended_by: ""
        can_delete_sso_record: true
        can_be_deleted: true
        last_emailed_age: ""
        can_deactivate: true
        avatar_template: avatar_template
        next_penalty: next_penalty
        time_read: 1
        groups:
        - mentionable_level: 4
          public_admission: true
          primary_group: true
          flair_color: ""
          title: ""
          can_see_members: true
          publish_read_state: true
          visibility_level: 6
          id: 5
          allow_membership_requests: true
          messageable_level: 0
          grant_trust_level: ""
          automatic: true
          bio_raw: ""
          flair_url: ""
          display_name: display_name
          public_exit: true
          members_visibility_level: 1
          bio_excerpt: ""
          flair_bg_color: ""
          full_name: ""
          default_notification_level: 4
          user_count: 3
          membership_request_template: ""
          name: name
          incoming_email: ""
          has_messages: true
          flair_group_id: ""
          can_admin_group: true
          bio_cooked: ""
        - mentionable_level: 4
          public_admission: true
          primary_group: true
          flair_color: ""
          title: ""
          can_see_members: true
          publish_read_state: true
          visibility_level: 6
          id: 5
          allow_membership_requests: true
          messageable_level: 0
          grant_trust_level: ""
          automatic: true
          bio_raw: ""
          flair_url: ""
          display_name: display_name
          public_exit: true
          members_visibility_level: 1
          bio_excerpt: ""
          flair_bg_color: ""
          full_name: ""
          default_notification_level: 4
          user_count: 3
          membership_request_template: ""
          name: name
          incoming_email: ""
          has_messages: true
          flair_group_id: ""
          can_admin_group: true
          bio_cooked: ""
        staged: true
        ip_address: ip_address
        flags_received_count: 7
        topic_count: 2
        penalty_counts:
          silenced: 1
          suspended: 4
        can_grant_moderation: true
        can_send_activation_email: true
        associated_accounts:
        - ""
        - ""
        topics_entered: 2
        last_seen_at: ""
        tl3_requirements:
          min_likes_given: 0
          max_flagged_by_users: 3
          trust_level_locked: true
          min_likes_received: 6
          topics_viewed: 9
          num_likes_received: 7
          num_likes_given: 7
          min_posts_read: 6
          on_grace_period: true
          num_likes_received_users: 8
          days_visited: 9
          num_likes_received_days: 0
          min_topics_viewed: 6
          num_topics_replied_to: 6
          posts_read_all_time: 6
          min_days_visited: 9
          min_topics_replied_to: 8
          num_flagged_by_users: 3
          penalty_counts:
            silenced: 3
            total: 7
            suspended: 3
          num_flagged_posts: 5
          min_likes_received_users: 7
          requirements_lost: true
          min_posts_read_all_time: 6
          posts_read: 3
          max_flagged_posts: 6
          min_topics_viewed_all_time: 2
          requirements_met: true
          time_period: 5
          min_likes_received_days: 4
          topics_viewed_all_time: 1
        username: username
      properties:
        title: {}
        id:
          type: integer
        username:
          type: string
        name: {}
        avatar_template:
          type: string
        active:
          type: boolean
        admin:
          type: boolean
        moderator:
          type: boolean
        last_seen_at: {}
        last_emailed_at: {}
        created_at:
          type: string
        last_seen_age: {}
        last_emailed_age: {}
        created_at_age: {}
        trust_level:
          type: integer
        manual_locked_trust_level: {}
        time_read:
          type: integer
        staged:
          type: boolean
        days_visited:
          type: integer
        posts_read_count:
          type: integer
        topics_entered:
          type: integer
        post_count:
          type: integer
        associated_accounts:
          items: {}
          type: array
        can_send_activation_email:
          type: boolean
        can_activate:
          type: boolean
        can_deactivate:
          type: boolean
        ip_address:
          type: string
        registration_ip_address: {}
        can_grant_admin:
          type: boolean
        can_revoke_admin:
          type: boolean
        can_grant_moderation:
          type: boolean
        can_revoke_moderation:
          type: boolean
        can_impersonate:
          type: boolean
        like_count:
          type: integer
        like_given_count:
          type: integer
        topic_count:
          type: integer
        flags_given_count:
          type: integer
        flags_received_count:
          type: integer
        private_topics_count:
          type: integer
        can_delete_all_posts:
          type: boolean
        can_be_deleted:
          type: boolean
        can_be_anonymized:
          type: boolean
        can_be_merged:
          type: boolean
        full_suspend_reason: {}
        silence_reason: {}
        post_edits_count: {}
        primary_group_id: {}
        badge_count:
          type: integer
        warnings_received_count:
          type: integer
        bounce_score: {}
        reset_bounce_score_after: {}
        can_view_action_logs:
          type: boolean
        can_disable_second_factor:
          type: boolean
        can_delete_sso_record:
          type: boolean
        api_key_count:
          type: integer
        single_sign_on_record: {}
        approved_by:
          $ref: '#/components/schemas/UsersGetUserByIdJsonResponse_approved_by'
        suspended_by: {}
        silenced_by: {}
        penalty_counts:
          $ref: '#/components/schemas/UsersGetUserByIdJsonResponse_penalty_counts'
        next_penalty:
          type: string
        tl3_requirements:
          $ref: '#/components/schemas/UsersGetUserByIdJsonResponse_tl3_requirements'
        groups:
          items:
            $ref: '#/components/schemas/UsersGetUserByIdJsonResponse_groups_inner'
          type: array
        external_ids:
          type: object
      required:
      - active
      - admin
      - api_key_count
      - approved_by
      - avatar_template
      - badge_count
      - bounce_score
      - can_activate
      - can_be_anonymized
      - can_be_deleted
      - can_be_merged
      - can_deactivate
      - can_delete_all_posts
      - can_delete_sso_record
      - can_disable_second_factor
      - can_grant_admin
      - can_grant_moderation
      - can_impersonate
      - can_revoke_admin
      - can_revoke_moderation
      - can_send_activation_email
      - can_view_action_logs
      - created_at
      - created_at_age
      - days_visited
      - external_ids
      - flags_given_count
      - flags_received_count
      - full_suspend_reason
      - groups
      - id
      - ip_address
      - last_emailed_age
      - last_emailed_at
      - last_seen_age
      - last_seen_at
      - like_count
      - like_given_count
      - manual_locked_trust_level
      - moderator
      - name
      - post_count
      - posts_read_count
      - primary_group_id
      - private_topics_count
      - registration_ip_address
      - reset_bounce_score_after
      - silence_reason
      - silenced_by
      - single_sign_on_record
      - staged
      - suspended_by
      - time_read
      - title
      - topic_count
      - topics_entered
      - trust_level
      - username
      - warnings_received_count
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersActivateUserResponse:
      additionalProperties: false
      example:
        success: OK
      properties:
        success:
          example: OK
          type: string
          x-konfig-original-example: OK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersActivateUserResponse-properties-success
      required:
      - success
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersDeactivateUserResponse:
      additionalProperties: false
      example:
        success: OK
      properties:
        success:
          example: OK
          type: string
          x-konfig-original-example: OK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersDeactivateUserResponse-properties-success
      required:
      - success
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersSuspendByIdJsonResponse:
      additionalProperties: false
      example:
        suspension:
          suspended_by:
            name: name
            id: 0
            avatar_template: avatar_template
            username: username
          suspended_till: suspended_till
          suspend_reason: suspend_reason
          full_suspend_reason: full_suspend_reason
          suspended_at: suspended_at
      properties:
        suspension:
          $ref: '#/components/schemas/UsersSuspendByIdJsonResponse_suspension'
      required:
      - suspension
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersSilenceByIdResponse:
      additionalProperties: false
      example:
        silence:
          silenced: true
          silenced_at: silenced_at
          silenced_till: silenced_till
          silence_reason: silence_reason
          silenced_by:
            name: name
            id: 0
            avatar_template: avatar_template
            username: username
      properties:
        silence:
          $ref: '#/components/schemas/UsersSilenceByIdResponse_silence'
      required:
      - silence
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersAnonymizeByIdJsonResponse:
      additionalProperties: false
      example:
        success: success
        username: username
      properties:
        success:
          type: string
        username:
          type: string
      required:
      - success
      - username
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersLogOutUserActionResponse:
      additionalProperties: false
      example:
        success: OK
      properties:
        success:
          example: OK
          type: string
          x-konfig-original-example: OK
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersLogOutUserActionResponse-properties-success
      required:
      - success
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersRefreshGravatarPostResponse:
      additionalProperties: false
      example:
        gravatar_avatar_template: ""
        gravatar_upload_id: ""
      properties:
        gravatar_upload_id: {}
        gravatar_avatar_template: {}
      required:
      - gravatar_avatar_template
      - gravatar_upload_id
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersGetListOfUsersResponse:
      items:
        $ref: '#/components/schemas/UsersGetListOfUsersResponse_inner'
      minItems: 1
      type: array
      uniqueItems: true
      x-konfig-is-used-in-successful-response: true
    UsersListUserActionsResponse:
      additionalProperties: false
      example:
        user_actions:
        - acting_avatar_template: acting_avatar_template
          acting_user_id: 2
          target_name: ""
          hidden: ""
          action_type: 0
          action_code: ""
          created_at: created_at
          title: title
          acting_name: ""
          archived: true
          category_id: 7
          post_type: ""
          topic_id: 6
          target_username: target_username
          avatar_template: avatar_template
          slug: slug
          acting_username: acting_username
          target_user_id: 1
          deleted: true
          post_id: ""
          user_id: 5
          name: ""
          closed: true
          excerpt: excerpt
          post_number: 5
          username: username
        - acting_avatar_template: acting_avatar_template
          acting_user_id: 2
          target_name: ""
          hidden: ""
          action_type: 0
          action_code: ""
          created_at: created_at
          title: title
          acting_name: ""
          archived: true
          category_id: 7
          post_type: ""
          topic_id: 6
          target_username: target_username
          avatar_template: avatar_template
          slug: slug
          acting_username: acting_username
          target_user_id: 1
          deleted: true
          post_id: ""
          user_id: 5
          name: ""
          closed: true
          excerpt: excerpt
          post_number: 5
          username: username
      properties:
        user_actions:
          items:
            $ref: '#/components/schemas/UsersListUserActionsResponse_user_actions_inner'
          type: array
      required:
      - user_actions
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersSendPasswordResetEmailResponse:
      additionalProperties: false
      example:
        success: success
        user_found: true
      properties:
        success:
          type: string
        user_found:
          type: boolean
      required:
      - success
      - user_found
      type: object
      x-konfig-is-used-in-successful-response: true
    UsersGetEmailsResponse:
      additionalProperties: false
      example:
        associated_accounts:
        - ""
        - ""
        secondary_emails:
        - ""
        - ""
        unconfirmed_emails:
        - ""
        - ""
        email: email
      properties:
        email:
          type: string
        secondary_emails:
          items: {}
          type: array
        unconfirmed_emails:
          items: {}
          type: array
        associated_accounts:
          items: {}
          type: array
      required:
      - associated_accounts
      - email
      - secondary_emails
      - unconfirmed_emails
      type: object
      x-konfig-is-used-in-successful-response: true
    konfig-generated-schema-components-schemas-CategoriesCreateCategoryRequestRequest-properties-color:
      example: 49d9e9
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CategoriesCreateCategoryRequestRequest-properties-text_color:
      example: f0fcfd
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CategoriesCreateCategoryRequestRequest-properties-permissions-properties-everyone:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CategoriesUpdateCategoryByIdJsonRequest-properties-color:
      example: 49d9e9
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CategoriesUpdateCategoryByIdJsonRequest-properties-text_color:
      example: f0fcfd
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-CategoriesUpdateCategoryByIdJsonRequest-properties-permissions-properties-everyone:
      example: 1
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GroupsRemoveMembersRequest-properties-usernames:
      example: "username1,username2"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GroupsAddMembersToGroupRequest-properties-usernames:
      example: "username1,username2"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateInviteRequest-properties-email:
      example: not-a-user-yet@example.com
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateInviteRequest-properties-skip_email:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateInviteRequest-properties-max_redemptions_allowed:
      example: 5
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateInviteRequest-properties-group_ids:
      example: "42,43"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateInviteRequest-properties-group_names:
      example: "foo,bar"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesRequest-properties-email:
      example:
      - not-a-user-yet-1@example.com
      - not-a-user-yet-2@example.com
      items:
        example: not-a-user-yet-1@example.com
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesRequest-properties-skip_email:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesRequest-properties-max_redemptions_allowed:
      example: 5
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesRequest-properties-group_ids:
      example: "42,43"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesRequest-properties-group_names:
      example: "foo,bar"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PostsCreateTopicPostMessageRequest-properties-target_recipients:
      example: "blake,sam"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PostsCreateTopicPostMessageRequest-properties-archetype:
      example: private_message
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-PostsDeleteSinglePostRequest-properties-force_destroy:
      example: true
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TopicsUpdateStatusOfTopicRequest-properties-until:
      example: 2030-12-31
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TopicsUpdateTimestampJsonRequest-properties-timestamp:
      example: "1594291380"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TopicsCreateTopicTimerRequest-properties-time:
      example: ""
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsInitiateDirectExternalUploadRequest-properties-file_name:
      example: IMG_2021.jpeg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsInitiateDirectExternalUploadRequest-properties-file_size:
      example: 4096
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsCompleteExternalUploadRequest-properties-unique_identifier:
      example: 66e86218-80d9-4bda-b4d5-2b6def968705
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsCompleteExternalUploadRequest-properties-for_private_message:
      example: "true"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsCompleteExternalUploadRequest-properties-for_site_setting:
      example: "true"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsCompleteExternalUploadRequest-properties-pasted:
      example: "true"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsCreateMultipartExternalUploadRequest-properties-file_name:
      example: IMG_2021.jpeg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsCreateMultipartExternalUploadRequest-properties-file_size:
      example: 4096
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsGeneratePresignedUrlsForMultipartPartsRequest-properties-part_numbers:
      example:
      - 1
      - 2
      - 3
      items:
        example: 1
        type: number
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsGeneratePresignedUrlsForMultipartPartsRequest-properties-unique_identifier:
      example: 66e86218-80d9-4bda-b4d5-2b6def968705
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsAbortMultipartUploadRequest-properties-external_upload_identifier:
      example: 84x83tmxy398t3y._Q_z8CoJYVr69bE6D7f8J6Oo0434QquLFoYdGVerWFx9X5HDEI_TP_95c34n853495x35345394.d.ghQ
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsCompleteMultipartUploadRequest-properties-unique_identifier:
      example: 66e86218-80d9-4bda-b4d5-2b6def968705
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsCompleteMultipartUploadRequest-properties-parts:
      example:
      - part_number: 1
        etag: 0c376dcfcc2606f4335bbc732de93344
      - part_number: 2
        etag: 09ert8cfcc2606f4335bbc732de91122
      items:
        properties:
          part_number:
            example: 1
            type: number
          etag:
            example: 0c376dcfcc2606f4335bbc732de93344
            type: string
        type: object
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersSuspendByIdJsonRequest-properties-suspend_until:
      example: 2121-02-22
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersSuspendByIdJsonRequest-properties-post_action:
      example: delete
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersSilenceByIdRequest-properties-silenced_till:
      example: 2022-06-01T08:00:00.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersSilenceByIdRequest-properties-post_action:
      example: delete
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-BackupsCreateBackupRequestResponse-properties-success:
      example: OK
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GroupsDeleteGroupByIdJsonResponse-properties-success:
      example: OK
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-GroupsUpdateGroupByIdJsonResponse-properties-success:
      example: OK
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-id:
      example: 42
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-link:
      example: http://example.com/invites/9045fd767efe201ca60c6658bcf14158
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-email:
      example: not-a-user-yet@example.com
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-emailed:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-custom_message:
      example: Hello world!
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-topics:
      items:
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-groups:
      items:
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-created_at:
      example: 2021-01-01T12:00:00.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-updated_at:
      example: 2021-01-01T12:00:00.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-expires_at:
      example: 2021-02-01T12:00:00.000Z
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateInviteResponse-properties-expired:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesResponse-properties-num_successfully_created_invitations:
      example: 42
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesResponse-properties-num_failed_invitations:
      example: 42
      type: number
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesResponse-properties-failed_invitations:
      items:
        type: string
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesResponse-properties-successful_invitations:
      example:
      - id: 42
        link: http://example.com/invites/9045fd767efe201ca60c6658bcf14158
        email: not-a-user-yet-1@example.com
        emailed: true
        custom_message: Hello world!
        topics: []
        groups: []
        created_at: 2021-01-01T12:00:00.000Z
        updated_at: 2021-01-01T12:00:00.000Z
        expires_at: 2021-02-01T12:00:00.000Z
        expired: false
      - id: 42
        link: http://example.com/invites/c6658bcf141589045fd767efe201ca60
        email: not-a-user-yet-2@example.com
        emailed: true
        custom_message: Hello world!
        topics: []
        groups: []
        created_at: 2021-01-01T12:00:00.000Z
        updated_at: 2021-01-01T12:00:00.000Z
        expires_at: 2021-02-01T12:00:00.000Z
        expired: false
      items:
        properties:
          id:
            example: 42
            type: number
          link:
            example: http://example.com/invites/9045fd767efe201ca60c6658bcf14158
            type: string
          email:
            example: not-a-user-yet-1@example.com
            type: string
          emailed:
            example: true
            type: boolean
          custom_message:
            example: Hello world!
            type: string
          topics:
            items:
              type: string
            type: array
          groups:
            items:
              type: string
            type: array
          created_at:
            example: 2021-01-01T12:00:00.000Z
            type: string
          updated_at:
            example: 2021-01-01T12:00:00.000Z
            type: string
          expires_at:
            example: 2021-02-01T12:00:00.000Z
            type: string
          expired:
            example: false
            type: boolean
        type: object
      type: array
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TopicsUpdateStatusOfTopicResponse-properties-success:
      example: OK
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TopicsSetNotificationLevelResponse-properties-success:
      example: OK
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TopicsUpdateTimestampJsonResponse-properties-success:
      example: OK
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-TopicsCreateTopicTimerResponse-properties-success:
      example: OK
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsInitiateDirectExternalUploadResponse-properties-key:
      example: temp/site/uploads/default/12345/67890.jpg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsInitiateDirectExternalUploadResponse-properties-url:
      example: https://file-uploads.s3.us-west-2.amazonaws.com/temp/site/uploads/default/123/456.jpg?x-amz-acl=private&x-amz-meta-sha1-checksum=sha1&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AAAAus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20211221T011246Z&X-Amz-Expires=600&X-Amz-SignedHeaders=host&X-Amz-Signature=12345678
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsInitiateDirectExternalUploadResponse-properties-signed_headers:
      example:
        x-amz-acl: private
        x-amz-meta-sha1-checksum: sha1
      properties:
        x-amz-acl:
          example: private
          type: string
        x-amz-meta-sha1-checksum:
          example: sha1
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsInitiateDirectExternalUploadResponse-properties-unique_identifier:
      example: 66e86218-80d9-4bda-b4d5-2b6def968705
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsCreateMultipartExternalUploadResponse-properties-key:
      example: temp/site/uploads/default/12345/67890.jpg
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsCreateMultipartExternalUploadResponse-properties-external_upload_identifier:
      example: 84x83tmxy398t3y._Q_z8CoJYVr69bE6D7f8J6Oo0434QquLFoYdGVerWFx9X5HDEI_TP_95c34n853495x35345394.d.ghQ
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsCreateMultipartExternalUploadResponse-properties-unique_identifier:
      example: 66e86218-80d9-4bda-b4d5-2b6def968705
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsGeneratePresignedUrlsForMultipartPartsResponse-properties-presigned_urls:
      example:
        "1": https://discourse-martin-uploads-test.s3.us-east-2.amazonaws.com/temp/uploads/default/123abc/123abc.jpg?partNumber=1&uploadId=123456abcd&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=test&X-Amz-Date=20211222T012336Z&X-Amz-Expires=600&X-Amz-SignedHeaders=host&X-Amz-Signature=abc123
      properties:
        "1":
          example: https://discourse-martin-uploads-test.s3.us-east-2.amazonaws.com/temp/uploads/default/123abc/123abc.jpg?partNumber=1&uploadId=123456abcd&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=test&X-Amz-Date=20211222T012336Z&X-Amz-Expires=600&X-Amz-SignedHeaders=host&X-Amz-Signature=abc123
          type: string
      type: object
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UploadsAbortMultipartUploadResponse-properties-success:
      example: OK
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersUpdateAvatarResponse-properties-success:
      example: OK
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersActivateUserResponse-properties-success:
      example: OK
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersDeactivateUserResponse-properties-success:
      example: OK
      type: string
      x-do-not-generate: true
    konfig-generated-schema-components-schemas-UsersLogOutUserActionResponse-properties-success:
      example: OK
      type: string
      x-do-not-generate: true
    konfig-generated-schema-single-parameter-schema-get--admin-backups.json:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--admin-backups.json:
      properties:
        with_uploads:
          type: boolean
      required:
      - with_uploads
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--admin-backups-filename:
      properties:
        filename:
          type: string
        token:
          type: string
      required:
      - filename
      - token
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - filename
      - token
    konfig-generated-schema-single-parameter-schema-put--admin-backups-filename:
      properties:
        filename:
          type: string
      required:
      - filename
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - filename
    konfig-generated-schema-single-parameter-schema-get--admin-badges.json:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--admin-badges.json:
      properties:
        name:
          description: The name for the new badge.
          type: string
        badge_type_id:
          description: |-
            The ID for the badge type. 1 for Gold, 2 for Silver,
            3 for Bronze.
          type: integer
      required:
      - badge_type_id
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--admin-badges-id.json:
      properties:
        id:
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--admin-badges-id.json:
      properties:
        id:
          type: integer
        name:
          description: The name for the new badge.
          type: string
        badge_type_id:
          description: |-
            The ID for the badge type. 1 for Gold, 2 for Silver,
            3 for Bronze.
          type: integer
      required:
      - badge_type_id
      - id
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--categories.json:
      properties:
        include_subcategories:
          enum:
          - true
          type: boolean
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - include_subcategories
    konfig-generated-schema-single-parameter-schema-post--categories.json:
      properties:
        name:
          type: string
        color:
          example: 49d9e9
          type: string
          x-konfig-original-example: 49d9e9
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CategoriesCreateCategoryRequestRequest-properties-color
        text_color:
          example: f0fcfd
          type: string
          x-konfig-original-example: f0fcfd
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CategoriesCreateCategoryRequestRequest-properties-text_color
        parent_category_id:
          type: integer
        allow_badges:
          type: boolean
        slug:
          type: string
        topic_featured_links_allowed:
          type: boolean
        permissions:
          additionalProperties: true
          properties:
            everyone:
              example: 1
              type: integer
              x-konfig-original-example: 1
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-CategoriesCreateCategoryRequestRequest-properties-permissions-properties-everyone
            staff:
              type: integer
          type: object
        search_priority:
          type: integer
        form_template_ids:
          items: {}
          type: array
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--categories-id.json:
      properties:
        id:
          type: integer
        name:
          type: string
        color:
          example: 49d9e9
          type: string
          x-konfig-original-example: 49d9e9
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CategoriesUpdateCategoryByIdJsonRequest-properties-color
        text_color:
          example: f0fcfd
          type: string
          x-konfig-original-example: f0fcfd
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CategoriesUpdateCategoryByIdJsonRequest-properties-text_color
        parent_category_id:
          type: integer
        allow_badges:
          type: boolean
        slug:
          type: string
        topic_featured_links_allowed:
          type: boolean
        permissions:
          additionalProperties: true
          properties:
            everyone:
              example: 1
              type: integer
              x-konfig-original-example: 1
              x-konfig-generated-schema: konfig-generated-schema-components-schemas-CategoriesUpdateCategoryByIdJsonRequest-properties-permissions-properties-everyone
            staff:
              type: integer
          type: object
        search_priority:
          type: integer
        form_template_ids:
          items: {}
          type: array
      required:
      - id
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--c-slug-id.json:
      properties:
        slug:
          type: string
        id:
          type: integer
      required:
      - id
      - slug
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - slug
      - id
    konfig-generated-schema-single-parameter-schema-get--c-id-show.json:
      properties:
        id:
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-post--admin-groups.json:
      properties:
        group:
          properties:
            name:
              type: string
            full_name:
              type: string
            bio_raw:
              description: About Group
              type: string
            usernames:
              description: "comma,separated"
              type: string
            owner_usernames:
              description: "comma,separated"
              type: string
            automatic_membership_email_domains:
              description: pipe|separated
              type: string
            visibility_level:
              type: integer
            primary_group:
              type: boolean
            flair_icon:
              type: string
            flair_upload_id:
              type: integer
            flair_bg_color:
              type: string
            public_admission:
              type: boolean
            public_exit:
              type: boolean
            default_notification_level:
              type: integer
            muted_category_ids:
              items:
                type: integer
              type: array
            regular_category_ids:
              items:
                type: integer
              type: array
            watching_category_ids:
              items:
                type: integer
              type: array
            tracking_category_ids:
              items:
                type: integer
              type: array
            watching_first_post_category_ids:
              items:
                type: integer
              type: array
          required:
          - name
          type: object
      required:
      - group
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--admin-groups-id.json:
      properties:
        id:
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--groups-id.json:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--groups-id.json:
      properties:
        id:
          type: integer
        group:
          properties:
            name:
              type: string
            full_name:
              type: string
            bio_raw:
              description: About Group
              type: string
            usernames:
              description: "comma,separated"
              type: string
            owner_usernames:
              description: "comma,separated"
              type: string
            automatic_membership_email_domains:
              description: pipe|separated
              type: string
            visibility_level:
              type: integer
            primary_group:
              type: boolean
            flair_icon:
              type: string
            flair_upload_id:
              type: integer
            flair_bg_color:
              type: string
            public_admission:
              type: boolean
            public_exit:
              type: boolean
            default_notification_level:
              type: integer
            muted_category_ids:
              items:
                type: integer
              type: array
            regular_category_ids:
              items:
                type: integer
              type: array
            watching_category_ids:
              items:
                type: integer
              type: array
            tracking_category_ids:
              items:
                type: integer
              type: array
            watching_first_post_category_ids:
              items:
                type: integer
              type: array
          required:
          - name
          type: object
      required:
      - group
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-delete--groups-id-members.json:
      properties:
        id:
          type: integer
        usernames:
          description: comma separated list
          example: "username1,username2"
          type: string
          x-konfig-original-example: "username1,username2"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GroupsRemoveMembersRequest-properties-usernames
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--groups-id-members.json:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--groups-id-members.json:
      properties:
        id:
          type: integer
        usernames:
          description: comma separated list
          example: "username1,username2"
          type: string
          x-konfig-original-example: "username1,username2"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-GroupsAddMembersToGroupRequest-properties-usernames
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--groups.json:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--invites.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        email:
          description: required for email invites only
          example: not-a-user-yet@example.com
          type: string
          x-konfig-original-example: not-a-user-yet@example.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteRequest-properties-email
        skip_email:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteRequest-properties-skip_email
        custom_message:
          description: "optional, for email invites"
          type: string
        max_redemptions_allowed:
          default: 1
          description: "optional, for link invites"
          example: 5
          type: integer
          x-konfig-original-example: 5
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteRequest-properties-max_redemptions_allowed
        topic_id:
          type: integer
        group_ids:
          description: |-
            Optional, either this or `group_names`. Comma separated
            list for multiple ids.
          example: "42,43"
          type: string
          x-konfig-original-example: "42,43"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteRequest-properties-group_ids
        group_names:
          description: |-
            Optional, either this or `group_ids`. Comma separated
            list for multiple names.
          example: "foo,bar"
          type: string
          x-konfig-original-example: "foo,bar"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateInviteRequest-properties-group_names
        expires_at:
          description: |-
            optional, if not supplied, the invite_expiry_days site
            setting is used
          type: string
      required:
      - Api-Key
      - Api-Username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
    konfig-generated-schema-single-parameter-schema-post--invites-create-multiple.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        email:
          description: |-
            pass 1 email per invite to be generated. other properties
            will be shared by each invite.
          example: "[\"not-a-user-yet-1@example.com\",\"not-a-user-yet-2@example.com\"\
            ]"
          type: string
          x-konfig-original-example:
          - not-a-user-yet-1@example.com
          - not-a-user-yet-2@example.com
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesRequest-properties-email
        skip_email:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesRequest-properties-skip_email
        custom_message:
          description: "optional, for email invites"
          type: string
        max_redemptions_allowed:
          default: 1
          description: "optional, for link invites"
          example: 5
          type: integer
          x-konfig-original-example: 5
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesRequest-properties-max_redemptions_allowed
        topic_id:
          type: integer
        group_ids:
          description: |-
            Optional, either this or `group_names`. Comma separated
            list for multiple ids.
          example: "42,43"
          type: string
          x-konfig-original-example: "42,43"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesRequest-properties-group_ids
        group_names:
          description: |-
            Optional, either this or `group_ids`. Comma separated
            list for multiple names.
          example: "foo,bar"
          type: string
          x-konfig-original-example: "foo,bar"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-InvitesCreateMultipleInvitesRequest-properties-group_names
        expires_at:
          description: |-
            optional, if not supplied, the invite_expiry_days site
            setting is used
          type: string
      required:
      - Api-Key
      - Api-Username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
    konfig-generated-schema-single-parameter-schema-get--notifications.json:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--notifications-mark-read.json:
      properties:
        id:
          description: |-
            (optional) Leave off to mark all notifications as
            read
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--posts.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        before:
          type: string
      required:
      - Api-Key
      - Api-Username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
      - before
    konfig-generated-schema-single-parameter-schema-post--posts.json:
      properties:
        title:
          description: Required if creating a new topic or new private message.
          type: string
        raw:
          type: string
        topic_id:
          description: Required if creating a new post.
          type: integer
        category:
          description: |-
            Optional if creating a new topic, and ignored if creating
            a new post.
          type: integer
        target_recipients:
          description: "Required for private message, comma separated."
          example: "blake,sam"
          type: string
          x-konfig-original-example: "blake,sam"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PostsCreateTopicPostMessageRequest-properties-target_recipients
        target_usernames:
          deprecated: true
          description: Deprecated. Use target_recipients instead.
          type: string
        archetype:
          description: Required for new private message.
          example: private_message
          type: string
          x-konfig-original-example: private_message
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PostsCreateTopicPostMessageRequest-properties-archetype
        created_at:
          type: string
        reply_to_post_number:
          description: "Optional, the post number to reply to inside a topic."
          type: integer
        embed_url:
          description: |-
            Provide a URL from a remote system to associate a forum
            topic with that URL, typically for using Discourse as a comments
            system for an external blog.
          type: string
        external_id:
          description: |-
            Provide an external_id from a remote system to associate
            a forum topic with that id.
          type: string
      required:
      - raw
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--posts-id.json:
      properties:
        id:
          type: integer
        force_destroy:
          description: |-
            The `SiteSetting.can_permanently_delete` needs to be
            enabled first before this param can be used. Also this endpoint
            needs to be called first without `force_destroy` and then followed
            up with a second call 5 minutes later with `force_destroy` to
            permanently delete.
          example: true
          type: boolean
          x-konfig-original-example: true
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-PostsDeleteSinglePostRequest-properties-force_destroy
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--posts-id.json:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--posts-id.json:
      properties:
        id:
          type: string
        post:
          properties:
            raw:
              type: string
            edit_reason:
              type: string
          required:
          - raw
          type: object
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--posts-id-replies.json:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--posts-id-locked.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        id:
          type: string
        locked:
          type: string
      required:
      - Api-Key
      - Api-Username
      - id
      - locked
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
      - id
    konfig-generated-schema-single-parameter-schema-post--post_actions.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        id:
          type: integer
        post_action_type_id:
          type: integer
        flag_topic:
          type: boolean
      required:
      - Api-Key
      - Api-Username
      - id
      - post_action_type_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
    konfig-generated-schema-single-parameter-schema-get--topics-private-messages-username.json:
      properties:
        username:
          type: string
      required:
      - username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - username
    konfig-generated-schema-single-parameter-schema-get--topics-private-messages-sent-username.json:
      properties:
        username:
          type: string
      required:
      - username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - username
    konfig-generated-schema-single-parameter-schema-get--search.json:
      properties:
        q:
          type: string
        page:
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - q
      - page
    konfig-generated-schema-single-parameter-schema-get--site.json:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--tag_groups.json:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--tag_groups.json:
      properties:
        name:
          type: string
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--tag_groups-id.json:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--tag_groups-id.json:
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--tags.json:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--tag-name.json:
      properties:
        name:
          type: string
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - name
    konfig-generated-schema-single-parameter-schema-get--t-id-posts.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        id:
          type: string
        post_ids[]:
          type: integer
      required:
      - Api-Key
      - Api-Username
      - id
      - "post_ids[]"
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
      - id
    konfig-generated-schema-single-parameter-schema-delete--t-id.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        id:
          type: string
      required:
      - Api-Key
      - Api-Username
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
      - id
    konfig-generated-schema-single-parameter-schema-get--t-id.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        id:
          type: string
      required:
      - Api-Key
      - Api-Username
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
      - id
    konfig-generated-schema-single-parameter-schema-put--t---id.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        id:
          type: string
        topic:
          properties:
            title:
              type: string
            category_id:
              type: integer
          type: object
      required:
      - Api-Key
      - Api-Username
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
      - id
    konfig-generated-schema-single-parameter-schema-post--t-id-invite.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        id:
          type: string
        user:
          type: string
        email:
          type: string
      required:
      - Api-Key
      - Api-Username
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
      - id
    konfig-generated-schema-single-parameter-schema-put--t-id-bookmark.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        id:
          type: string
      required:
      - Api-Key
      - Api-Username
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
      - id
    konfig-generated-schema-single-parameter-schema-put--t-id-status.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        id:
          type: string
        status:
          enum:
          - closed
          - pinned
          - pinned_globally
          - archived
          - visible
          type: string
        enabled:
          enum:
          - "true"
          - "false"
          type: string
        until:
          description: Only required for `pinned` and `pinned_globally`
          example: 2030-12-31
          type: string
          x-konfig-original-example: 2030-12-31
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TopicsUpdateStatusOfTopicRequest-properties-until
      required:
      - Api-Key
      - Api-Username
      - enabled
      - id
      - status
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
      - id
    konfig-generated-schema-single-parameter-schema-get--latest.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        order:
          type: string
        ascending:
          type: string
      required:
      - Api-Key
      - Api-Username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
      - order
      - ascending
    konfig-generated-schema-single-parameter-schema-get--top.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        period:
          type: string
      required:
      - Api-Key
      - Api-Username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
      - period
    konfig-generated-schema-single-parameter-schema-post--t-id-notifications.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        id:
          type: string
        notification_level:
          enum:
          - "0"
          - "1"
          - "2"
          - "3"
          type: string
      required:
      - Api-Key
      - Api-Username
      - id
      - notification_level
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
      - id
    konfig-generated-schema-single-parameter-schema-put--t-id-change-timestamp.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        id:
          type: string
        timestamp:
          example: "1594291380"
          type: string
          x-konfig-original-example: "1594291380"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TopicsUpdateTimestampJsonRequest-properties-timestamp
      required:
      - Api-Key
      - Api-Username
      - id
      - timestamp
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
      - id
    konfig-generated-schema-single-parameter-schema-post--t-id-timer.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        id:
          type: string
        time:
          example: ""
          type: string
          x-konfig-original-example: ""
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-TopicsCreateTopicTimerRequest-properties-time
        status_type:
          type: string
        based_on_last_post:
          type: boolean
        category_id:
          type: integer
      required:
      - Api-Key
      - Api-Username
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
      - id
    konfig-generated-schema-single-parameter-schema-get--t-external_id-external_id.json:
      properties:
        external_id:
          type: string
      required:
      - external_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - external_id
    konfig-generated-schema-single-parameter-schema-post--uploads.json:
      properties:
        type:
          enum:
          - avatar
          - profile_background
          - card_background
          - custom_emoji
          - composer
          type: string
        user_id:
          description: required if uploading an avatar
          type: integer
        synchronous:
          description: Use this flag to return an id and url
          type: boolean
        file:
          format: binary
          type: string
      required:
      - type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--uploads-generate-presigned-put.json:
      properties:
        type:
          enum:
          - avatar
          - profile_background
          - card_background
          - custom_emoji
          - composer
          type: string
        file_name:
          example: IMG_2021.jpeg
          type: string
          x-konfig-original-example: IMG_2021.jpeg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsInitiateDirectExternalUploadRequest-properties-file_name
        file_size:
          description: File size should be represented in bytes.
          example: 4096
          type: integer
          x-konfig-original-example: 4096
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsInitiateDirectExternalUploadRequest-properties-file_size
        metadata:
          properties:
            sha1-checksum:
              description: |-
                The SHA1 checksum of the upload binary blob. Optionally
                be provided and serves as an additional security check when
                later processing the file in complete-external-upload endpoint.
              type: string
          type: object
      required:
      - file_name
      - file_size
      - type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--uploads-complete-external-upload.json:
      properties:
        unique_identifier:
          description: |-
            The unique identifier returned in the original /generate-presigned-put
            request.
          example: 66e86218-80d9-4bda-b4d5-2b6def968705
          type: string
          x-konfig-original-example: 66e86218-80d9-4bda-b4d5-2b6def968705
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCompleteExternalUploadRequest-properties-unique_identifier
        for_private_message:
          description: |-
            Optionally set this to true if the upload is for a
            private message.
          example: "true"
          type: string
          x-konfig-original-example: "true"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCompleteExternalUploadRequest-properties-for_private_message
        for_site_setting:
          description: |-
            Optionally set this to true if the upload is for a
            site setting.
          example: "true"
          type: string
          x-konfig-original-example: "true"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCompleteExternalUploadRequest-properties-for_site_setting
        pasted:
          description: |-
            Optionally set this to true if the upload was pasted
            into the upload area. This will convert PNG files to JPEG.
          example: "true"
          type: string
          x-konfig-original-example: "true"
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCompleteExternalUploadRequest-properties-pasted
      required:
      - unique_identifier
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--uploads-create-multipart.json:
      properties:
        upload_type:
          enum:
          - avatar
          - profile_background
          - card_background
          - custom_emoji
          - composer
          type: string
        file_name:
          example: IMG_2021.jpeg
          type: string
          x-konfig-original-example: IMG_2021.jpeg
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCreateMultipartExternalUploadRequest-properties-file_name
        file_size:
          description: File size should be represented in bytes.
          example: 4096
          type: integer
          x-konfig-original-example: 4096
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCreateMultipartExternalUploadRequest-properties-file_size
        metadata:
          properties:
            sha1-checksum:
              description: |-
                The SHA1 checksum of the upload binary blob. Optionally
                be provided and serves as an additional security check when
                later processing the file in complete-external-upload endpoint.
              type: string
          type: object
      required:
      - file_name
      - file_size
      - upload_type
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--uploads-batch-presign-multipart-parts.json:
      properties:
        part_numbers:
          description: |-
            The part numbers to generate the presigned URLs for,
            must be between 1 and 10000.
          example:
          - 1
          - 2
          - 3
          type: array
          x-konfig-original-example:
          - 1
          - 2
          - 3
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsGeneratePresignedUrlsForMultipartPartsRequest-properties-part_numbers
        unique_identifier:
          description: |-
            The unique identifier returned in the original /create-multipart
            request.
          example: 66e86218-80d9-4bda-b4d5-2b6def968705
          type: string
          x-konfig-original-example: 66e86218-80d9-4bda-b4d5-2b6def968705
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsGeneratePresignedUrlsForMultipartPartsRequest-properties-unique_identifier
      required:
      - part_numbers
      - unique_identifier
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--uploads-abort-multipart.json:
      properties:
        external_upload_identifier:
          description: |-
            The identifier of the multipart upload in the external
            storage provider. This is the multipart upload_id in AWS S3.
          example: 84x83tmxy398t3y._Q_z8CoJYVr69bE6D7f8J6Oo0434QquLFoYdGVerWFx9X5HDEI_TP_95c34n853495x35345394.d.ghQ
          type: string
          x-konfig-original-example: 84x83tmxy398t3y._Q_z8CoJYVr69bE6D7f8J6Oo0434QquLFoYdGVerWFx9X5HDEI_TP_95c34n853495x35345394.d.ghQ
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsAbortMultipartUploadRequest-properties-external_upload_identifier
      required:
      - external_upload_identifier
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--uploads-complete-multipart.json:
      properties:
        unique_identifier:
          description: |-
            The unique identifier returned in the original /create-multipart
            request.
          example: 66e86218-80d9-4bda-b4d5-2b6def968705
          type: string
          x-konfig-original-example: 66e86218-80d9-4bda-b4d5-2b6def968705
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCompleteMultipartUploadRequest-properties-unique_identifier
        parts:
          description: |-
            All of the part numbers and their corresponding ETags
            that have been uploaded must be provided.
          example:
          - part_number: 1
            etag: 0c376dcfcc2606f4335bbc732de93344
          - part_number: 2
            etag: 09ert8cfcc2606f4335bbc732de91122
          type: array
          x-konfig-original-example:
          - part_number: 1
            etag: 0c376dcfcc2606f4335bbc732de93344
          - part_number: 2
            etag: 09ert8cfcc2606f4335bbc732de91122
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UploadsCompleteMultipartUploadRequest-properties-parts
      required:
      - parts
      - unique_identifier
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--user-badges-username.json:
      properties:
        username:
          type: string
      required:
      - username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - username
    konfig-generated-schema-single-parameter-schema-post--users.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        username:
          type: string
        active:
          description: |-
            This param requires an api key in the request header
            or it will be ignored
          type: boolean
        approved:
          type: boolean
        user_fields[1]:
          type: boolean
        external_ids:
          type: object
      required:
      - Api-Key
      - Api-Username
      - email
      - name
      - password
      - username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
    konfig-generated-schema-single-parameter-schema-get--u-username.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        username:
          type: string
      required:
      - Api-Key
      - Api-Username
      - username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
      - username
    konfig-generated-schema-single-parameter-schema-put--u-username.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        username:
          type: string
        name:
          type: string
        external_ids:
          type: object
      required:
      - Api-Key
      - Api-Username
      - username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
      - username
    konfig-generated-schema-single-parameter-schema-get--u-by-external-external_id.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        external_id:
          type: string
      required:
      - Api-Key
      - Api-Username
      - external_id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
      - external_id
    konfig-generated-schema-single-parameter-schema-get--u-by-external-provider-external_id.json:
      properties:
        Api-Key:
          type: string
        Api-Username:
          type: string
        provider:
          type: string
        external_id:
          type: string
      required:
      - Api-Key
      - Api-Username
      - external_id
      - provider
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Api-Key
      - Api-Username
      - provider
      - external_id
    konfig-generated-schema-single-parameter-schema-put--u-username-preferences-avatar-pick.json:
      properties:
        username:
          type: string
        upload_id:
          type: integer
        type:
          enum:
          - uploaded
          - custom
          - gravatar
          - system
          type: string
      required:
      - type
      - upload_id
      - username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - username
    konfig-generated-schema-single-parameter-schema-put--u-username-preferences-email.json:
      properties:
        username:
          type: string
        email:
          format: email
          type: string
      required:
      - email
      - username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - username
    konfig-generated-schema-single-parameter-schema-put--u-username-preferences-username.json:
      properties:
        username:
          type: string
        new_username:
          type: string
      required:
      - new_username
      - username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - username
    konfig-generated-schema-single-parameter-schema-get--directory_items.json:
      properties:
        period:
          enum:
          - daily
          - weekly
          - monthly
          - quarterly
          - yearly
          - all
          type: string
        order:
          enum:
          - likes_received
          - likes_given
          - topic_count
          - post_count
          - topics_entered
          - posts_read
          - days_visited
          type: string
        asc:
          enum:
          - "true"
          type: string
        page:
          type: integer
      required:
      - order
      - period
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - period
      - order
      - asc
      - page
    konfig-generated-schema-single-parameter-schema-delete--admin-users-id.json:
      properties:
        id:
          type: integer
        delete_posts:
          type: boolean
        block_email:
          type: boolean
        block_urls:
          type: boolean
        block_ip:
          type: boolean
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--admin-users-id.json:
      properties:
        id:
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--admin-users-id-activate.json:
      properties:
        id:
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--admin-users-id-deactivate.json:
      properties:
        id:
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--admin-users-id-suspend.json:
      properties:
        id:
          type: integer
        suspend_until:
          example: 2121-02-22
          type: string
          x-konfig-original-example: 2121-02-22
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersSuspendByIdJsonRequest-properties-suspend_until
        reason:
          type: string
        message:
          description: Will send an email with this message when present
          type: string
        post_action:
          example: delete
          type: string
          x-konfig-original-example: delete
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersSuspendByIdJsonRequest-properties-post_action
      required:
      - id
      - reason
      - suspend_until
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--admin-users-id-silence.json:
      properties:
        id:
          type: integer
        silenced_till:
          example: 2022-06-01T08:00:00.000Z
          type: string
          x-konfig-original-example: 2022-06-01T08:00:00.000Z
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersSilenceByIdRequest-properties-silenced_till
        reason:
          type: string
        message:
          description: Will send an email with this message when present
          type: string
        post_action:
          example: delete
          type: string
          x-konfig-original-example: delete
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-UsersSilenceByIdRequest-properties-post_action
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--admin-users-id-anonymize.json:
      properties:
        id:
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-post--admin-users-id-log_out.json:
      properties:
        id:
          type: integer
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-post--user_avatar-username-refresh_gravatar.json:
      properties:
        username:
          type: string
      required:
      - username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - username
    konfig-generated-schema-single-parameter-schema-get--admin-users-list-flag.json:
      properties:
        flag:
          enum:
          - active
          - new
          - staff
          - suspended
          - blocked
          - suspect
          type: string
        order:
          enum:
          - created
          - last_emailed
          - seen
          - username
          - email
          - trust_level
          - days_visited
          - posts_read
          - topics_viewed
          - posts
          - read_time
          type: string
        asc:
          enum:
          - "true"
          type: string
        page:
          type: integer
        show_emails:
          type: boolean
        stats:
          type: boolean
        email:
          type: string
        ip:
          type: string
      required:
      - flag
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - flag
      - order
      - asc
      - page
      - show_emails
      - stats
      - email
      - ip
    konfig-generated-schema-single-parameter-schema-get--user_actions.json:
      properties:
        offset:
          type: integer
        username:
          type: string
        filter:
          type: string
      required:
      - filter
      - offset
      - username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - offset
      - username
      - filter
    konfig-generated-schema-single-parameter-schema-post--session-forgot_password.json:
      properties:
        login:
          type: string
      required:
      - login
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--users-password-reset-token.json:
      properties:
        token:
          type: string
        username:
          type: string
        password:
          type: string
      required:
      - password
      - token
      - username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - token
    konfig-generated-schema-single-parameter-schema-get--u-username-emails.json:
      properties:
        username:
          type: string
      required:
      - username
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - username
    CategoriesCreateCategoryRequestRequest_permissions:
      additionalProperties: true
      example:
        everyone: 1
        staff: 6
      properties:
        everyone:
          example: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CategoriesCreateCategoryRequestRequest-properties-permissions-properties-everyone
        staff:
          type: integer
      type: object
    CategoriesUpdateCategoryByIdJsonRequest_permissions:
      additionalProperties: true
      example:
        everyone: 1
        staff: 6
      properties:
        everyone:
          example: 1
          type: integer
          x-konfig-original-example: 1
          x-konfig-generated-schema: konfig-generated-schema-components-schemas-CategoriesUpdateCategoryByIdJsonRequest-properties-permissions-properties-everyone
        staff:
          type: integer
      type: object
    GroupsCreateNewGroupRequest_group:
      example:
        automatic_membership_email_domains: automatic_membership_email_domains
        regular_category_ids:
        - 5
        - 5
        tracking_category_ids:
        - 7
        - 7
        flair_icon: flair_icon
        public_admission: true
        primary_group: true
        bio_raw: bio_raw
        public_exit: true
        flair_upload_id: 6
        owner_usernames: owner_usernames
        flair_bg_color: flair_bg_color
        watching_category_ids:
        - 2
        - 2
        full_name: full_name
        default_notification_level: 1
        muted_category_ids:
        - 5
        - 5
        name: name
        visibility_level: 0
        usernames: usernames
        watching_first_post_category_ids:
        - 9
        - 9
      properties:
        name:
          type: string
        full_name:
          type: string
        bio_raw:
          description: About Group
          type: string
        usernames:
          description: "comma,separated"
          type: string
        owner_usernames:
          description: "comma,separated"
          type: string
        automatic_membership_email_domains:
          description: pipe|separated
          type: string
        visibility_level:
          type: integer
        primary_group:
          type: boolean
        flair_icon:
          type: string
        flair_upload_id:
          type: integer
        flair_bg_color:
          type: string
        public_admission:
          type: boolean
        public_exit:
          type: boolean
        default_notification_level:
          type: integer
        muted_category_ids:
          items:
            type: integer
          type: array
        regular_category_ids:
          items:
            type: integer
          type: array
        watching_category_ids:
          items:
            type: integer
          type: array
        tracking_category_ids:
          items:
            type: integer
          type: array
        watching_first_post_category_ids:
          items:
            type: integer
          type: array
      required:
      - name
      type: object
    PostsUpdateSinglePostJsonRequest_post:
      example:
        edit_reason: edit_reason
        raw: raw
      properties:
        raw:
          type: string
        edit_reason:
          type: string
      required:
      - raw
      type: object
    TopicsUpdateTopicByIdJsonRequest_topic:
      example:
        category_id: 0
        title: title
      properties:
        title:
          type: string
        category_id:
          type: integer
      type: object
    UploadsInitiateDirectExternalUploadRequest_metadata:
      example:
        sha1-checksum: sha1-checksum
      properties:
        sha1-checksum:
          description: |-
            The SHA1 checksum of the upload binary blob. Optionally
            be provided and serves as an additional security check when
            later processing the file in complete-external-upload endpoint.
          type: string
      type: object
    BackupsListResponse_inner:
      example:
        filename: filename
        size: 0
        last_modified: last_modified
      properties:
        filename:
          type: string
        size:
          type: integer
        last_modified:
          type: string
      required:
      - filename
      - last_modified
      - size
      type: object
    BadgesListResponse_badges_inner:
      example:
        listable: true
        image_url: ""
        query: ""
        i18n_name: ""
        icon: icon
        description: description
        multiple_grant: true
        auto_revoke: true
        long_description: long_description
        trigger: ""
        target_posts: true
        enabled: true
        manually_grantable: true
        grant_count: 6
        system: true
        badge_type_id: 5
        badge_grouping_id: 1
        name: name
        allow_title: true
        id: 0
        show_posts: true
        slug: slug
      properties:
        description:
          type: string
        id:
          type: integer
        name:
          type: string
        grant_count:
          type: integer
        allow_title:
          type: boolean
        multiple_grant:
          type: boolean
        icon:
          type: string
        image_url: {}
        listable:
          type: boolean
        enabled:
          type: boolean
        badge_grouping_id:
          type: integer
        system:
          type: boolean
        long_description:
          type: string
        slug:
          type: string
        manually_grantable:
          type: boolean
        query: {}
        trigger: {}
        target_posts:
          type: boolean
        auto_revoke:
          type: boolean
        show_posts:
          type: boolean
        i18n_name: {}
        badge_type_id:
          type: integer
      required:
      - allow_title
      - auto_revoke
      - badge_grouping_id
      - badge_type_id
      - description
      - enabled
      - grant_count
      - icon
      - id
      - image_url
      - listable
      - long_description
      - manually_grantable
      - multiple_grant
      - name
      - query
      - show_posts
      - slug
      - system
      - target_posts
      - trigger
      type: object
    BadgesListResponse_badge_types_inner:
      example:
        name: name
        id: 5
        sort_order: 2
      properties:
        id:
          type: integer
        name:
          type: string
        sort_order:
          type: integer
      required:
      - id
      - name
      - sort_order
      type: object
    BadgesListResponse_badge_groupings_inner:
      example:
        system: true
        name: name
        description: ""
        id: 7
        position: 9
      properties:
        description: {}
        id:
          type: integer
        name:
          type: string
        position:
          type: integer
        system:
          type: boolean
      required:
      - description
      - id
      - name
      - position
      - system
      type: object
    BadgesListResponse_admin_badges_triggers:
      example:
        user_change: 3
        trust_level_change: 7
        none: 2
        post_revision: 4
        post_action: 1
      properties:
        user_change:
          type: integer
        none:
          type: integer
        post_revision:
          type: integer
        trust_level_change:
          type: integer
        post_action:
          type: integer
      required:
      - none
      - post_action
      - post_revision
      - trust_level_change
      - user_change
      type: object
    BadgesListResponse_admin_badges:
      example:
        badge_type_ids:
        - ""
        - ""
        protected_system_fields:
        - ""
        - ""
        triggers:
          user_change: 3
          trust_level_change: 7
          none: 2
          post_revision: 4
          post_action: 1
        badge_ids:
        - ""
        - ""
        badge_grouping_ids:
        - ""
        - ""
      properties:
        protected_system_fields:
          items: {}
          type: array
        triggers:
          $ref: '#/components/schemas/BadgesListResponse_admin_badges_triggers'
        badge_ids:
          items: {}
          type: array
        badge_grouping_ids:
          items: {}
          type: array
        badge_type_ids:
          items: {}
          type: array
      required:
      - badge_grouping_ids
      - badge_ids
      - badge_type_ids
      - protected_system_fields
      - triggers
      type: object
    BadgesCreateBadgeResponse_badge:
      example:
        listable: true
        image_url: ""
        query: ""
        icon: icon
        description: description
        multiple_grant: true
        auto_revoke: true
        long_description: long_description
        trigger: ""
        target_posts: true
        enabled: true
        manually_grantable: true
        grant_count: 6
        system: true
        badge_type_id: 5
        badge_grouping_id: 1
        name: name
        allow_title: true
        id: 0
        show_posts: true
        slug: slug
      properties:
        description:
          type: string
        id:
          type: integer
        name:
          type: string
        grant_count:
          type: integer
        allow_title:
          type: boolean
        multiple_grant:
          type: boolean
        icon:
          type: string
        image_url: {}
        listable:
          type: boolean
        enabled:
          type: boolean
        badge_grouping_id:
          type: integer
        system:
          type: boolean
        long_description:
          type: string
        slug:
          type: string
        manually_grantable:
          type: boolean
        query: {}
        trigger: {}
        target_posts:
          type: boolean
        auto_revoke:
          type: boolean
        show_posts:
          type: boolean
        badge_type_id:
          type: integer
      required:
      - allow_title
      - auto_revoke
      - badge_grouping_id
      - badge_type_id
      - description
      - enabled
      - grant_count
      - icon
      - id
      - image_url
      - listable
      - long_description
      - manually_grantable
      - multiple_grant
      - name
      - query
      - show_posts
      - slug
      - system
      - target_posts
      - trigger
      type: object
    CategoriesListResponse_category_list_categories_inner:
      example:
        uploaded_background: ""
        color: color
        topics_year: 7
        uploaded_background_dark: ""
        navigate_to_first_post_after_read: true
        description: ""
        topics_month: 4
        topic_template: ""
        show_subcategory_list: true
        topics_week: 2
        uploaded_logo: ""
        description_excerpt: ""
        sort_ascending: ""
        num_featured_topics: 7
        is_uncategorized: true
        topics_day: 3
        id: 0
        subcategory_list:
        - ""
        - ""
        sort_order: ""
        default_view: ""
        slug: slug
        subcategory_list_style: subcategory_list_style
        has_children: true
        default_top_period: default_top_period
        can_edit: true
        description_text: ""
        permission: 5
        topic_count: 6
        uploaded_logo_dark: ""
        read_restricted: true
        topics_all_time: 1
        minimum_required_tags: 9
        topic_url: ""
        subcategory_ids:
        - ""
        - ""
        default_list_filter: default_list_filter
        name: name
        notification_level: 2
        text_color: text_color
        post_count: 1
        position: 5
      properties:
        description: {}
        id:
          type: integer
        name:
          type: string
        color:
          type: string
        text_color:
          type: string
        slug:
          type: string
        topic_count:
          type: integer
        post_count:
          type: integer
        position:
          type: integer
        description_text: {}
        description_excerpt: {}
        topic_url: {}
        read_restricted:
          type: boolean
        permission:
          type: integer
        notification_level:
          type: integer
        can_edit:
          type: boolean
        topic_template: {}
        has_children:
          type: boolean
        sort_order: {}
        sort_ascending: {}
        show_subcategory_list:
          type: boolean
        num_featured_topics:
          type: integer
        default_view: {}
        subcategory_list_style:
          type: string
        default_top_period:
          type: string
        default_list_filter:
          type: string
        minimum_required_tags:
          type: integer
        navigate_to_first_post_after_read:
          type: boolean
        topics_day:
          type: integer
        topics_week:
          type: integer
        topics_month:
          type: integer
        topics_year:
          type: integer
        topics_all_time:
          type: integer
        is_uncategorized:
          type: boolean
        subcategory_ids:
          items: {}
          type: array
        subcategory_list:
          items: {}
          type: array
        uploaded_logo: {}
        uploaded_logo_dark: {}
        uploaded_background: {}
        uploaded_background_dark: {}
      required:
      - can_edit
      - color
      - default_list_filter
      - default_top_period
      - default_view
      - description
      - description_excerpt
      - description_text
      - has_children
      - id
      - minimum_required_tags
      - name
      - navigate_to_first_post_after_read
      - notification_level
      - num_featured_topics
      - permission
      - position
      - post_count
      - read_restricted
      - show_subcategory_list
      - slug
      - sort_ascending
      - sort_order
      - subcategory_ids
      - subcategory_list_style
      - text_color
      - topic_count
      - topic_template
      - topic_url
      - topics_all_time
      - topics_day
      - topics_month
      - topics_week
      - topics_year
      - uploaded_background
      - uploaded_background_dark
      - uploaded_logo
      - uploaded_logo_dark
      type: object
    CategoriesListResponse_category_list:
      example:
        can_create_topic: true
        can_create_category: true
        categories:
        - uploaded_background: ""
          color: color
          topics_year: 7
          uploaded_background_dark: ""
          navigate_to_first_post_after_read: true
          description: ""
          topics_month: 4
          topic_template: ""
          show_subcategory_list: true
          topics_week: 2
          uploaded_logo: ""
          description_excerpt: ""
          sort_ascending: ""
          num_featured_topics: 7
          is_uncategorized: true
          topics_day: 3
          id: 0
          subcategory_list:
          - ""
          - ""
          sort_order: ""
          default_view: ""
          slug: slug
          subcategory_list_style: subcategory_list_style
          has_children: true
          default_top_period: default_top_period
          can_edit: true
          description_text: ""
          permission: 5
          topic_count: 6
          uploaded_logo_dark: ""
          read_restricted: true
          topics_all_time: 1
          minimum_required_tags: 9
          topic_url: ""
          subcategory_ids:
          - ""
          - ""
          default_list_filter: default_list_filter
          name: name
          notification_level: 2
          text_color: text_color
          post_count: 1
          position: 5
        - uploaded_background: ""
          color: color
          topics_year: 7
          uploaded_background_dark: ""
          navigate_to_first_post_after_read: true
          description: ""
          topics_month: 4
          topic_template: ""
          show_subcategory_list: true
          topics_week: 2
          uploaded_logo: ""
          description_excerpt: ""
          sort_ascending: ""
          num_featured_topics: 7
          is_uncategorized: true
          topics_day: 3
          id: 0
          subcategory_list:
          - ""
          - ""
          sort_order: ""
          default_view: ""
          slug: slug
          subcategory_list_style: subcategory_list_style
          has_children: true
          default_top_period: default_top_period
          can_edit: true
          description_text: ""
          permission: 5
          topic_count: 6
          uploaded_logo_dark: ""
          read_restricted: true
          topics_all_time: 1
          minimum_required_tags: 9
          topic_url: ""
          subcategory_ids:
          - ""
          - ""
          default_list_filter: default_list_filter
          name: name
          notification_level: 2
          text_color: text_color
          post_count: 1
          position: 5
      properties:
        can_create_category:
          type: boolean
        can_create_topic:
          type: boolean
        categories:
          items:
            $ref: '#/components/schemas/CategoriesListResponse_category_list_categories_inner'
          type: array
      required:
      - can_create_category
      - can_create_topic
      - categories
      type: object
    CategoriesCreateCategoryRequestResponse_category_required_tag_groups_inner:
      example:
        name: name
        min_count: 9
      properties:
        name:
          type: string
        min_count:
          type: integer
      required:
      - min_count
      - name
      type: object
    CategoriesCreateCategoryRequestResponse_category_group_permissions_inner:
      example:
        permission_type: 3
        group_name: group_name
      properties:
        permission_type:
          type: integer
        group_name:
          type: string
      required:
      - group_name
      - permission_type
      type: object
    CategoriesCreateCategoryRequestResponse_category:
      example:
        uploaded_background: ""
        form_template_ids:
        - ""
        - ""
        navigate_to_first_post_after_read: true
        email_in_allow_strangers: true
        show_subcategory_list: true
        read_only_banner: ""
        uploaded_logo: ""
        description_excerpt: ""
        auto_close_based_on_last_post: true
        can_delete: true
        allow_unlimited_owner_edits_on_first_post: true
        id: 0
        slug: slug
        subcategory_list_style: subcategory_list_style
        auto_close_hours: ""
        has_children: ""
        custom_fields: "{}"
        default_top_period: default_top_period
        all_topics_wiki: true
        allow_badges: true
        description_text: ""
        minimum_required_tags: 7
        default_list_filter: default_list_filter
        allowed_tag_groups:
        - ""
        - ""
        name: name
        notification_level: 5
        text_color: text_color
        post_count: 1
        position: 5
        mailinglist_mirror: true
        available_groups:
        - ""
        - ""
        color: color
        uploaded_background_dark: ""
        description: ""
        topic_featured_link_allowed: true
        topic_template: ""
        sort_ascending: ""
        category_setting: ""
        num_featured_topics: 2
        allowed_tags:
        - ""
        - ""
        group_permissions:
        - permission_type: 3
          group_name: group_name
        - permission_type: 3
          group_name: group_name
        search_priority: 2
        sort_order: ""
        default_view: ""
        can_edit: true
        permission: ""
        topic_count: 6
        uploaded_logo_dark: ""
        read_restricted: true
        allow_global_tags: true
        topic_url: ""
        email_in: ""
        default_slow_mode_seconds: ""
        required_tag_groups:
        - name: name
          min_count: 9
        - name: name
          min_count: 9
      properties:
        description: {}
        id:
          type: integer
        name:
          type: string
        color:
          type: string
        text_color:
          type: string
        slug:
          type: string
        topic_count:
          type: integer
        post_count:
          type: integer
        position:
          type: integer
        description_text: {}
        description_excerpt: {}
        topic_url: {}
        read_restricted:
          type: boolean
        permission: {}
        notification_level:
          type: integer
        can_edit:
          type: boolean
        topic_template: {}
        form_template_ids:
          items: {}
          type: array
        has_children: {}
        sort_order: {}
        sort_ascending: {}
        show_subcategory_list:
          type: boolean
        num_featured_topics:
          type: integer
        default_view: {}
        subcategory_list_style:
          type: string
        default_top_period:
          type: string
        default_list_filter:
          type: string
        minimum_required_tags:
          type: integer
        navigate_to_first_post_after_read:
          type: boolean
        custom_fields:
          properties: {}
          type: object
        allowed_tags:
          items: {}
          type: array
        allowed_tag_groups:
          items: {}
          type: array
        allow_global_tags:
          type: boolean
        required_tag_groups:
          items:
            $ref: '#/components/schemas/CategoriesCreateCategoryRequestResponse_category_required_tag_groups_inner'
          type: array
        category_setting: {}
        read_only_banner: {}
        available_groups:
          items: {}
          type: array
        auto_close_hours: {}
        auto_close_based_on_last_post:
          type: boolean
        allow_unlimited_owner_edits_on_first_post:
          type: boolean
        default_slow_mode_seconds: {}
        group_permissions:
          items:
            $ref: '#/components/schemas/CategoriesCreateCategoryRequestResponse_category_group_permissions_inner'
          type: array
        email_in: {}
        email_in_allow_strangers:
          type: boolean
        mailinglist_mirror:
          type: boolean
        all_topics_wiki:
          type: boolean
        can_delete:
          type: boolean
        allow_badges:
          type: boolean
        topic_featured_link_allowed:
          type: boolean
        search_priority:
          type: integer
        uploaded_logo: {}
        uploaded_logo_dark: {}
        uploaded_background: {}
        uploaded_background_dark: {}
      required:
      - all_topics_wiki
      - allow_badges
      - allow_unlimited_owner_edits_on_first_post
      - auto_close_based_on_last_post
      - auto_close_hours
      - available_groups
      - can_delete
      - can_edit
      - color
      - custom_fields
      - default_list_filter
      - default_slow_mode_seconds
      - default_top_period
      - default_view
      - description
      - description_excerpt
      - description_text
      - email_in
      - email_in_allow_strangers
      - group_permissions
      - has_children
      - id
      - mailinglist_mirror
      - minimum_required_tags
      - name
      - navigate_to_first_post_after_read
      - notification_level
      - num_featured_topics
      - permission
      - position
      - post_count
      - read_only_banner
      - read_restricted
      - required_tag_groups
      - search_priority
      - show_subcategory_list
      - slug
      - sort_ascending
      - sort_order
      - subcategory_list_style
      - text_color
      - topic_count
      - topic_featured_link_allowed
      - topic_template
      - topic_url
      - uploaded_background
      - uploaded_background_dark
      - uploaded_logo
      - uploaded_logo_dark
      type: object
    CategoriesUpdateCategoryByIdJsonResponse_category:
      example:
        uploaded_background: ""
        form_template_ids:
        - ""
        - ""
        navigate_to_first_post_after_read: true
        email_in_allow_strangers: true
        show_subcategory_list: true
        read_only_banner: ""
        uploaded_logo: ""
        description_excerpt: ""
        auto_close_based_on_last_post: true
        can_delete: true
        allow_unlimited_owner_edits_on_first_post: true
        id: 0
        slug: slug
        subcategory_list_style: subcategory_list_style
        auto_close_hours: ""
        has_children: ""
        custom_fields: "{}"
        default_top_period: default_top_period
        all_topics_wiki: true
        allow_badges: true
        description_text: ""
        minimum_required_tags: 7
        default_list_filter: default_list_filter
        allowed_tag_groups:
        - ""
        - ""
        name: name
        notification_level: 5
        text_color: text_color
        post_count: 1
        position: 5
        mailinglist_mirror: true
        available_groups:
        - ""
        - ""
        color: color
        uploaded_background_dark: ""
        description: ""
        topic_featured_link_allowed: true
        topic_template: ""
        sort_ascending: ""
        category_setting: ""
        num_featured_topics: 2
        allowed_tags:
        - ""
        - ""
        group_permissions:
        - permission_type: 3
          group_name: group_name
        - permission_type: 3
          group_name: group_name
        search_priority: 9
        sort_order: ""
        default_view: ""
        can_edit: true
        permission: ""
        topic_count: 6
        uploaded_logo_dark: ""
        read_restricted: true
        allow_global_tags: true
        topic_url: ""
        email_in: ""
        default_slow_mode_seconds: ""
        required_tag_groups:
        - name: name
          min_count: 9
        - name: name
          min_count: 9
      properties:
        description: {}
        id:
          type: integer
        name:
          type: string
        color:
          type: string
        text_color:
          type: string
        slug:
          type: string
        topic_count:
          type: integer
        post_count:
          type: integer
        position:
          type: integer
        description_text: {}
        description_excerpt: {}
        topic_url: {}
        read_restricted:
          type: boolean
        permission: {}
        notification_level:
          type: integer
        can_edit:
          type: boolean
        topic_template: {}
        form_template_ids:
          items: {}
          type: array
        has_children: {}
        sort_order: {}
        sort_ascending: {}
        show_subcategory_list:
          type: boolean
        num_featured_topics:
          type: integer
        default_view: {}
        subcategory_list_style:
          type: string
        default_top_period:
          type: string
        default_list_filter:
          type: string
        minimum_required_tags:
          type: integer
        navigate_to_first_post_after_read:
          type: boolean
        custom_fields:
          properties: {}
          type: object
        allowed_tags:
          items: {}
          type: array
        allowed_tag_groups:
          items: {}
          type: array
        allow_global_tags:
          type: boolean
        required_tag_groups:
          items:
            $ref: '#/components/schemas/CategoriesCreateCategoryRequestResponse_category_required_tag_groups_inner'
          type: array
        category_setting: {}
        read_only_banner: {}
        available_groups:
          items: {}
          type: array
        auto_close_hours: {}
        auto_close_based_on_last_post:
          type: boolean
        allow_unlimited_owner_edits_on_first_post:
          type: boolean
        default_slow_mode_seconds: {}
        group_permissions:
          items:
            $ref: '#/components/schemas/CategoriesCreateCategoryRequestResponse_category_group_permissions_inner'
          type: array
        email_in: {}
        email_in_allow_strangers:
          type: boolean
        mailinglist_mirror:
          type: boolean
        all_topics_wiki:
          type: boolean
        can_delete:
          type: boolean
        allow_badges:
          type: boolean
        topic_featured_link_allowed:
          type: boolean
        search_priority:
          type: integer
        uploaded_logo: {}
        uploaded_logo_dark: {}
        uploaded_background: {}
        uploaded_background_dark: {}
      required:
      - all_topics_wiki
      - allow_badges
      - allow_unlimited_owner_edits_on_first_post
      - auto_close_based_on_last_post
      - auto_close_hours
      - available_groups
      - can_delete
      - can_edit
      - color
      - custom_fields
      - default_list_filter
      - default_slow_mode_seconds
      - default_top_period
      - default_view
      - description
      - description_excerpt
      - description_text
      - email_in
      - email_in_allow_strangers
      - form_template_ids
      - group_permissions
      - has_children
      - id
      - mailinglist_mirror
      - minimum_required_tags
      - name
      - navigate_to_first_post_after_read
      - notification_level
      - num_featured_topics
      - permission
      - position
      - post_count
      - read_only_banner
      - read_restricted
      - required_tag_groups
      - search_priority
      - show_subcategory_list
      - slug
      - sort_ascending
      - sort_order
      - subcategory_list_style
      - text_color
      - topic_count
      - topic_featured_link_allowed
      - topic_template
      - topic_url
      - uploaded_background
      - uploaded_background_dark
      - uploaded_logo
      - uploaded_logo_dark
      type: object
    CategoriesListTopicsResponse_users_inner:
      example:
        name: name
        id: 0
        avatar_template: avatar_template
        username: username
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        avatar_template:
          type: string
      required:
      - avatar_template
      - id
      - name
      - username
      type: object
    CategoriesListTopicsResponse_topic_list_topics_inner_posters_inner:
      example:
        primary_group_id: ""
        user_id: 2
        description: description
        extras: extras
      properties:
        description:
          type: string
        extras:
          type: string
        user_id:
          type: integer
        primary_group_id: {}
      required:
      - description
      - extras
      - primary_group_id
      - user_id
      type: object
    CategoriesListTopicsResponse_topic_list_topics_inner:
      example:
        unpinned: ""
        pinned: true
        featured_link: ""
        created_at: created_at
        bumped: true
        title: title
        liked: ""
        archived: true
        has_summary: true
        fancy_title: fancy_title
        category_id: 3
        id: 1
        bumped_at: bumped_at
        slug: slug
        views: 7
        last_posted_at: last_posted_at
        visible: true
        like_count: 9
        image_url: ""
        bookmarked: ""
        last_poster_username: last_poster_username
        posters:
        - primary_group_id: ""
          user_id: 2
          description: description
          extras: extras
        - primary_group_id: ""
          user_id: 2
          description: description
          extras: extras
        pinned_globally: true
        reply_count: 5
        archetype: archetype
        highest_post_number: 2
        closed: true
        excerpt: excerpt
        unseen: true
        posts_count: 5
      properties:
        title:
          type: string
        id:
          type: integer
        fancy_title:
          type: string
        slug:
          type: string
        posts_count:
          type: integer
        reply_count:
          type: integer
        highest_post_number:
          type: integer
        image_url: {}
        created_at:
          type: string
        last_posted_at:
          type: string
        bumped:
          type: boolean
        bumped_at:
          type: string
        archetype:
          type: string
        unseen:
          type: boolean
        pinned:
          type: boolean
        unpinned: {}
        excerpt:
          type: string
        visible:
          type: boolean
        closed:
          type: boolean
        archived:
          type: boolean
        bookmarked: {}
        liked: {}
        views:
          type: integer
        like_count:
          type: integer
        has_summary:
          type: boolean
        last_poster_username:
          type: string
        category_id:
          type: integer
        pinned_globally:
          type: boolean
        featured_link: {}
        posters:
          items:
            $ref: '#/components/schemas/CategoriesListTopicsResponse_topic_list_topics_inner_posters_inner'
          type: array
      required:
      - archetype
      - archived
      - bookmarked
      - bumped
      - bumped_at
      - category_id
      - closed
      - created_at
      - excerpt
      - fancy_title
      - featured_link
      - has_summary
      - highest_post_number
      - id
      - image_url
      - last_posted_at
      - last_poster_username
      - like_count
      - liked
      - pinned
      - pinned_globally
      - posters
      - posts_count
      - reply_count
      - slug
      - title
      - unpinned
      - unseen
      - views
      - visible
      type: object
    CategoriesListTopicsResponse_topic_list:
      example:
        can_create_topic: true
        per_page: 6
        topics:
        - unpinned: ""
          pinned: true
          featured_link: ""
          created_at: created_at
          bumped: true
          title: title
          liked: ""
          archived: true
          has_summary: true
          fancy_title: fancy_title
          category_id: 3
          id: 1
          bumped_at: bumped_at
          slug: slug
          views: 7
          last_posted_at: last_posted_at
          visible: true
          like_count: 9
          image_url: ""
          bookmarked: ""
          last_poster_username: last_poster_username
          posters:
          - primary_group_id: ""
            user_id: 2
            description: description
            extras: extras
          - primary_group_id: ""
            user_id: 2
            description: description
            extras: extras
          pinned_globally: true
          reply_count: 5
          archetype: archetype
          highest_post_number: 2
          closed: true
          excerpt: excerpt
          unseen: true
          posts_count: 5
        - unpinned: ""
          pinned: true
          featured_link: ""
          created_at: created_at
          bumped: true
          title: title
          liked: ""
          archived: true
          has_summary: true
          fancy_title: fancy_title
          category_id: 3
          id: 1
          bumped_at: bumped_at
          slug: slug
          views: 7
          last_posted_at: last_posted_at
          visible: true
          like_count: 9
          image_url: ""
          bookmarked: ""
          last_poster_username: last_poster_username
          posters:
          - primary_group_id: ""
            user_id: 2
            description: description
            extras: extras
          - primary_group_id: ""
            user_id: 2
            description: description
            extras: extras
          pinned_globally: true
          reply_count: 5
          archetype: archetype
          highest_post_number: 2
          closed: true
          excerpt: excerpt
          unseen: true
          posts_count: 5
        top_tags:
        - ""
        - ""
      properties:
        can_create_topic:
          type: boolean
        per_page:
          type: integer
        top_tags:
          items: {}
          type: array
        topics:
          items:
            $ref: '#/components/schemas/CategoriesListTopicsResponse_topic_list_topics_inner'
          type: array
      required:
      - can_create_topic
      - per_page
      - topics
      type: object
    GroupsCreateNewGroupResponse_basic_group:
      example:
        mentionable_level: 1
        public_admission: true
        primary_group: true
        flair_color: ""
        title: ""
        can_see_members: true
        publish_read_state: true
        visibility_level: 5
        id: 0
        allow_membership_requests: true
        messageable_level: 5
        grant_trust_level: ""
        can_edit_group: true
        automatic: true
        bio_raw: ""
        flair_url: ""
        public_exit: true
        members_visibility_level: 7
        bio_excerpt: ""
        flair_bg_color: ""
        full_name: ""
        default_notification_level: 2
        user_count: 6
        membership_request_template: ""
        name: name
        incoming_email: ""
        has_messages: true
        can_admin_group: true
        bio_cooked: ""
      properties:
        title: {}
        id:
          type: integer
        automatic:
          type: boolean
        name:
          type: string
        user_count:
          type: integer
        mentionable_level:
          type: integer
        messageable_level:
          type: integer
        visibility_level:
          type: integer
        primary_group:
          type: boolean
        grant_trust_level: {}
        incoming_email: {}
        has_messages:
          type: boolean
        flair_url: {}
        flair_bg_color: {}
        flair_color: {}
        bio_raw: {}
        bio_cooked: {}
        bio_excerpt: {}
        public_admission:
          type: boolean
        public_exit:
          type: boolean
        allow_membership_requests:
          type: boolean
        full_name: {}
        default_notification_level:
          type: integer
        membership_request_template: {}
        members_visibility_level:
          type: integer
        can_see_members:
          type: boolean
        can_admin_group:
          type: boolean
        can_edit_group:
          type: boolean
        publish_read_state:
          type: boolean
      required:
      - allow_membership_requests
      - automatic
      - bio_cooked
      - bio_excerpt
      - bio_raw
      - can_admin_group
      - can_see_members
      - default_notification_level
      - flair_bg_color
      - flair_color
      - flair_url
      - full_name
      - grant_trust_level
      - has_messages
      - id
      - incoming_email
      - members_visibility_level
      - membership_request_template
      - mentionable_level
      - messageable_level
      - name
      - primary_group
      - public_admission
      - public_exit
      - publish_read_state
      - title
      - user_count
      - visibility_level
      type: object
    GroupsGetGroupByIdResponse_group:
      example:
        mentionable_level: 1
        tracking_tags:
        - ""
        - ""
        regular_tags:
        - ""
        - ""
        primary_group: true
        flair_color: ""
        publish_read_state: true
        email_password: ""
        muted_tags:
        - ""
        - ""
        imap_old_emails: ""
        smtp_updated_at: ""
        imap_new_emails: ""
        visibility_level: 5
        mentionable: true
        messageable: true
        id: 0
        is_group_user: true
        allow_membership_requests: true
        watching_first_post_category_ids:
        - ""
        - ""
        imap_ssl: ""
        automatic_membership_email_domains: ""
        regular_category_ids:
        - ""
        - ""
        watching_first_post_tags:
        - ""
        - ""
        messageable_level: 5
        can_edit_group: true
        public_exit: true
        watching_tags:
        - ""
        - ""
        imap_updated_at: ""
        full_name: ""
        smtp_port: ""
        imap_mailbox_name: imap_mailbox_name
        smtp_server: ""
        membership_request_template: ""
        name: name
        smtp_updated_by: ""
        tracking_category_ids:
        - ""
        - ""
        public_admission: true
        imap_updated_by: ""
        title: ""
        can_see_members: true
        imap_port: ""
        muted_category_ids:
        - ""
        - ""
        smtp_ssl: ""
        associated_group_ids:
        - ""
        - ""
        imap_server: ""
        smtp_enabled: true
        imap_mailboxes:
        - ""
        - ""
        email_from_alias: ""
        imap_last_error: ""
        grant_trust_level: ""
        email_username: ""
        automatic: true
        bio_raw: ""
        flair_url: ""
        message_count: 9
        members_visibility_level: 7
        bio_excerpt: ""
        flair_bg_color: ""
        is_group_owner_display: true
        watching_category_ids:
        - ""
        - ""
        default_notification_level: 2
        user_count: 6
        imap_enabled: true
        incoming_email: ""
        has_messages: true
        allow_unknown_sender_topic_replies: true
        can_admin_group: true
        bio_cooked: ""
      properties:
        title: {}
        id:
          type: integer
        automatic:
          type: boolean
        name:
          type: string
        user_count:
          type: integer
        mentionable_level:
          type: integer
        messageable_level:
          type: integer
        visibility_level:
          type: integer
        primary_group:
          type: boolean
        grant_trust_level: {}
        incoming_email: {}
        has_messages:
          type: boolean
        flair_url: {}
        flair_bg_color: {}
        flair_color: {}
        bio_raw: {}
        bio_cooked: {}
        bio_excerpt: {}
        public_admission:
          type: boolean
        public_exit:
          type: boolean
        allow_membership_requests:
          type: boolean
        full_name: {}
        default_notification_level:
          type: integer
        membership_request_template: {}
        is_group_user:
          type: boolean
        members_visibility_level:
          type: integer
        can_see_members:
          type: boolean
        can_admin_group:
          type: boolean
        can_edit_group:
          type: boolean
        publish_read_state:
          type: boolean
        is_group_owner_display:
          type: boolean
        mentionable:
          type: boolean
        messageable:
          type: boolean
        automatic_membership_email_domains: {}
        smtp_updated_at: {}
        smtp_updated_by: {}
        smtp_enabled:
          type: boolean
        smtp_server: {}
        smtp_port: {}
        smtp_ssl: {}
        imap_enabled:
          type: boolean
        imap_updated_at: {}
        imap_updated_by: {}
        imap_server: {}
        imap_port: {}
        imap_ssl: {}
        imap_mailbox_name:
          type: string
        imap_mailboxes:
          items: {}
          type: array
        email_username: {}
        email_from_alias: {}
        email_password: {}
        imap_last_error: {}
        imap_old_emails: {}
        imap_new_emails: {}
        message_count:
          type: integer
        allow_unknown_sender_topic_replies:
          type: boolean
        associated_group_ids:
          items: {}
          type: array
        watching_category_ids:
          items: {}
          type: array
        tracking_category_ids:
          items: {}
          type: array
        watching_first_post_category_ids:
          items: {}
          type: array
        regular_category_ids:
          items: {}
          type: array
        muted_category_ids:
          items: {}
          type: array
        watching_tags:
          items: {}
          type: array
        watching_first_post_tags:
          items: {}
          type: array
        tracking_tags:
          items: {}
          type: array
        regular_tags:
          items: {}
          type: array
        muted_tags:
          items: {}
          type: array
      required:
      - allow_membership_requests
      - allow_unknown_sender_topic_replies
      - automatic
      - automatic_membership_email_domains
      - bio_cooked
      - bio_excerpt
      - bio_raw
      - can_admin_group
      - can_see_members
      - default_notification_level
      - email_password
      - email_username
      - flair_bg_color
      - flair_color
      - flair_url
      - full_name
      - grant_trust_level
      - has_messages
      - id
      - imap_last_error
      - imap_mailbox_name
      - imap_mailboxes
      - imap_new_emails
      - imap_old_emails
      - imap_port
      - imap_server
      - imap_ssl
      - incoming_email
      - is_group_owner_display
      - is_group_user
      - members_visibility_level
      - membership_request_template
      - mentionable
      - mentionable_level
      - message_count
      - messageable
      - messageable_level
      - muted_category_ids
      - name
      - primary_group
      - public_admission
      - public_exit
      - publish_read_state
      - regular_category_ids
      - smtp_port
      - smtp_server
      - smtp_ssl
      - title
      - tracking_category_ids
      - user_count
      - visibility_level
      - watching_category_ids
      - watching_first_post_category_ids
      type: object
    GroupsGetGroupByIdResponse_extras:
      example:
        visible_group_names:
        - ""
        - ""
      properties:
        visible_group_names:
          items: {}
          type: array
      required:
      - visible_group_names
      type: object
    GroupsListMembersJsonResponse_members_inner:
      example:
        added_at: added_at
        timezone: timezone
        name: ""
        id: 0
        title: ""
        last_seen_at: last_seen_at
        avatar_template: avatar_template
        username: username
        last_posted_at: last_posted_at
      properties:
        title: {}
        id:
          type: integer
        username:
          type: string
        name: {}
        avatar_template:
          type: string
        last_posted_at:
          type: string
        last_seen_at:
          type: string
        added_at:
          type: string
        timezone:
          type: string
      required:
      - added_at
      - avatar_template
      - id
      - last_posted_at
      - last_seen_at
      - name
      - timezone
      - title
      - username
      type: object
    GroupsListMembersJsonResponse_meta:
      example:
        total: 6
        offset: 5
        limit: 1
      properties:
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
      required:
      - limit
      - offset
      - total
      type: object
    GroupsListResponse_groups_inner:
      example:
        mentionable_level: 1
        public_admission: true
        primary_group: true
        flair_color: ""
        title: ""
        can_see_members: true
        publish_read_state: true
        visibility_level: 5
        id: 0
        is_group_user: true
        allow_membership_requests: true
        messageable_level: 5
        grant_trust_level: ""
        is_group_owner: true
        can_edit_group: true
        automatic: true
        bio_raw: ""
        flair_url: ""
        display_name: display_name
        public_exit: true
        members_visibility_level: 7
        bio_excerpt: ""
        flair_bg_color: ""
        full_name: ""
        default_notification_level: 2
        user_count: 6
        membership_request_template: ""
        name: name
        incoming_email: ""
        has_messages: true
        can_admin_group: true
        bio_cooked: ""
      properties:
        title: {}
        id:
          type: integer
        automatic:
          type: boolean
        name:
          type: string
        display_name:
          type: string
        user_count:
          type: integer
        mentionable_level:
          type: integer
        messageable_level:
          type: integer
        visibility_level:
          type: integer
        primary_group:
          type: boolean
        grant_trust_level: {}
        incoming_email: {}
        has_messages:
          type: boolean
        flair_url: {}
        flair_bg_color: {}
        flair_color: {}
        bio_raw: {}
        bio_cooked: {}
        bio_excerpt: {}
        public_admission:
          type: boolean
        public_exit:
          type: boolean
        allow_membership_requests:
          type: boolean
        full_name: {}
        default_notification_level:
          type: integer
        membership_request_template: {}
        is_group_user:
          type: boolean
        is_group_owner:
          type: boolean
        members_visibility_level:
          type: integer
        can_see_members:
          type: boolean
        can_admin_group:
          type: boolean
        can_edit_group:
          type: boolean
        publish_read_state:
          type: boolean
      required:
      - allow_membership_requests
      - automatic
      - bio_cooked
      - bio_excerpt
      - bio_raw
      - can_admin_group
      - can_see_members
      - default_notification_level
      - display_name
      - flair_bg_color
      - flair_color
      - flair_url
      - full_name
      - grant_trust_level
      - has_messages
      - id
      - incoming_email
      - members_visibility_level
      - membership_request_template
      - mentionable_level
      - messageable_level
      - name
      - primary_group
      - public_admission
      - public_exit
      - publish_read_state
      - title
      - user_count
      - visibility_level
      type: object
    GroupsListResponse_extras:
      example:
        type_filters:
        - ""
        - ""
      properties:
        type_filters:
          items: {}
          type: array
      required:
      - type_filters
      type: object
    NotificationsGetUserNotificationsResponse_notifications_inner_data:
      example:
        badge_title: true
        badge_id: 5
        badge_slug: badge_slug
        badge_name: badge_name
        username: username
      properties:
        badge_id:
          type: integer
        badge_name:
          type: string
        badge_slug:
          type: string
        badge_title:
          type: boolean
        username:
          type: string
      type: object
    NotificationsGetUserNotificationsResponse_notifications_inner:
      example:
        notification_type: 1
        read: true
        data:
          badge_title: true
          badge_id: 5
          badge_slug: badge_slug
          badge_name: badge_name
          username: username
        user_id: 6
        created_at: created_at
        id: 0
        topic_id: ""
        post_number: ""
        slug: ""
      properties:
        id:
          type: integer
        user_id:
          type: integer
        notification_type:
          type: integer
        read:
          type: boolean
        created_at:
          type: string
        post_number: {}
        topic_id: {}
        slug: {}
        data:
          $ref: '#/components/schemas/NotificationsGetUserNotificationsResponse_notifications_inner_data'
      type: object
    PostsListLatestPostsAcrossTopicsResponse_latest_posts_inner_actions_summary_inner:
      example:
        can_act: true
        id: 1
      properties:
        id:
          type: integer
        can_act:
          type: boolean
      type: object
    PostsListLatestPostsAcrossTopicsResponse_latest_posts_inner:
      example:
        flair_color: ""
        moderator: true
        wiki: true
        trust_level: 1
        score: 2.027123023002322
        can_see_hidden_post: true
        can_view_edit_history: true
        reviewable_score_count: 6
        actions_summary:
        - can_act: true
          id: 1
        - can_act: true
          id: 1
        incoming_link_count: 7
        can_delete: true
        post_type: 5
        id: 6
        readers_count: 3
        edit_reason: ""
        cooked: cooked
        raw: raw
        reply_count: 5
        reply_to_post_number: ""
        version: 0
        deleted_at: ""
        user_id: 1
        topic_title: topic_title
        can_recover: true
        name: name
        user_title: ""
        post_number: 1
        hidden: true
        can_wiki: true
        topic_html_title: topic_html_title
        created_at: created_at
        admin: true
        updated_at: updated_at
        category_id: 7
        topic_id: 4
        quote_count: 2
        avatar_template: avatar_template
        reads: 9
        can_edit: true
        staff: true
        flair_url: ""
        flair_bg_color: ""
        reviewable_score_pending_count: 7
        reviewable_id: ""
        primary_group_name: ""
        flair_group_id: ""
        user_deleted: true
        yours: true
        topic_slug: topic_slug
        flair_name: ""
        username: username
        display_username: display_username
      properties:
        version:
          type: integer
        id:
          type: integer
        name:
          type: string
        username:
          type: string
        avatar_template:
          type: string
        created_at:
          type: string
        cooked:
          type: string
        post_number:
          type: integer
        post_type:
          type: integer
        updated_at:
          type: string
        reply_count:
          type: integer
        reply_to_post_number: {}
        quote_count:
          type: integer
        incoming_link_count:
          type: integer
        reads:
          type: integer
        readers_count:
          type: integer
        score:
          type: number
        yours:
          type: boolean
        topic_id:
          type: integer
        topic_slug:
          type: string
        topic_title:
          type: string
        topic_html_title:
          type: string
        category_id:
          type: integer
        display_username:
          type: string
        primary_group_name: {}
        flair_name: {}
        flair_url: {}
        flair_bg_color: {}
        flair_color: {}
        flair_group_id: {}
        can_edit:
          type: boolean
        can_delete:
          type: boolean
        can_recover:
          type: boolean
        can_see_hidden_post:
          type: boolean
        can_wiki:
          type: boolean
        user_title: {}
        raw:
          type: string
        actions_summary:
          items:
            $ref: '#/components/schemas/PostsListLatestPostsAcrossTopicsResponse_latest_posts_inner_actions_summary_inner'
          type: array
        moderator:
          type: boolean
        admin:
          type: boolean
        staff:
          type: boolean
        user_id:
          type: integer
        hidden:
          type: boolean
        trust_level:
          type: integer
        deleted_at: {}
        user_deleted:
          type: boolean
        edit_reason: {}
        can_view_edit_history:
          type: boolean
        wiki:
          type: boolean
        reviewable_id: {}
        reviewable_score_count:
          type: integer
        reviewable_score_pending_count:
          type: integer
      type: object
    PostsCreateTopicPostMessageResponse_actions_summary_inner:
      example:
        can_act: true
        id: 7
      properties:
        id:
          type: integer
        can_act:
          type: boolean
      required:
      - can_act
      - id
      type: object
    PostsGetSinglePostLikesResponse_actions_summary_inner:
      example:
        acted: true
        can_undo: true
        count: 1
        can_act: true
        id: 7
      properties:
        id:
          description: "`2`: like, `3`, `4`, `6`, `7`, `8`: flag"
          type: integer
        count:
          type: integer
        acted:
          type: boolean
        can_undo:
          type: boolean
        can_act:
          type: boolean
      required:
      - id
      type: object
    PostsUpdateSinglePostJsonResponse_post:
      example:
        flair_color: ""
        moderator: true
        wiki: true
        trust_level: 1
        score: 2.027123023002322
        can_see_hidden_post: true
        can_view_edit_history: true
        reviewable_score_count: 1
        actions_summary:
        - can_act: true
          id: 7
        - can_act: true
          id: 7
        incoming_link_count: 7
        can_delete: true
        draft_sequence: 1
        post_type: 5
        id: 6
        mentioned_users:
        - ""
        - ""
        readers_count: 3
        edit_reason: ""
        cooked: cooked
        raw: raw
        reply_count: 5
        reply_to_post_number: ""
        version: 0
        deleted_at: ""
        user_id: 7
        can_recover: true
        user_title: ""
        name: ""
        post_number: 1
        hidden: true
        can_wiki: true
        created_at: created_at
        admin: true
        updated_at: updated_at
        topic_id: 4
        quote_count: 2
        avatar_template: avatar_template
        bookmarked: true
        reads: 9
        can_edit: true
        staff: true
        flair_url: ""
        flair_bg_color: ""
        reviewable_score_pending_count: 6
        reviewable_id: ""
        primary_group_name: ""
        flair_group_id: ""
        user_deleted: true
        yours: true
        topic_slug: topic_slug
        flair_name: ""
        username: username
        display_username: ""
      properties:
        version:
          type: integer
        id:
          type: integer
        username:
          type: string
        avatar_template:
          type: string
        created_at:
          type: string
        cooked:
          type: string
        post_number:
          type: integer
        post_type:
          type: integer
        updated_at:
          type: string
        reply_count:
          type: integer
        reply_to_post_number: {}
        quote_count:
          type: integer
        incoming_link_count:
          type: integer
        reads:
          type: integer
        readers_count:
          type: integer
        score:
          type: number
        yours:
          type: boolean
        topic_id:
          type: integer
        topic_slug:
          type: string
        primary_group_name: {}
        flair_name: {}
        flair_url: {}
        flair_bg_color: {}
        flair_color: {}
        flair_group_id: {}
        can_edit:
          type: boolean
        can_delete:
          type: boolean
        can_recover:
          type: boolean
        can_see_hidden_post:
          type: boolean
        can_wiki:
          type: boolean
        user_title: {}
        bookmarked:
          type: boolean
        raw:
          type: string
        actions_summary:
          items:
            $ref: '#/components/schemas/PostsCreateTopicPostMessageResponse_actions_summary_inner'
          type: array
        moderator:
          type: boolean
        admin:
          type: boolean
        staff:
          type: boolean
        user_id:
          type: integer
        draft_sequence:
          type: integer
        hidden:
          type: boolean
        trust_level:
          type: integer
        deleted_at: {}
        user_deleted:
          type: boolean
        edit_reason: {}
        can_view_edit_history:
          type: boolean
        wiki:
          type: boolean
        reviewable_id: {}
        reviewable_score_count:
          type: integer
        reviewable_score_pending_count:
          type: integer
        mentioned_users:
          items: {}
          type: array
        name: {}
        display_username: {}
      required:
      - actions_summary
      - admin
      - avatar_template
      - bookmarked
      - can_delete
      - can_edit
      - can_recover
      - can_view_edit_history
      - can_wiki
      - cooked
      - created_at
      - deleted_at
      - draft_sequence
      - edit_reason
      - flair_bg_color
      - flair_color
      - flair_name
      - flair_url
      - hidden
      - id
      - incoming_link_count
      - moderator
      - post_number
      - post_type
      - primary_group_name
      - quote_count
      - raw
      - readers_count
      - reads
      - reply_count
      - reply_to_post_number
      - reviewable_id
      - reviewable_score_count
      - reviewable_score_pending_count
      - score
      - staff
      - topic_id
      - topic_slug
      - trust_level
      - updated_at
      - user_deleted
      - user_id
      - user_title
      - username
      - version
      - wiki
      - yours
      type: object
    PostsListRepliesToPostResponse_inner_reply_to_user:
      example:
        name: name
        avatar_template: avatar_template
        username: username
      properties:
        username:
          type: string
        name:
          type: string
        avatar_template:
          type: string
      required:
      - avatar_template
      - username
      type: object
    PostsListRepliesToPostResponse_inner:
      example:
        flair_color: ""
        moderator: true
        wiki: true
        trust_level: 1
        score: 4.145608029883936
        can_see_hidden_post: true
        can_view_edit_history: true
        reviewable_score_count: 1
        actions_summary:
        - can_act: true
          id: 7
        - can_act: true
          id: 7
        incoming_link_count: 9
        can_delete: true
        post_type: 5
        id: 6
        readers_count: 2
        edit_reason: ""
        cooked: cooked
        reply_count: 5
        reply_to_post_number: 2
        version: 0
        deleted_at: ""
        reply_to_user:
          name: name
          avatar_template: avatar_template
          username: username
        user_id: 1
        can_recover: true
        name: ""
        user_title: ""
        post_number: 1
        hidden: true
        can_wiki: true
        created_at: created_at
        admin: true
        updated_at: updated_at
        topic_id: 7
        quote_count: 7
        avatar_template: avatar_template
        bookmarked: true
        reads: 3
        can_edit: true
        staff: true
        flair_url: ""
        flair_bg_color: ""
        reviewable_score_pending_count: 6
        reviewable_id: ""
        primary_group_name: ""
        flair_group_id: ""
        user_deleted: true
        yours: true
        topic_slug: topic_slug
        flair_name: ""
        username: username
        display_username: ""
      properties:
        version:
          type: integer
        id:
          type: integer
        name: {}
        username:
          type: string
        avatar_template:
          type: string
        created_at:
          type: string
        cooked:
          type: string
        post_number:
          type: integer
        post_type:
          type: integer
        updated_at:
          type: string
        reply_count:
          type: integer
        reply_to_post_number:
          type: integer
        quote_count:
          type: integer
        incoming_link_count:
          type: integer
        reads:
          type: integer
        readers_count:
          type: integer
        score:
          type: number
        yours:
          type: boolean
        topic_id:
          type: integer
        topic_slug:
          type: string
        display_username: {}
        primary_group_name: {}
        flair_name: {}
        flair_url: {}
        flair_bg_color: {}
        flair_color: {}
        flair_group_id: {}
        can_edit:
          type: boolean
        can_delete:
          type: boolean
        can_recover:
          type: boolean
        can_see_hidden_post:
          type: boolean
        can_wiki:
          type: boolean
        user_title: {}
        reply_to_user:
          $ref: '#/components/schemas/PostsListRepliesToPostResponse_inner_reply_to_user'
        bookmarked:
          type: boolean
        actions_summary:
          items:
            $ref: '#/components/schemas/PostsCreateTopicPostMessageResponse_actions_summary_inner'
          type: array
        moderator:
          type: boolean
        admin:
          type: boolean
        staff:
          type: boolean
        user_id:
          type: integer
        hidden:
          type: boolean
        trust_level:
          type: integer
        deleted_at: {}
        user_deleted:
          type: boolean
        edit_reason: {}
        can_view_edit_history:
          type: boolean
        wiki:
          type: boolean
        reviewable_id: {}
        reviewable_score_count:
          type: integer
        reviewable_score_pending_count:
          type: integer
      required:
      - actions_summary
      - admin
      - avatar_template
      - bookmarked
      - can_delete
      - can_edit
      - can_recover
      - can_see_hidden_post
      - can_view_edit_history
      - can_wiki
      - cooked
      - created_at
      - deleted_at
      - display_username
      - edit_reason
      - flair_bg_color
      - flair_color
      - flair_name
      - flair_url
      - hidden
      - id
      - incoming_link_count
      - moderator
      - name
      - post_number
      - post_type
      - primary_group_name
      - quote_count
      - readers_count
      - reads
      - reply_count
      - reply_to_post_number
      - reply_to_user
      - reviewable_id
      - reviewable_score_count
      - reviewable_score_pending_count
      - score
      - staff
      - topic_id
      - topic_slug
      - trust_level
      - updated_at
      - user_deleted
      - user_id
      - user_title
      - username
      - version
      - wiki
      - yours
      type: object
    PostsLikePostActionResponse_actions_summary_inner:
      example:
        acted: true
        can_undo: true
        count: 1
        id: 7
      properties:
        id:
          type: integer
        count:
          type: integer
        acted:
          type: boolean
        can_undo:
          type: boolean
      type: object
    PrivateMessagesListForUserResponse_users_inner:
      example:
        name: name
        id: 0
        avatar_template: avatar_template
        username: username
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        avatar_template:
          type: string
      type: object
    PrivateMessagesListForUserResponse_topic_list_topics_inner_posters_inner:
      example:
        primary_group_id: ""
        user_id: 1
        description: description
        extras: extras
      properties:
        description:
          type: string
        extras:
          type: string
        user_id:
          type: integer
        primary_group_id: {}
      type: object
    PrivateMessagesListForUserResponse_topic_list_topics_inner_participants_inner:
      example:
        primary_group_id: ""
        user_id: 1
        description: ""
        extras: extras
      properties:
        description: {}
        extras:
          type: string
        user_id:
          type: integer
        primary_group_id: {}
      type: object
    PrivateMessagesListForUserResponse_topic_list_topics_inner:
      example:
        unpinned: ""
        pinned: true
        featured_link: ""
        created_at: created_at
        bumped: true
        allowed_user_count: 1
        title: title
        last_read_post_number: 9
        liked: true
        archived: true
        has_summary: true
        fancy_title: fancy_title
        category_id: ""
        id: 5
        bumped_at: bumped_at
        slug: slug
        views: 4
        last_posted_at: last_posted_at
        participants:
        - primary_group_id: ""
          user_id: 1
          description: ""
          extras: extras
        - primary_group_id: ""
          user_id: 1
          description: ""
          extras: extras
        visible: true
        like_count: 7
        image_url: ""
        unread_posts: 3
        bookmarked: true
        last_poster_username: last_poster_username
        posters:
        - primary_group_id: ""
          user_id: 1
          description: description
          extras: extras
        - primary_group_id: ""
          user_id: 1
          description: description
          extras: extras
        pinned_globally: true
        reply_count: 2
        archetype: archetype
        highest_post_number: 7
        closed: true
        notification_level: 2
        unseen: true
        posts_count: 5
      properties:
        title:
          type: string
        id:
          type: integer
        fancy_title:
          type: string
        slug:
          type: string
        posts_count:
          type: integer
        reply_count:
          type: integer
        highest_post_number:
          type: integer
        image_url: {}
        created_at:
          type: string
        last_posted_at:
          type: string
        bumped:
          type: boolean
        bumped_at:
          type: string
        archetype:
          type: string
        unseen:
          type: boolean
        last_read_post_number:
          type: integer
        unread_posts:
          type: integer
        pinned:
          type: boolean
        unpinned: {}
        visible:
          type: boolean
        closed:
          type: boolean
        archived:
          type: boolean
        notification_level:
          type: integer
        bookmarked:
          type: boolean
        liked:
          type: boolean
        views:
          type: integer
        like_count:
          type: integer
        has_summary:
          type: boolean
        last_poster_username:
          type: string
        category_id: {}
        pinned_globally:
          type: boolean
        featured_link: {}
        allowed_user_count:
          type: integer
        posters:
          items:
            $ref: '#/components/schemas/PrivateMessagesListForUserResponse_topic_list_topics_inner_posters_inner'
          type: array
        participants:
          items:
            $ref: '#/components/schemas/PrivateMessagesListForUserResponse_topic_list_topics_inner_participants_inner'
          type: array
      type: object
    PrivateMessagesListForUserResponse_topic_list:
      example:
        can_create_topic: true
        per_page: 1
        topics:
        - unpinned: ""
          pinned: true
          featured_link: ""
          created_at: created_at
          bumped: true
          allowed_user_count: 1
          title: title
          last_read_post_number: 9
          liked: true
          archived: true
          has_summary: true
          fancy_title: fancy_title
          category_id: ""
          id: 5
          bumped_at: bumped_at
          slug: slug
          views: 4
          last_posted_at: last_posted_at
          participants:
          - primary_group_id: ""
            user_id: 1
            description: ""
            extras: extras
          - primary_group_id: ""
            user_id: 1
            description: ""
            extras: extras
          visible: true
          like_count: 7
          image_url: ""
          unread_posts: 3
          bookmarked: true
          last_poster_username: last_poster_username
          posters:
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: extras
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: extras
          pinned_globally: true
          reply_count: 2
          archetype: archetype
          highest_post_number: 7
          closed: true
          notification_level: 2
          unseen: true
          posts_count: 5
        - unpinned: ""
          pinned: true
          featured_link: ""
          created_at: created_at
          bumped: true
          allowed_user_count: 1
          title: title
          last_read_post_number: 9
          liked: true
          archived: true
          has_summary: true
          fancy_title: fancy_title
          category_id: ""
          id: 5
          bumped_at: bumped_at
          slug: slug
          views: 4
          last_posted_at: last_posted_at
          participants:
          - primary_group_id: ""
            user_id: 1
            description: ""
            extras: extras
          - primary_group_id: ""
            user_id: 1
            description: ""
            extras: extras
          visible: true
          like_count: 7
          image_url: ""
          unread_posts: 3
          bookmarked: true
          last_poster_username: last_poster_username
          posters:
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: extras
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: extras
          pinned_globally: true
          reply_count: 2
          archetype: archetype
          highest_post_number: 7
          closed: true
          notification_level: 2
          unseen: true
          posts_count: 5
        draft: ""
        draft_sequence: 6
        draft_key: draft_key
      properties:
        can_create_topic:
          type: boolean
        draft: {}
        draft_key:
          type: string
        draft_sequence:
          type: integer
        per_page:
          type: integer
        topics:
          items:
            $ref: '#/components/schemas/PrivateMessagesListForUserResponse_topic_list_topics_inner'
          type: array
      type: object
    PrivateMessagesListSentForUserResponse_users_inner:
      example:
        name: ""
        id: 0
        avatar_template: avatar_template
        username: username
      properties:
        id:
          type: integer
        username:
          type: string
        name: {}
        avatar_template:
          type: string
      type: object
    PrivateMessagesListSentForUserResponse_topic_list_topics_inner:
      example:
        unpinned: ""
        pinned: true
        featured_link: ""
        created_at: created_at
        bumped: true
        allowed_user_count: 1
        title: title
        last_read_post_number: 9
        liked: true
        archived: true
        has_summary: true
        fancy_title: fancy_title
        category_id: ""
        id: 5
        bumped_at: bumped_at
        slug: slug
        views: 4
        last_posted_at: last_posted_at
        participants:
        - ""
        - ""
        visible: true
        like_count: 7
        image_url: ""
        unread_posts: 3
        bookmarked: true
        last_poster_username: last_poster_username
        posters:
        - primary_group_id: ""
          user_id: 1
          description: description
          extras: extras
        - primary_group_id: ""
          user_id: 1
          description: description
          extras: extras
        pinned_globally: true
        reply_count: 2
        archetype: archetype
        highest_post_number: 7
        closed: true
        notification_level: 2
        unseen: true
        posts_count: 5
      properties:
        title:
          type: string
        id:
          type: integer
        fancy_title:
          type: string
        slug:
          type: string
        posts_count:
          type: integer
        reply_count:
          type: integer
        highest_post_number:
          type: integer
        image_url: {}
        created_at:
          type: string
        last_posted_at:
          type: string
        bumped:
          type: boolean
        bumped_at:
          type: string
        archetype:
          type: string
        unseen:
          type: boolean
        last_read_post_number:
          type: integer
        unread_posts:
          type: integer
        pinned:
          type: boolean
        unpinned: {}
        visible:
          type: boolean
        closed:
          type: boolean
        archived:
          type: boolean
        notification_level:
          type: integer
        bookmarked:
          type: boolean
        liked:
          type: boolean
        views:
          type: integer
        like_count:
          type: integer
        has_summary:
          type: boolean
        last_poster_username:
          type: string
        category_id: {}
        pinned_globally:
          type: boolean
        featured_link: {}
        allowed_user_count:
          type: integer
        posters:
          items:
            $ref: '#/components/schemas/PrivateMessagesListForUserResponse_topic_list_topics_inner_posters_inner'
          type: array
        participants:
          items: {}
          type: array
      type: object
    PrivateMessagesListSentForUserResponse_topic_list:
      example:
        can_create_topic: true
        per_page: 1
        topics:
        - unpinned: ""
          pinned: true
          featured_link: ""
          created_at: created_at
          bumped: true
          allowed_user_count: 1
          title: title
          last_read_post_number: 9
          liked: true
          archived: true
          has_summary: true
          fancy_title: fancy_title
          category_id: ""
          id: 5
          bumped_at: bumped_at
          slug: slug
          views: 4
          last_posted_at: last_posted_at
          participants:
          - ""
          - ""
          visible: true
          like_count: 7
          image_url: ""
          unread_posts: 3
          bookmarked: true
          last_poster_username: last_poster_username
          posters:
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: extras
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: extras
          pinned_globally: true
          reply_count: 2
          archetype: archetype
          highest_post_number: 7
          closed: true
          notification_level: 2
          unseen: true
          posts_count: 5
        - unpinned: ""
          pinned: true
          featured_link: ""
          created_at: created_at
          bumped: true
          allowed_user_count: 1
          title: title
          last_read_post_number: 9
          liked: true
          archived: true
          has_summary: true
          fancy_title: fancy_title
          category_id: ""
          id: 5
          bumped_at: bumped_at
          slug: slug
          views: 4
          last_posted_at: last_posted_at
          participants:
          - ""
          - ""
          visible: true
          like_count: 7
          image_url: ""
          unread_posts: 3
          bookmarked: true
          last_poster_username: last_poster_username
          posters:
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: extras
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: extras
          pinned_globally: true
          reply_count: 2
          archetype: archetype
          highest_post_number: 7
          closed: true
          notification_level: 2
          unseen: true
          posts_count: 5
        draft: ""
        draft_sequence: 6
        draft_key: draft_key
      properties:
        can_create_topic:
          type: boolean
        draft: {}
        draft_key:
          type: string
        draft_sequence:
          type: integer
        per_page:
          type: integer
        topics:
          items:
            $ref: '#/components/schemas/PrivateMessagesListSentForUserResponse_topic_list_topics_inner'
          type: array
      type: object
    SearchTermResultsResponse_grouped_search_result_extra:
      example:
        categories: ""
      properties:
        categories: {}
      type: object
    SearchTermResultsResponse_grouped_search_result:
      example:
        can_create_topic: true
        tag_ids:
        - ""
        - ""
        user_ids:
        - ""
        - ""
        search_log_id: 0
        error: ""
        more_categories: ""
        more_posts: ""
        more_users: ""
        extra:
          categories: ""
        group_ids:
        - ""
        - ""
        term: term
        category_ids:
        - ""
        - ""
        more_full_page_results: ""
        post_ids:
        - ""
        - ""
      properties:
        more_posts: {}
        more_users: {}
        more_categories: {}
        term:
          type: string
        search_log_id:
          type: integer
        more_full_page_results: {}
        can_create_topic:
          type: boolean
        error: {}
        extra:
          $ref: '#/components/schemas/SearchTermResultsResponse_grouped_search_result_extra'
        post_ids:
          items: {}
          type: array
        user_ids:
          items: {}
          type: array
        category_ids:
          items: {}
          type: array
        tag_ids:
          items: {}
          type: array
        group_ids:
          items: {}
          type: array
      required:
      - can_create_topic
      - category_ids
      - error
      - group_ids
      - more_categories
      - more_full_page_results
      - more_posts
      - more_users
      - post_ids
      - search_log_id
      - tag_ids
      - term
      - user_ids
      type: object
    SiteGetCategoriesAndSubcategoriesResponse_notification_types:
      example:
        private_message: 2
        replied: 6
        liked_consolidated: 9
        event_invitation: 6
        moved_post: 1
        chat_quoted: 3
        admin_problems: 7
        chat_message: 5
        liked: 5
        invited_to_private_message: 7
        posted: 3
        quoted: 1
        post_approved: 6
        group_message_summary: 4
        chat_invitation: 6
        following_created_topic: 6
        watching_first_post: 5
        circles_activity: 4
        mentioned: 0
        question_answer_user_commented: 0
        invited_to_topic: 6
        chat_group_mention: 3
        linked: 1
        granted_badge: 1
        bookmark_reminder: 3
        reaction: 6
        watching_category_or_tag: 2
        edited: 5
        code_review_commit_approved: 8
        chat_mention: 6
        custom: 7
        following_replied: 0
        invitee_accepted: 9
        event_reminder: 2
        topic_reminder: 9
        following: 7
        votes_released: 1
        new_features: 4
        group_mentioned: 1
        membership_request_accepted: 9
        assigned: 7
        membership_request_consolidated: 6
      properties:
        mentioned:
          type: integer
        replied:
          type: integer
        quoted:
          type: integer
        edited:
          type: integer
        liked:
          type: integer
        private_message:
          type: integer
        invited_to_private_message:
          type: integer
        invitee_accepted:
          type: integer
        posted:
          type: integer
        watching_category_or_tag:
          type: integer
        new_features:
          type: integer
        admin_problems:
          type: integer
        moved_post:
          type: integer
        linked:
          type: integer
        granted_badge:
          type: integer
        invited_to_topic:
          type: integer
        custom:
          type: integer
        group_mentioned:
          type: integer
        group_message_summary:
          type: integer
        watching_first_post:
          type: integer
        topic_reminder:
          type: integer
        liked_consolidated:
          type: integer
        post_approved:
          type: integer
        code_review_commit_approved:
          type: integer
        membership_request_accepted:
          type: integer
        membership_request_consolidated:
          type: integer
        bookmark_reminder:
          type: integer
        reaction:
          type: integer
        votes_released:
          type: integer
        event_reminder:
          type: integer
        event_invitation:
          type: integer
        chat_mention:
          type: integer
        chat_message:
          type: integer
        chat_invitation:
          type: integer
        chat_group_mention:
          type: integer
        chat_quoted:
          type: integer
        assigned:
          type: integer
        question_answer_user_commented:
          type: integer
        following:
          type: integer
        following_created_topic:
          type: integer
        following_replied:
          type: integer
        circles_activity:
          type: integer
      required:
      - bookmark_reminder
      - chat_group_mention
      - chat_invitation
      - chat_mention
      - chat_message
      - code_review_commit_approved
      - custom
      - edited
      - event_invitation
      - event_reminder
      - granted_badge
      - group_mentioned
      - group_message_summary
      - invited_to_private_message
      - invited_to_topic
      - invitee_accepted
      - liked
      - liked_consolidated
      - linked
      - membership_request_accepted
      - membership_request_consolidated
      - mentioned
      - moved_post
      - post_approved
      - posted
      - private_message
      - quoted
      - reaction
      - replied
      - topic_reminder
      - votes_released
      - watching_category_or_tag
      - watching_first_post
      type: object
    SiteGetCategoriesAndSubcategoriesResponse_post_types:
      example:
        small_action: 3
        whisper: 3
        regular: 8
        moderator_action: 7
      properties:
        regular:
          type: integer
        moderator_action:
          type: integer
        small_action:
          type: integer
        whisper:
          type: integer
      required:
      - moderator_action
      - regular
      - small_action
      - whisper
      type: object
    SiteGetCategoriesAndSubcategoriesResponse_trust_levels:
      example:
        newuser: 7
        leader: 0
        member: 3
        basic: 5
        regular: 4
      properties:
        newuser:
          type: integer
        basic:
          type: integer
        member:
          type: integer
        regular:
          type: integer
        leader:
          type: integer
      required:
      - basic
      - leader
      - member
      - newuser
      - regular
      type: object
    SiteGetCategoriesAndSubcategoriesResponse_user_tips:
      example:
        first_notification: 6
        post_menu: 1
        suggested_topics: 7
        topic_notification_levels: 4
        topic_timeline: 4
        admin_guide: 9
      properties:
        first_notification:
          type: integer
        topic_timeline:
          type: integer
        post_menu:
          type: integer
        topic_notification_levels:
          type: integer
        suggested_topics:
          type: integer
        admin_guide:
          type: integer
      required:
      - admin_guide
      - first_notification
      - post_menu
      - suggested_topics
      - topic_notification_levels
      - topic_timeline
      type: object
    SiteGetCategoriesAndSubcategoriesResponse_groups_inner:
      example:
        flair_bg_color: ""
        flair_color: ""
        name: name
        id: 0
        flair_url: ""
      properties:
        id:
          type: integer
        name:
          type: string
        flair_url: {}
        flair_bg_color: {}
        flair_color: {}
      required:
      - flair_bg_color
      - flair_color
      - flair_url
      - id
      - name
      type: object
    SiteGetCategoriesAndSubcategoriesResponse_post_action_types_inner:
      example:
        name_key: ""
        short_description: short_description
        is_custom_flag: true
        is_flag: true
        name: name
        description: description
        id: ""
      properties:
        description:
          type: string
        id: {}
        name_key: {}
        name:
          type: string
        short_description:
          type: string
        is_flag:
          type: boolean
        is_custom_flag:
          type: boolean
      required:
      - description
      - id
      - is_custom_flag
      - is_flag
      - name
      - name_key
      - short_description
      type: object
    SiteGetCategoriesAndSubcategoriesResponse_user_themes_inner:
      example:
        default: true
        color_scheme_id: ""
        theme_id: 7
        name: name
      properties:
        theme_id:
          type: integer
        name:
          type: string
        default:
          type: boolean
        color_scheme_id: {}
      required:
      - color_scheme_id
      - default
      - name
      - theme_id
      type: object
    SiteGetCategoriesAndSubcategoriesResponse_user_color_schemes_inner:
      example:
        name: name
        id: 5
        is_dark: true
      properties:
        id:
          type: integer
        name:
          type: string
        is_dark:
          type: boolean
      required:
      - id
      - is_dark
      - name
      type: object
    SiteGetCategoriesAndSubcategoriesResponse_categories_inner:
      example:
        uploaded_background: ""
        color: color
        form_template_ids:
        - ""
        - ""
        uploaded_background_dark: ""
        navigate_to_first_post_after_read: true
        description: ""
        topic_template: ""
        parent_category_id: 8
        show_subcategory_list: true
        read_only_banner: ""
        uploaded_logo: ""
        description_excerpt: ""
        sort_ascending: ""
        num_featured_topics: 2
        allowed_tags:
        - ""
        - ""
        id: 4
        sort_order: ""
        default_view: ""
        slug: slug
        subcategory_list_style: subcategory_list_style
        has_children: true
        custom_fields:
          key: ""
        default_top_period: default_top_period
        can_edit: true
        description_text: ""
        permission: 3
        topic_count: 6
        uploaded_logo_dark: ""
        read_restricted: true
        allow_global_tags: true
        minimum_required_tags: 1
        topic_url: topic_url
        default_list_filter: default_list_filter
        allowed_tag_groups:
        - ""
        - ""
        name: name
        notification_level: 0
        text_color: text_color
        post_count: 8
        position: 4
        required_tag_groups:
        - name: name
          min_count: 9
        - name: name
          min_count: 9
      properties:
        description: {}
        id:
          type: integer
        name:
          type: string
        color:
          type: string
        text_color:
          type: string
        slug:
          type: string
        topic_count:
          type: integer
        post_count:
          type: integer
        position:
          type: integer
        description_text: {}
        description_excerpt: {}
        topic_url:
          type: string
        read_restricted:
          type: boolean
        permission:
          type: integer
        notification_level:
          type: integer
        topic_template: {}
        has_children:
          type: boolean
        sort_order: {}
        sort_ascending: {}
        show_subcategory_list:
          type: boolean
        num_featured_topics:
          type: integer
        default_view: {}
        subcategory_list_style:
          type: string
        default_top_period:
          type: string
        default_list_filter:
          type: string
        minimum_required_tags:
          type: integer
        navigate_to_first_post_after_read:
          type: boolean
        allowed_tags:
          items: {}
          type: array
        allowed_tag_groups:
          items: {}
          type: array
        allow_global_tags:
          type: boolean
        required_tag_groups:
          items:
            $ref: '#/components/schemas/CategoriesCreateCategoryRequestResponse_category_required_tag_groups_inner'
          type: array
        read_only_banner: {}
        uploaded_logo: {}
        uploaded_logo_dark: {}
        uploaded_background: {}
        uploaded_background_dark: {}
        can_edit:
          type: boolean
        custom_fields:
          additionalProperties: true
          type: object
        parent_category_id:
          type: integer
        form_template_ids:
          items: {}
          type: array
      required:
      - allow_global_tags
      - allowed_tag_groups
      - allowed_tags
      - can_edit
      - color
      - default_list_filter
      - default_top_period
      - default_view
      - has_children
      - id
      - minimum_required_tags
      - name
      - navigate_to_first_post_after_read
      - notification_level
      - num_featured_topics
      - permission
      - position
      - post_count
      - read_only_banner
      - read_restricted
      - required_tag_groups
      - show_subcategory_list
      - slug
      - sort_ascending
      - sort_order
      - subcategory_list_style
      - text_color
      - topic_count
      - topic_template
      - topic_url
      - uploaded_background
      - uploaded_background_dark
      - uploaded_logo
      - uploaded_logo_dark
      type: object
    SiteGetCategoriesAndSubcategoriesResponse_archetypes_inner:
      example:
        name: name
        options:
        - ""
        - ""
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        options:
          items: {}
          type: array
      required:
      - id
      - name
      - options
      type: object
    TagsGetTagGroupsResponse_tag_groups_inner_permissions:
      example:
        staff: 6
      properties:
        staff:
          type: integer
      type: object
    TagsGetTagGroupsResponse_tag_groups_inner:
      example:
        one_per_topic: true
        permissions:
          staff: 6
        name: name
        id: 0
        parent_tag_name:
        - ""
        - ""
        tag_names:
        - ""
        - ""
      properties:
        id:
          type: integer
        name:
          type: string
        tag_names:
          items: {}
          type: array
        parent_tag_name:
          items: {}
          type: array
        one_per_topic:
          type: boolean
        permissions:
          $ref: '#/components/schemas/TagsGetTagGroupsResponse_tag_groups_inner_permissions'
      type: object
    TagsCreateTagGroupResponse_tag_group:
      example:
        one_per_topic: true
        permissions: "{}"
        name: name
        id: 0
        parent_tag_name:
        - ""
        - ""
        tag_names:
        - ""
        - ""
      properties:
        id:
          type: integer
        name:
          type: string
        tag_names:
          items: {}
          type: array
        parent_tag_name:
          items: {}
          type: array
        one_per_topic:
          type: boolean
        permissions:
          type: object
      required:
      - id
      - name
      - one_per_topic
      - parent_tag_name
      - permissions
      - tag_names
      type: object
    TagsGetSingleTagGroupResponse_tag_group_permissions:
      example:
        everyone: 6
      properties:
        everyone:
          type: integer
      type: object
    TagsGetSingleTagGroupResponse_tag_group:
      example:
        one_per_topic: true
        permissions:
          everyone: 6
        name: name
        id: 0
        parent_tag_name:
        - ""
        - ""
        tag_names:
        - ""
        - ""
      properties:
        id:
          type: integer
        name:
          type: string
        tag_names:
          items: {}
          type: array
        parent_tag_name:
          items: {}
          type: array
        one_per_topic:
          type: boolean
        permissions:
          $ref: '#/components/schemas/TagsGetSingleTagGroupResponse_tag_group_permissions'
      type: object
    TagsListResponse_tags_inner:
      example:
        pm_count: 6
        count: 0
        target_tag: ""
        id: id
        text: text
      properties:
        id:
          type: string
        text:
          type: string
        count:
          type: integer
        pm_count:
          type: integer
        target_tag: {}
      type: object
    TagsListResponse_extras:
      example:
        categories:
        - ""
        - ""
      properties:
        categories:
          items: {}
          type: array
      type: object
    TagsGetSpecificTagResponse_topic_list_tags_inner:
      example:
        name: name
        staff: true
        id: 0
        topic_count: 6
      properties:
        id:
          type: integer
        name:
          type: string
        topic_count:
          type: integer
        staff:
          type: boolean
      type: object
    TagsGetSpecificTagResponse_topic_list_topics_inner:
      example:
        unpinned: ""
        pinned: true
        featured_link: ""
        created_at: created_at
        bumped: true
        title: title
        last_read_post_number: 3
        liked: true
        archived: true
        has_summary: true
        fancy_title: fancy_title
        category_id: 1
        id: 5
        bumped_at: bumped_at
        slug: slug
        views: 7
        last_posted_at: last_posted_at
        visible: true
        like_count: 1
        image_url: ""
        unread_posts: 2
        bookmarked: true
        last_poster_username: last_poster_username
        posters:
        - primary_group_id: ""
          user_id: 1
          description: description
          extras: extras
        - primary_group_id: ""
          user_id: 1
          description: description
          extras: extras
        pinned_globally: true
        reply_count: 7
        tags:
        - ""
        - ""
        archetype: archetype
        highest_post_number: 9
        closed: true
        notification_level: 4
        unseen: true
        posts_count: 2
      properties:
        tags:
          items: {}
          type: array
        title:
          type: string
        id:
          type: integer
        fancy_title:
          type: string
        slug:
          type: string
        posts_count:
          type: integer
        reply_count:
          type: integer
        highest_post_number:
          type: integer
        image_url: {}
        created_at:
          type: string
        last_posted_at:
          type: string
        bumped:
          type: boolean
        bumped_at:
          type: string
        archetype:
          type: string
        unseen:
          type: boolean
        last_read_post_number:
          type: integer
        unread_posts:
          type: integer
        pinned:
          type: boolean
        unpinned: {}
        visible:
          type: boolean
        closed:
          type: boolean
        archived:
          type: boolean
        notification_level:
          type: integer
        bookmarked:
          type: boolean
        liked:
          type: boolean
        views:
          type: integer
        like_count:
          type: integer
        has_summary:
          type: boolean
        last_poster_username:
          type: string
        category_id:
          type: integer
        pinned_globally:
          type: boolean
        featured_link: {}
        posters:
          items:
            $ref: '#/components/schemas/PrivateMessagesListForUserResponse_topic_list_topics_inner_posters_inner'
          type: array
      type: object
    TagsGetSpecificTagResponse_topic_list:
      example:
        can_create_topic: true
        per_page: 5
        topics:
        - unpinned: ""
          pinned: true
          featured_link: ""
          created_at: created_at
          bumped: true
          title: title
          last_read_post_number: 3
          liked: true
          archived: true
          has_summary: true
          fancy_title: fancy_title
          category_id: 1
          id: 5
          bumped_at: bumped_at
          slug: slug
          views: 7
          last_posted_at: last_posted_at
          visible: true
          like_count: 1
          image_url: ""
          unread_posts: 2
          bookmarked: true
          last_poster_username: last_poster_username
          posters:
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: extras
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: extras
          pinned_globally: true
          reply_count: 7
          tags:
          - ""
          - ""
          archetype: archetype
          highest_post_number: 9
          closed: true
          notification_level: 4
          unseen: true
          posts_count: 2
        - unpinned: ""
          pinned: true
          featured_link: ""
          created_at: created_at
          bumped: true
          title: title
          last_read_post_number: 3
          liked: true
          archived: true
          has_summary: true
          fancy_title: fancy_title
          category_id: 1
          id: 5
          bumped_at: bumped_at
          slug: slug
          views: 7
          last_posted_at: last_posted_at
          visible: true
          like_count: 1
          image_url: ""
          unread_posts: 2
          bookmarked: true
          last_poster_username: last_poster_username
          posters:
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: extras
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: extras
          pinned_globally: true
          reply_count: 7
          tags:
          - ""
          - ""
          archetype: archetype
          highest_post_number: 9
          closed: true
          notification_level: 4
          unseen: true
          posts_count: 2
        draft: ""
        draft_sequence: 1
        draft_key: draft_key
        tags:
        - name: name
          staff: true
          id: 0
          topic_count: 6
        - name: name
          staff: true
          id: 0
          topic_count: 6
      properties:
        tags:
          items:
            $ref: '#/components/schemas/TagsGetSpecificTagResponse_topic_list_tags_inner'
          type: array
        can_create_topic:
          type: boolean
        draft: {}
        draft_key:
          type: string
        draft_sequence:
          type: integer
        per_page:
          type: integer
        topics:
          items:
            $ref: '#/components/schemas/TagsGetSpecificTagResponse_topic_list_topics_inner'
          type: array
      type: object
    TopicsGetSpecificPostsResponse_post_stream_posts_inner:
      example:
        hidden: true
        flair_color: ""
        can_wiki: true
        moderator: true
        wiki: true
        created_at: created_at
        admin: true
        trust_level: 1
        score: 2.027123023002322
        can_view_edit_history: true
        reviewable_score_count: 1
        updated_at: updated_at
        actions_summary:
        - can_act: true
          id: 1
        - can_act: true
          id: 1
        incoming_link_count: 7
        can_delete: true
        post_type: 5
        id: 6
        topic_id: 4
        quote_count: 2
        readers_count: 3
        avatar_template: avatar_template
        read: true
        edit_reason: ""
        cooked: cooked
        reads: 9
        can_edit: true
        staff: true
        flair_url: ""
        reply_count: 5
        reply_to_post_number: ""
        version: 0
        deleted_at: ""
        flair_bg_color: ""
        reviewable_score_pending_count: 6
        user_id: 7
        reviewable_id: 1
        primary_group_name: ""
        can_recover: true
        name: ""
        user_title: ""
        user_deleted: true
        post_number: 1
        yours: true
        topic_slug: topic_slug
        flair_name: ""
        username: username
        display_username: ""
      properties:
        version:
          type: integer
        id:
          type: integer
        name: {}
        username:
          type: string
        avatar_template:
          type: string
        created_at:
          type: string
        cooked:
          type: string
        post_number:
          type: integer
        post_type:
          type: integer
        updated_at:
          type: string
        reply_count:
          type: integer
        reply_to_post_number: {}
        quote_count:
          type: integer
        incoming_link_count:
          type: integer
        reads:
          type: integer
        readers_count:
          type: integer
        score:
          type: number
        yours:
          type: boolean
        topic_id:
          type: integer
        topic_slug:
          type: string
        display_username: {}
        primary_group_name: {}
        flair_name: {}
        flair_url: {}
        flair_bg_color: {}
        flair_color: {}
        can_edit:
          type: boolean
        can_delete:
          type: boolean
        can_recover:
          type: boolean
        can_wiki:
          type: boolean
        read:
          type: boolean
        user_title: {}
        actions_summary:
          items:
            $ref: '#/components/schemas/PostsListLatestPostsAcrossTopicsResponse_latest_posts_inner_actions_summary_inner'
          type: array
        moderator:
          type: boolean
        admin:
          type: boolean
        staff:
          type: boolean
        user_id:
          type: integer
        hidden:
          type: boolean
        trust_level:
          type: integer
        deleted_at: {}
        user_deleted:
          type: boolean
        edit_reason: {}
        can_view_edit_history:
          type: boolean
        wiki:
          type: boolean
        reviewable_id:
          type: integer
        reviewable_score_count:
          type: integer
        reviewable_score_pending_count:
          type: integer
      type: object
    TopicsGetSpecificPostsResponse_post_stream:
      example:
        posts:
        - hidden: true
          flair_color: ""
          can_wiki: true
          moderator: true
          wiki: true
          created_at: created_at
          admin: true
          trust_level: 1
          score: 2.027123023002322
          can_view_edit_history: true
          reviewable_score_count: 1
          updated_at: updated_at
          actions_summary:
          - can_act: true
            id: 1
          - can_act: true
            id: 1
          incoming_link_count: 7
          can_delete: true
          post_type: 5
          id: 6
          topic_id: 4
          quote_count: 2
          readers_count: 3
          avatar_template: avatar_template
          read: true
          edit_reason: ""
          cooked: cooked
          reads: 9
          can_edit: true
          staff: true
          flair_url: ""
          reply_count: 5
          reply_to_post_number: ""
          version: 0
          deleted_at: ""
          flair_bg_color: ""
          reviewable_score_pending_count: 6
          user_id: 7
          reviewable_id: 1
          primary_group_name: ""
          can_recover: true
          name: ""
          user_title: ""
          user_deleted: true
          post_number: 1
          yours: true
          topic_slug: topic_slug
          flair_name: ""
          username: username
          display_username: ""
        - hidden: true
          flair_color: ""
          can_wiki: true
          moderator: true
          wiki: true
          created_at: created_at
          admin: true
          trust_level: 1
          score: 2.027123023002322
          can_view_edit_history: true
          reviewable_score_count: 1
          updated_at: updated_at
          actions_summary:
          - can_act: true
            id: 1
          - can_act: true
            id: 1
          incoming_link_count: 7
          can_delete: true
          post_type: 5
          id: 6
          topic_id: 4
          quote_count: 2
          readers_count: 3
          avatar_template: avatar_template
          read: true
          edit_reason: ""
          cooked: cooked
          reads: 9
          can_edit: true
          staff: true
          flair_url: ""
          reply_count: 5
          reply_to_post_number: ""
          version: 0
          deleted_at: ""
          flair_bg_color: ""
          reviewable_score_pending_count: 6
          user_id: 7
          reviewable_id: 1
          primary_group_name: ""
          can_recover: true
          name: ""
          user_title: ""
          user_deleted: true
          post_number: 1
          yours: true
          topic_slug: topic_slug
          flair_name: ""
          username: username
          display_username: ""
      properties:
        posts:
          items:
            $ref: '#/components/schemas/TopicsGetSpecificPostsResponse_post_stream_posts_inner'
          type: array
      type: object
    TopicsGetSingleTopicResponse_post_stream_posts_inner_link_counts_inner:
      example:
        internal: true
        reflection: true
        clicks: 7
        title: title
        url: url
      properties:
        title:
          type: string
        url:
          type: string
        internal:
          type: boolean
        reflection:
          type: boolean
        clicks:
          type: integer
      required:
      - clicks
      - internal
      - reflection
      - title
      - url
      type: object
    TopicsGetSingleTopicResponse_post_stream_posts_inner:
      example:
        flair_color: ""
        moderator: true
        wiki: true
        trust_level: 1
        score: 2.027123023002322
        can_see_hidden_post: true
        can_view_edit_history: true
        reviewable_score_count: 6
        actions_summary:
        - can_act: true
          id: 7
        - can_act: true
          id: 7
        incoming_link_count: 7
        can_delete: true
        post_type: 5
        id: 6
        readers_count: 3
        read: true
        edit_reason: ""
        cooked: cooked
        reply_count: 5
        reply_to_post_number: ""
        version: 0
        deleted_at: ""
        user_id: 1
        can_recover: true
        name: name
        user_title: ""
        post_number: 1
        hidden: true
        can_wiki: true
        created_at: created_at
        admin: true
        updated_at: updated_at
        topic_id: 4
        quote_count: 2
        avatar_template: avatar_template
        bookmarked: true
        reads: 9
        can_edit: true
        staff: true
        flair_url: ""
        flair_bg_color: ""
        reviewable_score_pending_count: 7
        reviewable_id: 1
        primary_group_name: ""
        link_counts:
        - internal: true
          reflection: true
          clicks: 7
          title: title
          url: url
        - internal: true
          reflection: true
          clicks: 7
          title: title
          url: url
        user_deleted: true
        yours: true
        topic_slug: topic_slug
        flair_name: ""
        username: username
        display_username: display_username
      properties:
        version:
          type: integer
        id:
          type: integer
        name:
          type: string
        username:
          type: string
        avatar_template:
          type: string
        created_at:
          type: string
        cooked:
          type: string
        post_number:
          type: integer
        post_type:
          type: integer
        updated_at:
          type: string
        reply_count:
          type: integer
        reply_to_post_number: {}
        quote_count:
          type: integer
        incoming_link_count:
          type: integer
        reads:
          type: integer
        readers_count:
          type: integer
        score:
          type: number
        yours:
          type: boolean
        topic_id:
          type: integer
        topic_slug:
          type: string
        display_username:
          type: string
        primary_group_name: {}
        flair_name: {}
        flair_url: {}
        flair_bg_color: {}
        flair_color: {}
        can_edit:
          type: boolean
        can_delete:
          type: boolean
        can_recover:
          type: boolean
        can_see_hidden_post:
          type: boolean
        can_wiki:
          type: boolean
        link_counts:
          items:
            $ref: '#/components/schemas/TopicsGetSingleTopicResponse_post_stream_posts_inner_link_counts_inner'
          type: array
        read:
          type: boolean
        user_title: {}
        bookmarked:
          type: boolean
        actions_summary:
          items:
            $ref: '#/components/schemas/PostsCreateTopicPostMessageResponse_actions_summary_inner'
          type: array
        moderator:
          type: boolean
        admin:
          type: boolean
        staff:
          type: boolean
        user_id:
          type: integer
        hidden:
          type: boolean
        trust_level:
          type: integer
        deleted_at: {}
        user_deleted:
          type: boolean
        edit_reason: {}
        can_view_edit_history:
          type: boolean
        wiki:
          type: boolean
        reviewable_id:
          type: integer
        reviewable_score_count:
          type: integer
        reviewable_score_pending_count:
          type: integer
      required:
      - actions_summary
      - admin
      - avatar_template
      - bookmarked
      - can_delete
      - can_edit
      - can_recover
      - can_view_edit_history
      - can_wiki
      - cooked
      - created_at
      - deleted_at
      - display_username
      - edit_reason
      - flair_bg_color
      - flair_color
      - flair_name
      - flair_url
      - hidden
      - id
      - incoming_link_count
      - link_counts
      - moderator
      - name
      - post_number
      - post_type
      - primary_group_name
      - quote_count
      - read
      - readers_count
      - reads
      - reply_count
      - reply_to_post_number
      - reviewable_id
      - reviewable_score_count
      - reviewable_score_pending_count
      - score
      - staff
      - topic_id
      - topic_slug
      - trust_level
      - updated_at
      - user_deleted
      - user_id
      - user_title
      - username
      - version
      - wiki
      - yours
      type: object
    TopicsGetSingleTopicResponse_post_stream:
      example:
        stream:
        - ""
        - ""
        posts:
        - flair_color: ""
          moderator: true
          wiki: true
          trust_level: 1
          score: 2.027123023002322
          can_see_hidden_post: true
          can_view_edit_history: true
          reviewable_score_count: 6
          actions_summary:
          - can_act: true
            id: 7
          - can_act: true
            id: 7
          incoming_link_count: 7
          can_delete: true
          post_type: 5
          id: 6
          readers_count: 3
          read: true
          edit_reason: ""
          cooked: cooked
          reply_count: 5
          reply_to_post_number: ""
          version: 0
          deleted_at: ""
          user_id: 1
          can_recover: true
          name: name
          user_title: ""
          post_number: 1
          hidden: true
          can_wiki: true
          created_at: created_at
          admin: true
          updated_at: updated_at
          topic_id: 4
          quote_count: 2
          avatar_template: avatar_template
          bookmarked: true
          reads: 9
          can_edit: true
          staff: true
          flair_url: ""
          flair_bg_color: ""
          reviewable_score_pending_count: 7
          reviewable_id: 1
          primary_group_name: ""
          link_counts:
          - internal: true
            reflection: true
            clicks: 7
            title: title
            url: url
          - internal: true
            reflection: true
            clicks: 7
            title: title
            url: url
          user_deleted: true
          yours: true
          topic_slug: topic_slug
          flair_name: ""
          username: username
          display_username: display_username
        - flair_color: ""
          moderator: true
          wiki: true
          trust_level: 1
          score: 2.027123023002322
          can_see_hidden_post: true
          can_view_edit_history: true
          reviewable_score_count: 6
          actions_summary:
          - can_act: true
            id: 7
          - can_act: true
            id: 7
          incoming_link_count: 7
          can_delete: true
          post_type: 5
          id: 6
          readers_count: 3
          read: true
          edit_reason: ""
          cooked: cooked
          reply_count: 5
          reply_to_post_number: ""
          version: 0
          deleted_at: ""
          user_id: 1
          can_recover: true
          name: name
          user_title: ""
          post_number: 1
          hidden: true
          can_wiki: true
          created_at: created_at
          admin: true
          updated_at: updated_at
          topic_id: 4
          quote_count: 2
          avatar_template: avatar_template
          bookmarked: true
          reads: 9
          can_edit: true
          staff: true
          flair_url: ""
          flair_bg_color: ""
          reviewable_score_pending_count: 7
          reviewable_id: 1
          primary_group_name: ""
          link_counts:
          - internal: true
            reflection: true
            clicks: 7
            title: title
            url: url
          - internal: true
            reflection: true
            clicks: 7
            title: title
            url: url
          user_deleted: true
          yours: true
          topic_slug: topic_slug
          flair_name: ""
          username: username
          display_username: display_username
      properties:
        posts:
          items:
            $ref: '#/components/schemas/TopicsGetSingleTopicResponse_post_stream_posts_inner'
          type: array
        stream:
          items: {}
          type: array
      required:
      - posts
      - stream
      type: object
    TopicsGetSingleTopicResponse_suggested_topics_inner_posters_inner:
      example:
        description: description
        extras: extras
        user:
          name: name
          id: 0
          avatar_template: avatar_template
          username: username
      properties:
        description:
          type: string
        extras:
          type: string
        user:
          $ref: '#/components/schemas/CategoriesListTopicsResponse_users_inner'
      required:
      - description
      - extras
      - user
      type: object
    TopicsGetSingleTopicResponse_suggested_topics_inner:
      example:
        unpinned: ""
        pinned: true
        featured_link: ""
        created_at: created_at
        bumped: true
        title: title
        liked: ""
        archived: true
        fancy_title: fancy_title
        category_id: 8
        id: 1
        tags_descriptions: "{}"
        bumped_at: bumped_at
        slug: slug
        views: 6
        last_posted_at: ""
        visible: true
        like_count: 9
        image_url: ""
        bookmarked: ""
        posters:
        - description: description
          extras: extras
          user:
            name: name
            id: 0
            avatar_template: avatar_template
            username: username
        - description: description
          extras: extras
          user:
            name: name
            id: 0
            avatar_template: avatar_template
            username: username
        reply_count: 5
        tags:
        - ""
        - ""
        archetype: archetype
        highest_post_number: 9
        closed: true
        excerpt: excerpt
        unseen: true
        posts_count: 4
      properties:
        tags:
          items: {}
          type: array
        title:
          type: string
        id:
          type: integer
        fancy_title:
          type: string
        slug:
          type: string
        posts_count:
          type: integer
        reply_count:
          type: integer
        highest_post_number:
          type: integer
        image_url: {}
        created_at:
          type: string
        last_posted_at: {}
        bumped:
          type: boolean
        bumped_at:
          type: string
        archetype:
          type: string
        unseen:
          type: boolean
        pinned:
          type: boolean
        unpinned: {}
        excerpt:
          type: string
        visible:
          type: boolean
        closed:
          type: boolean
        archived:
          type: boolean
        bookmarked: {}
        liked: {}
        tags_descriptions:
          properties: {}
          type: object
        like_count:
          type: integer
        views:
          type: integer
        category_id:
          type: integer
        featured_link: {}
        posters:
          items:
            $ref: '#/components/schemas/TopicsGetSingleTopicResponse_suggested_topics_inner_posters_inner'
          type: array
      required:
      - archetype
      - archived
      - bookmarked
      - bumped
      - bumped_at
      - category_id
      - closed
      - created_at
      - excerpt
      - fancy_title
      - featured_link
      - highest_post_number
      - id
      - image_url
      - last_posted_at
      - like_count
      - liked
      - pinned
      - posters
      - posts_count
      - reply_count
      - slug
      - tags
      - tags_descriptions
      - title
      - unpinned
      - unseen
      - views
      - visible
      type: object
    TopicsGetSingleTopicResponse_actions_summary_inner:
      example:
        hidden: true
        count: 3
        can_act: true
        id: 3
      properties:
        id:
          type: integer
        count:
          type: integer
        hidden:
          type: boolean
        can_act:
          type: boolean
      required:
      - can_act
      - count
      - hidden
      - id
      type: object
    TopicsGetSingleTopicResponse_details_participants_inner:
      example:
        flair_color: ""
        moderator: true
        admin: true
        trust_level: 7
        flair_url: ""
        flair_bg_color: ""
        primary_group_name: ""
        name: name
        id: 4
        post_count: 8
        flair_group_id: ""
        avatar_template: avatar_template
        flair_name: ""
        username: username
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        avatar_template:
          type: string
        post_count:
          type: integer
        primary_group_name: {}
        flair_name: {}
        flair_url: {}
        flair_color: {}
        flair_bg_color: {}
        flair_group_id: {}
        admin:
          type: boolean
        moderator:
          type: boolean
        trust_level:
          type: integer
      required:
      - admin
      - avatar_template
      - flair_bg_color
      - flair_color
      - flair_name
      - flair_url
      - id
      - moderator
      - name
      - post_count
      - primary_group_name
      - trust_level
      - username
      type: object
    TopicsGetSingleTopicResponse_details:
      example:
        last_poster:
          name: name
          id: 0
          avatar_template: avatar_template
          username: username
        can_reply_as_new_topic: true
        can_edit: true
        can_invite_via_email: true
        can_pin_unpin_topic: true
        can_flag_topic: true
        created_by:
          name: name
          id: 0
          avatar_template: avatar_template
          username: username
        can_remove_allowed_users: true
        can_split_merge_topic: true
        can_moderate_category: true
        can_invite_to: true
        can_delete: true
        can_remove_self_id: 0
        can_toggle_topic_visibility: true
        notification_level: 6
        can_edit_staff_notes: true
        can_create_post: true
        can_archive_topic: true
        can_convert_topic: true
        can_close_topic: true
        can_move_posts: true
        can_review_topic: true
        participants:
        - flair_color: ""
          moderator: true
          admin: true
          trust_level: 7
          flair_url: ""
          flair_bg_color: ""
          primary_group_name: ""
          name: name
          id: 4
          post_count: 8
          flair_group_id: ""
          avatar_template: avatar_template
          flair_name: ""
          username: username
        - flair_color: ""
          moderator: true
          admin: true
          trust_level: 7
          flair_url: ""
          flair_bg_color: ""
          primary_group_name: ""
          name: name
          id: 4
          post_count: 8
          flair_group_id: ""
          avatar_template: avatar_template
          flair_name: ""
          username: username
      properties:
        can_edit:
          type: boolean
        notification_level:
          type: integer
        can_move_posts:
          type: boolean
        can_delete:
          type: boolean
        can_remove_allowed_users:
          type: boolean
        can_create_post:
          type: boolean
        can_reply_as_new_topic:
          type: boolean
        can_invite_to:
          type: boolean
        can_invite_via_email:
          type: boolean
        can_flag_topic:
          type: boolean
        can_convert_topic:
          type: boolean
        can_review_topic:
          type: boolean
        can_close_topic:
          type: boolean
        can_archive_topic:
          type: boolean
        can_split_merge_topic:
          type: boolean
        can_edit_staff_notes:
          type: boolean
        can_toggle_topic_visibility:
          type: boolean
        can_pin_unpin_topic:
          type: boolean
        can_moderate_category:
          type: boolean
        can_remove_self_id:
          type: integer
        participants:
          items:
            $ref: '#/components/schemas/TopicsGetSingleTopicResponse_details_participants_inner'
          type: array
        created_by:
          $ref: '#/components/schemas/CategoriesListTopicsResponse_users_inner'
        last_poster:
          $ref: '#/components/schemas/CategoriesListTopicsResponse_users_inner'
      required:
      - can_archive_topic
      - can_close_topic
      - can_convert_topic
      - can_create_post
      - can_delete
      - can_edit
      - can_edit_staff_notes
      - can_moderate_category
      - can_move_posts
      - can_pin_unpin_topic
      - can_remove_allowed_users
      - can_remove_self_id
      - can_reply_as_new_topic
      - can_review_topic
      - can_split_merge_topic
      - can_toggle_topic_visibility
      - created_by
      - last_poster
      - notification_level
      type: object
    TopicsUpdateTopicByIdJsonResponse_basic_topic:
      example:
        fancy_title: fancy_title
        id: 0
        title: title
        slug: slug
        posts_count: 6
      properties:
        title:
          type: string
        id:
          type: integer
        fancy_title:
          type: string
        slug:
          type: string
        posts_count:
          type: integer
      type: object
    TopicsGetLatestTopicsResponse_topic_list_topics_inner:
      example:
        unpinned: ""
        pinned: true
        featured_link: ""
        created_at: created_at
        bumped: true
        title: title
        last_read_post_number: 7
        liked: true
        archived: true
        has_summary: true
        fancy_title: fancy_title
        category_id: 7
        id: 1
        bumped_at: bumped_at
        slug: slug
        views: 2
        last_posted_at: last_posted_at
        visible: true
        like_count: 4
        image_url: image_url
        unread_posts: 9
        bookmarked: true
        last_poster_username: last_poster_username
        posters:
        - primary_group_id: ""
          user_id: 1
          description: description
          extras: extras
        - primary_group_id: ""
          user_id: 1
          description: description
          extras: extras
        pinned_globally: true
        reply_count: 5
        op_like_count: 1
        archetype: archetype
        highest_post_number: 2
        closed: true
        notification_level: 3
        unseen: true
        posts_count: 5
      properties:
        title:
          type: string
        id:
          type: integer
        fancy_title:
          type: string
        slug:
          type: string
        posts_count:
          type: integer
        reply_count:
          type: integer
        highest_post_number:
          type: integer
        image_url:
          type: string
        created_at:
          type: string
        last_posted_at:
          type: string
        bumped:
          type: boolean
        bumped_at:
          type: string
        archetype:
          type: string
        unseen:
          type: boolean
        last_read_post_number:
          type: integer
        unread_posts:
          type: integer
        pinned:
          type: boolean
        unpinned: {}
        visible:
          type: boolean
        closed:
          type: boolean
        archived:
          type: boolean
        notification_level:
          type: integer
        bookmarked:
          type: boolean
        liked:
          type: boolean
        views:
          type: integer
        like_count:
          type: integer
        has_summary:
          type: boolean
        last_poster_username:
          type: string
        category_id:
          type: integer
        op_like_count:
          type: integer
        pinned_globally:
          type: boolean
        featured_link: {}
        posters:
          items:
            $ref: '#/components/schemas/PrivateMessagesListForUserResponse_topic_list_topics_inner_posters_inner'
          type: array
      type: object
    TopicsGetLatestTopicsResponse_topic_list:
      example:
        can_create_topic: true
        per_page: 6
        topics:
        - unpinned: ""
          pinned: true
          featured_link: ""
          created_at: created_at
          bumped: true
          title: title
          last_read_post_number: 7
          liked: true
          archived: true
          has_summary: true
          fancy_title: fancy_title
          category_id: 7
          id: 1
          bumped_at: bumped_at
          slug: slug
          views: 2
          last_posted_at: last_posted_at
          visible: true
          like_count: 4
          image_url: image_url
          unread_posts: 9
          bookmarked: true
          last_poster_username: last_poster_username
          posters:
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: extras
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: extras
          pinned_globally: true
          reply_count: 5
          op_like_count: 1
          archetype: archetype
          highest_post_number: 2
          closed: true
          notification_level: 3
          unseen: true
          posts_count: 5
        - unpinned: ""
          pinned: true
          featured_link: ""
          created_at: created_at
          bumped: true
          title: title
          last_read_post_number: 7
          liked: true
          archived: true
          has_summary: true
          fancy_title: fancy_title
          category_id: 7
          id: 1
          bumped_at: bumped_at
          slug: slug
          views: 2
          last_posted_at: last_posted_at
          visible: true
          like_count: 4
          image_url: image_url
          unread_posts: 9
          bookmarked: true
          last_poster_username: last_poster_username
          posters:
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: extras
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: extras
          pinned_globally: true
          reply_count: 5
          op_like_count: 1
          archetype: archetype
          highest_post_number: 2
          closed: true
          notification_level: 3
          unseen: true
          posts_count: 5
        draft: ""
        draft_sequence: 0
        draft_key: draft_key
      properties:
        can_create_topic:
          type: boolean
        draft: {}
        draft_key:
          type: string
        draft_sequence:
          type: integer
        per_page:
          type: integer
        topics:
          items:
            $ref: '#/components/schemas/TopicsGetLatestTopicsResponse_topic_list_topics_inner'
          type: array
      type: object
    TopicsGetTopTopicsByPeriodResponse_topic_list_topics_inner_posters_inner:
      example:
        primary_group_id: ""
        user_id: 1
        description: description
        extras: ""
      properties:
        description:
          type: string
        extras: {}
        user_id:
          type: integer
        primary_group_id: {}
      type: object
    TopicsGetTopTopicsByPeriodResponse_topic_list_topics_inner:
      example:
        unpinned: true
        pinned: true
        featured_link: ""
        created_at: created_at
        bumped: true
        title: title
        last_read_post_number: 7
        liked: true
        archived: true
        has_summary: true
        fancy_title: fancy_title
        category_id: 7
        id: 1
        bumped_at: bumped_at
        slug: slug
        views: 2
        last_posted_at: last_posted_at
        visible: true
        like_count: 4
        image_url: ""
        unread_posts: 9
        bookmarked: true
        last_poster_username: last_poster_username
        posters:
        - primary_group_id: ""
          user_id: 1
          description: description
          extras: ""
        - primary_group_id: ""
          user_id: 1
          description: description
          extras: ""
        pinned_globally: true
        reply_count: 5
        op_like_count: 1
        archetype: archetype
        highest_post_number: 2
        closed: true
        notification_level: 3
        unseen: true
        posts_count: 5
      properties:
        title:
          type: string
        id:
          type: integer
        fancy_title:
          type: string
        slug:
          type: string
        posts_count:
          type: integer
        reply_count:
          type: integer
        highest_post_number:
          type: integer
        image_url: {}
        created_at:
          type: string
        last_posted_at:
          type: string
        bumped:
          type: boolean
        bumped_at:
          type: string
        archetype:
          type: string
        unseen:
          type: boolean
        last_read_post_number:
          type: integer
        unread_posts:
          type: integer
        pinned:
          type: boolean
        unpinned:
          type: boolean
        visible:
          type: boolean
        closed:
          type: boolean
        archived:
          type: boolean
        notification_level:
          type: integer
        bookmarked:
          type: boolean
        liked:
          type: boolean
        views:
          type: integer
        like_count:
          type: integer
        has_summary:
          type: boolean
        last_poster_username:
          type: string
        category_id:
          type: integer
        op_like_count:
          type: integer
        pinned_globally:
          type: boolean
        featured_link: {}
        posters:
          items:
            $ref: '#/components/schemas/TopicsGetTopTopicsByPeriodResponse_topic_list_topics_inner_posters_inner'
          type: array
      type: object
    TopicsGetTopTopicsByPeriodResponse_topic_list:
      example:
        can_create_topic: true
        per_page: 6
        topics:
        - unpinned: true
          pinned: true
          featured_link: ""
          created_at: created_at
          bumped: true
          title: title
          last_read_post_number: 7
          liked: true
          archived: true
          has_summary: true
          fancy_title: fancy_title
          category_id: 7
          id: 1
          bumped_at: bumped_at
          slug: slug
          views: 2
          last_posted_at: last_posted_at
          visible: true
          like_count: 4
          image_url: ""
          unread_posts: 9
          bookmarked: true
          last_poster_username: last_poster_username
          posters:
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: ""
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: ""
          pinned_globally: true
          reply_count: 5
          op_like_count: 1
          archetype: archetype
          highest_post_number: 2
          closed: true
          notification_level: 3
          unseen: true
          posts_count: 5
        - unpinned: true
          pinned: true
          featured_link: ""
          created_at: created_at
          bumped: true
          title: title
          last_read_post_number: 7
          liked: true
          archived: true
          has_summary: true
          fancy_title: fancy_title
          category_id: 7
          id: 1
          bumped_at: bumped_at
          slug: slug
          views: 2
          last_posted_at: last_posted_at
          visible: true
          like_count: 4
          image_url: ""
          unread_posts: 9
          bookmarked: true
          last_poster_username: last_poster_username
          posters:
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: ""
          - primary_group_id: ""
            user_id: 1
            description: description
            extras: ""
          pinned_globally: true
          reply_count: 5
          op_like_count: 1
          archetype: archetype
          highest_post_number: 2
          closed: true
          notification_level: 3
          unseen: true
          posts_count: 5
        draft: ""
        draft_sequence: 0
        draft_key: draft_key
        for_period: for_period
      properties:
        can_create_topic:
          type: boolean
        draft: {}
        draft_key:
          type: string
        draft_sequence:
          type: integer
        for_period:
          type: string
        per_page:
          type: integer
        topics:
          items:
            $ref: '#/components/schemas/TopicsGetTopTopicsByPeriodResponse_topic_list_topics_inner'
          type: array
      type: object
    BadgesListUserBadgesResponse_badges_inner:
      example:
        listable: true
        image_url: ""
        icon: icon
        description: description
        multiple_grant: true
        enabled: true
        manually_grantable: true
        grant_count: 6
        system: true
        badge_type_id: 5
        badge_grouping_id: 1
        name: name
        allow_title: true
        id: 0
        slug: slug
      properties:
        description:
          type: string
        id:
          type: integer
        name:
          type: string
        grant_count:
          type: integer
        allow_title:
          type: boolean
        multiple_grant:
          type: boolean
        icon:
          type: string
        image_url: {}
        listable:
          type: boolean
        enabled:
          type: boolean
        badge_grouping_id:
          type: integer
        system:
          type: boolean
        slug:
          type: string
        manually_grantable:
          type: boolean
        badge_type_id:
          type: integer
      required:
      - allow_title
      - badge_grouping_id
      - badge_type_id
      - description
      - enabled
      - grant_count
      - icon
      - id
      - image_url
      - listable
      - manually_grantable
      - multiple_grant
      - name
      - slug
      - system
      type: object
    BadgesListUserBadgesResponse_granted_bies_inner:
      example:
        moderator: true
        name: name
        admin: true
        trust_level: 2
        id: 5
        avatar_template: avatar_template
        flair_name: ""
        username: username
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        avatar_template:
          type: string
        flair_name: {}
        admin:
          type: boolean
        moderator:
          type: boolean
        trust_level:
          type: integer
      required:
      - admin
      - avatar_template
      - flair_name
      - id
      - moderator
      - name
      - trust_level
      - username
      type: object
    BadgesListUserBadgesResponse_user_badges_inner:
      example:
        granted_at: granted_at
        grouping_position: 9
        is_favorite: ""
        granted_by_id: 2
        badge_id: 3
        id: 7
        can_favorite: true
      properties:
        id:
          type: integer
        granted_at:
          type: string
        grouping_position:
          type: integer
        is_favorite: {}
        can_favorite:
          type: boolean
        badge_id:
          type: integer
        granted_by_id:
          type: integer
      required:
      - badge_id
      - can_favorite
      - granted_at
      - granted_by_id
      - grouping_position
      - id
      - is_favorite
      type: object
    UsersGetUserByUsernameResponse_user_user_fields:
      example:
        "1": ""
        "2": ""
      properties:
        "1": {}
        "2": {}
      required:
      - "1"
      - "2"
      type: object
    UsersGetUserByUsernameResponse_user_custom_fields:
      example:
        first_name: ""
      properties:
        first_name: {}
      type: object
    UsersGetUserByUsernameResponse_user_user_auth_tokens_inner:
      example:
        is_active: true
        os: os
        browser: browser
        icon: icon
        created_at: created_at
        client_ip: client_ip
        location: location
        id: 4
        device: device
        seen_at: seen_at
      properties:
        id:
          type: integer
        client_ip:
          type: string
        location:
          type: string
        browser:
          type: string
        device:
          type: string
        os:
          type: string
        icon:
          type: string
        created_at:
          type: string
        seen_at:
          type: string
        is_active:
          type: boolean
      required:
      - browser
      - client_ip
      - created_at
      - device
      - icon
      - id
      - is_active
      - location
      - os
      - seen_at
      type: object
    UsersGetUserByUsernameResponse_user_user_notification_schedule:
      example:
        day_0_end_time: 1
        day_5_start_time: 9
        day_0_start_time: 7
        day_2_start_time: 6
        day_6_end_time: 9
        day_1_end_time: 1
        enabled: true
        day_5_end_time: 6
        day_6_start_time: 8
        day_2_end_time: 7
        day_3_start_time: 1
        day_1_start_time: 1
        day_4_end_time: 9
        day_4_start_time: 5
        day_3_end_time: 4
      properties:
        enabled:
          type: boolean
        day_0_start_time:
          type: integer
        day_0_end_time:
          type: integer
        day_1_start_time:
          type: integer
        day_1_end_time:
          type: integer
        day_2_start_time:
          type: integer
        day_2_end_time:
          type: integer
        day_3_start_time:
          type: integer
        day_3_end_time:
          type: integer
        day_4_start_time:
          type: integer
        day_4_end_time:
          type: integer
        day_5_start_time:
          type: integer
        day_5_end_time:
          type: integer
        day_6_start_time:
          type: integer
        day_6_end_time:
          type: integer
      required:
      - day_0_end_time
      - day_0_start_time
      - day_1_end_time
      - day_1_start_time
      - day_2_end_time
      - day_2_start_time
      - day_3_end_time
      - day_3_start_time
      - day_4_end_time
      - day_4_start_time
      - day_5_end_time
      - day_5_start_time
      - day_6_end_time
      - day_6_start_time
      - enabled
      type: object
    UsersGetUserByUsernameResponse_user_groups_inner:
      example:
        mentionable_level: 6
        public_admission: true
        primary_group: true
        flair_color: ""
        title: ""
        can_see_members: true
        publish_read_state: true
        visibility_level: 2
        id: 6
        allow_membership_requests: true
        messageable_level: 1
        grant_trust_level: ""
        automatic: true
        bio_raw: ""
        flair_url: ""
        display_name: display_name
        public_exit: true
        members_visibility_level: 6
        bio_excerpt: ""
        flair_bg_color: ""
        full_name: ""
        default_notification_level: 6
        user_count: 3
        membership_request_template: ""
        name: name
        incoming_email: ""
        has_messages: true
        can_admin_group: true
        bio_cooked: ""
      properties:
        title: {}
        id:
          type: integer
        automatic:
          type: boolean
        name:
          type: string
        display_name:
          type: string
        user_count:
          type: integer
        mentionable_level:
          type: integer
        messageable_level:
          type: integer
        visibility_level:
          type: integer
        primary_group:
          type: boolean
        grant_trust_level: {}
        incoming_email: {}
        has_messages:
          type: boolean
        flair_url: {}
        flair_bg_color: {}
        flair_color: {}
        bio_raw: {}
        bio_cooked: {}
        bio_excerpt: {}
        public_admission:
          type: boolean
        public_exit:
          type: boolean
        allow_membership_requests:
          type: boolean
        full_name: {}
        default_notification_level:
          type: integer
        membership_request_template: {}
        members_visibility_level:
          type: integer
        can_see_members:
          type: boolean
        can_admin_group:
          type: boolean
        publish_read_state:
          type: boolean
      required:
      - allow_membership_requests
      - automatic
      - bio_cooked
      - bio_excerpt
      - bio_raw
      - can_admin_group
      - can_see_members
      - default_notification_level
      - display_name
      - flair_bg_color
      - flair_color
      - flair_url
      - full_name
      - grant_trust_level
      - has_messages
      - id
      - incoming_email
      - members_visibility_level
      - membership_request_template
      - mentionable_level
      - messageable_level
      - name
      - primary_group
      - public_admission
      - public_exit
      - publish_read_state
      - title
      - user_count
      - visibility_level
      type: object
    UsersGetUserByUsernameResponse_user_group_users_inner:
      example:
        owner: true
        group_id: 5
        user_id: 6
        notification_level: 3
      properties:
        group_id:
          type: integer
        user_id:
          type: integer
        notification_level:
          type: integer
        owner:
          type: boolean
      required:
      - group_id
      - notification_level
      - user_id
      type: object
    UsersGetUserByUsernameResponse_user_user_option:
      example:
        email_messages_level: 7
        title_count_mode: title_count_mode
        timezone: ""
        email_level: 0
        dynamic_favicon: true
        theme_key_seq: 7
        theme_ids:
        - ""
        - ""
        topics_unread_when_closed: true
        email_digests: true
        hide_profile_and_presence: true
        watched_precedence_over_muted: ""
        color_scheme_id: ""
        oldest_search_log_date: ""
        skip_new_user_tips: true
        bookmark_auto_delete_preference: 6
        homepage_id: ""
        digest_after_minutes: 0
        sidebar_show_count_of_new_items: true
        auto_track_topics_after_msecs: 4
        seen_popups: ""
        new_topic_duration_minutes: 7
        notification_level_when_replying: 8
        allow_private_messages: true
        text_size_seq: 5
        enable_allowed_pm_users: true
        like_notification_frequency: 3
        dark_scheme_id: ""
        enable_quoting: true
        automatically_unpin_topics: true
        enable_defer: true
        email_in_reply_to: true
        text_size: text_size
        user_id: 3
        mailing_list_mode_frequency: 7
        mailing_list_mode: true
        include_tl0_in_digests: true
        external_links_in_new_tab: true
        email_previous_replies: 3
        default_calendar: default_calendar
        sidebar_link_to_filtered_list: true
      properties:
        user_id:
          type: integer
        mailing_list_mode:
          type: boolean
        mailing_list_mode_frequency:
          type: integer
        email_digests:
          type: boolean
        email_level:
          type: integer
        email_messages_level:
          type: integer
        external_links_in_new_tab:
          type: boolean
        bookmark_auto_delete_preference:
          type: integer
        color_scheme_id: {}
        dark_scheme_id: {}
        dynamic_favicon:
          type: boolean
        enable_quoting:
          type: boolean
        enable_defer:
          type: boolean
        digest_after_minutes:
          type: integer
        automatically_unpin_topics:
          type: boolean
        auto_track_topics_after_msecs:
          type: integer
        notification_level_when_replying:
          type: integer
        new_topic_duration_minutes:
          type: integer
        email_previous_replies:
          type: integer
        email_in_reply_to:
          type: boolean
        like_notification_frequency:
          type: integer
        include_tl0_in_digests:
          type: boolean
        theme_ids:
          items: {}
          type: array
        theme_key_seq:
          type: integer
        allow_private_messages:
          type: boolean
        enable_allowed_pm_users:
          type: boolean
        homepage_id: {}
        hide_profile_and_presence:
          type: boolean
        text_size:
          type: string
        text_size_seq:
          type: integer
        title_count_mode:
          type: string
        timezone: {}
        skip_new_user_tips:
          type: boolean
        default_calendar:
          type: string
        oldest_search_log_date: {}
        sidebar_link_to_filtered_list:
          type: boolean
        sidebar_show_count_of_new_items:
          type: boolean
        watched_precedence_over_muted: {}
        seen_popups: {}
        topics_unread_when_closed:
          type: boolean
      required:
      - allow_private_messages
      - auto_track_topics_after_msecs
      - automatically_unpin_topics
      - color_scheme_id
      - dark_scheme_id
      - digest_after_minutes
      - dynamic_favicon
      - email_digests
      - email_in_reply_to
      - email_level
      - email_messages_level
      - email_previous_replies
      - enable_allowed_pm_users
      - enable_defer
      - enable_quoting
      - external_links_in_new_tab
      - hide_profile_and_presence
      - homepage_id
      - include_tl0_in_digests
      - like_notification_frequency
      - mailing_list_mode
      - mailing_list_mode_frequency
      - new_topic_duration_minutes
      - notification_level_when_replying
      - skip_new_user_tips
      - text_size
      - text_size_seq
      - theme_ids
      - theme_key_seq
      - timezone
      - title_count_mode
      - topics_unread_when_closed
      - user_id
      type: object
    UsersGetUserByUsernameResponse_user:
      example:
        group_users:
        - owner: true
          group_id: 5
          user_id: 6
          notification_level: 3
        - owner: true
          group_id: 5
          user_id: 6
          notification_level: 3
        recent_time_read: 5
        flair_color: ""
        moderator: true
        trust_level: 6
        tracked_category_ids:
        - ""
        - ""
        muted_tags:
        - ""
        - ""
        user_fields:
          "1": ""
          "2": ""
        can_send_private_messages: true
        user_notification_schedule:
          day_0_end_time: 1
          day_5_start_time: 9
          day_0_start_time: 7
          day_2_start_time: 6
          day_6_end_time: 9
          day_1_end_time: 1
          enabled: true
          day_5_end_time: 6
          day_6_start_time: 8
          day_2_end_time: 7
          day_3_start_time: 1
          day_1_start_time: 1
          day_4_end_time: 9
          day_4_start_time: 5
          day_3_end_time: 4
        sidebar_category_ids: ""
        id: 0
        second_factor_enabled: true
        can_delete_all_posts: true
        can_change_location: true
        uploaded_avatar_id: ""
        ignored: true
        regular_category_ids:
        - ""
        - ""
        watching_first_post_tags:
        - ""
        - ""
        can_send_private_message_to_user: true
        tracked_tags:
        - ""
        - ""
        custom_fields:
          first_name: ""
        pending_posts_count: 7
        can_mute_user: true
        can_edit_email: true
        profile_view_count: 9
        can_change_tracking_preferences: true
        sidebar_tags: ""
        featured_user_badge_ids:
        - ""
        - ""
        can_edit_name: true
        name: name
        system_avatar_upload_id: ""
        allowed_pm_usernames:
        - ""
        - ""
        post_count: 3
        badge_count: 1
        display_sidebar_tags: true
        primary_group_id: ""
        use_logo_small_as_avatar: true
        user_api_keys: ""
        created_at: created_at
        admin: true
        title: ""
        locale: ""
        can_change_website: true
        muted_category_ids:
        - ""
        - ""
        watched_tags:
        - ""
        - ""
        muted_usernames:
        - ""
        - ""
        can_be_deleted: true
        system_avatar_template: system_avatar_template
        mailing_list_posts_per_day: 2
        can_change_bio: true
        has_title_badges: true
        muted: true
        featured_topic: ""
        avatar_template: avatar_template
        last_posted_at: ""
        can_upload_profile_header: true
        second_factor_backup_enabled: true
        time_read: 5
        can_upload_user_card_background: true
        can_edit: true
        groups:
        - mentionable_level: 6
          public_admission: true
          primary_group: true
          flair_color: ""
          title: ""
          can_see_members: true
          publish_read_state: true
          visibility_level: 2
          id: 6
          allow_membership_requests: true
          messageable_level: 1
          grant_trust_level: ""
          automatic: true
          bio_raw: ""
          flair_url: ""
          display_name: display_name
          public_exit: true
          members_visibility_level: 6
          bio_excerpt: ""
          flair_bg_color: ""
          full_name: ""
          default_notification_level: 6
          user_count: 3
          membership_request_template: ""
          name: name
          incoming_email: ""
          has_messages: true
          can_admin_group: true
          bio_cooked: ""
        - mentionable_level: 6
          public_admission: true
          primary_group: true
          flair_color: ""
          title: ""
          can_see_members: true
          publish_read_state: true
          visibility_level: 2
          id: 6
          allow_membership_requests: true
          messageable_level: 1
          grant_trust_level: ""
          automatic: true
          bio_raw: ""
          flair_url: ""
          display_name: display_name
          public_exit: true
          members_visibility_level: 6
          bio_excerpt: ""
          flair_bg_color: ""
          full_name: ""
          default_notification_level: 6
          user_count: 3
          membership_request_template: ""
          name: name
          incoming_email: ""
          has_messages: true
          can_admin_group: true
          bio_cooked: ""
        user_option:
          email_messages_level: 7
          title_count_mode: title_count_mode
          timezone: ""
          email_level: 0
          dynamic_favicon: true
          theme_key_seq: 7
          theme_ids:
          - ""
          - ""
          topics_unread_when_closed: true
          email_digests: true
          hide_profile_and_presence: true
          watched_precedence_over_muted: ""
          color_scheme_id: ""
          oldest_search_log_date: ""
          skip_new_user_tips: true
          bookmark_auto_delete_preference: 6
          homepage_id: ""
          digest_after_minutes: 0
          sidebar_show_count_of_new_items: true
          auto_track_topics_after_msecs: 4
          seen_popups: ""
          new_topic_duration_minutes: 7
          notification_level_when_replying: 8
          allow_private_messages: true
          text_size_seq: 5
          enable_allowed_pm_users: true
          like_notification_frequency: 3
          dark_scheme_id: ""
          enable_quoting: true
          automatically_unpin_topics: true
          enable_defer: true
          email_in_reply_to: true
          text_size: text_size
          user_id: 3
          mailing_list_mode_frequency: 7
          mailing_list_mode: true
          include_tl0_in_digests: true
          external_links_in_new_tab: true
          email_previous_replies: 3
          default_calendar: default_calendar
          sidebar_link_to_filtered_list: true
        flair_url: ""
        staged: true
        ignored_usernames:
        - ""
        - ""
        invited_by: ""
        watched_first_post_category_ids:
        - ""
        - ""
        flair_bg_color: ""
        pending_count: 2
        primary_group_name: ""
        can_edit_username: true
        can_ignore_user: true
        user_auth_tokens:
        - is_active: true
          os: os
          browser: browser
          icon: icon
          created_at: created_at
          client_ip: client_ip
          location: location
          id: 4
          device: device
          seen_at: seen_at
        - is_active: true
          os: os
          browser: browser
          icon: icon
          created_at: created_at
          client_ip: client_ip
          location: location
          id: 4
          device: device
          seen_at: seen_at
        last_seen_at: ""
        flair_group_id: ""
        flair_name: ""
        user_passkeys: ""
        username: username
        watched_category_ids:
        - ""
        - ""
      properties:
        title: {}
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        avatar_template:
          type: string
        last_posted_at: {}
        last_seen_at: {}
        created_at:
          type: string
        ignored:
          type: boolean
        muted:
          type: boolean
        can_ignore_user:
          type: boolean
        can_mute_user:
          type: boolean
        can_send_private_messages:
          type: boolean
        can_send_private_message_to_user:
          type: boolean
        trust_level:
          type: integer
        moderator:
          type: boolean
        admin:
          type: boolean
        badge_count:
          type: integer
        second_factor_backup_enabled:
          type: boolean
        user_fields:
          $ref: '#/components/schemas/UsersGetUserByUsernameResponse_user_user_fields'
        custom_fields:
          $ref: '#/components/schemas/UsersGetUserByUsernameResponse_user_custom_fields'
        time_read:
          type: integer
        recent_time_read:
          type: integer
        primary_group_id: {}
        primary_group_name: {}
        flair_group_id: {}
        flair_name: {}
        flair_url: {}
        flair_bg_color: {}
        flair_color: {}
        featured_topic: {}
        staged:
          type: boolean
        can_edit:
          type: boolean
        can_edit_username:
          type: boolean
        can_edit_email:
          type: boolean
        can_edit_name:
          type: boolean
        uploaded_avatar_id: {}
        has_title_badges:
          type: boolean
        pending_count:
          type: integer
        pending_posts_count:
          type: integer
        profile_view_count:
          type: integer
        second_factor_enabled:
          type: boolean
        can_upload_profile_header:
          type: boolean
        can_upload_user_card_background:
          type: boolean
        post_count:
          type: integer
        can_be_deleted:
          type: boolean
        can_delete_all_posts:
          type: boolean
        locale: {}
        muted_category_ids:
          items: {}
          type: array
        regular_category_ids:
          items: {}
          type: array
        watched_tags:
          items: {}
          type: array
        watching_first_post_tags:
          items: {}
          type: array
        tracked_tags:
          items: {}
          type: array
        muted_tags:
          items: {}
          type: array
        tracked_category_ids:
          items: {}
          type: array
        watched_category_ids:
          items: {}
          type: array
        watched_first_post_category_ids:
          items: {}
          type: array
        system_avatar_upload_id: {}
        system_avatar_template:
          type: string
        muted_usernames:
          items: {}
          type: array
        ignored_usernames:
          items: {}
          type: array
        allowed_pm_usernames:
          items: {}
          type: array
        mailing_list_posts_per_day:
          type: integer
        can_change_bio:
          type: boolean
        can_change_location:
          type: boolean
        can_change_website:
          type: boolean
        can_change_tracking_preferences:
          type: boolean
        user_api_keys: {}
        user_passkeys:
          type: array
        sidebar_tags:
          type: array
        sidebar_category_ids:
          type: array
        display_sidebar_tags:
          type: boolean
        user_auth_tokens:
          items:
            $ref: '#/components/schemas/UsersGetUserByUsernameResponse_user_user_auth_tokens_inner'
          type: array
        user_notification_schedule:
          $ref: '#/components/schemas/UsersGetUserByUsernameResponse_user_user_notification_schedule'
        use_logo_small_as_avatar:
          type: boolean
        featured_user_badge_ids:
          items: {}
          type: array
        invited_by: {}
        groups:
          items:
            $ref: '#/components/schemas/UsersGetUserByUsernameResponse_user_groups_inner'
          type: array
        group_users:
          items:
            $ref: '#/components/schemas/UsersGetUserByUsernameResponse_user_group_users_inner'
          type: array
        user_option:
          $ref: '#/components/schemas/UsersGetUserByUsernameResponse_user_user_option'
      required:
      - admin
      - allowed_pm_usernames
      - avatar_template
      - badge_count
      - can_be_deleted
      - can_change_bio
      - can_change_location
      - can_change_tracking_preferences
      - can_change_website
      - can_delete_all_posts
      - can_edit
      - can_edit_email
      - can_edit_name
      - can_edit_username
      - can_ignore_user
      - can_mute_user
      - can_send_private_message_to_user
      - can_send_private_messages
      - can_upload_profile_header
      - can_upload_user_card_background
      - created_at
      - custom_fields
      - featured_topic
      - featured_user_badge_ids
      - flair_bg_color
      - flair_color
      - flair_group_id
      - flair_name
      - flair_url
      - group_users
      - groups
      - has_title_badges
      - id
      - ignored
      - ignored_usernames
      - invited_by
      - last_posted_at
      - last_seen_at
      - locale
      - mailing_list_posts_per_day
      - moderator
      - muted
      - muted_category_ids
      - muted_tags
      - muted_usernames
      - name
      - pending_count
      - post_count
      - primary_group_id
      - primary_group_name
      - profile_view_count
      - recent_time_read
      - regular_category_ids
      - second_factor_enabled
      - staged
      - system_avatar_template
      - system_avatar_upload_id
      - time_read
      - title
      - tracked_category_ids
      - tracked_tags
      - trust_level
      - uploaded_avatar_id
      - use_logo_small_as_avatar
      - user_api_keys
      - user_auth_tokens
      - user_notification_schedule
      - user_option
      - username
      - watched_category_ids
      - watched_first_post_category_ids
      - watched_tags
      - watching_first_post_tags
      type: object
    UsersListPublicUserResponse_directory_items_inner_user:
      example:
        name: ""
        id: 3
        title: ""
        avatar_template: avatar_template
        username: username
      properties:
        title: {}
        id:
          type: integer
        username:
          type: string
        name: {}
        avatar_template:
          type: string
      required:
      - avatar_template
      - id
      - name
      - title
      - username
      type: object
    UsersListPublicUserResponse_directory_items_inner:
      example:
        days_visited: 9
        posts_read: 7
        topics_entered: 5
        id: 0
        likes_given: 1
        post_count: 2
        likes_received: 6
        user:
          name: ""
          id: 3
          title: ""
          avatar_template: avatar_template
          username: username
        topic_count: 5
      properties:
        id:
          type: integer
        likes_received:
          type: integer
        likes_given:
          type: integer
        topics_entered:
          type: integer
        topic_count:
          type: integer
        post_count:
          type: integer
        posts_read:
          type: integer
        days_visited:
          type: integer
        user:
          $ref: '#/components/schemas/UsersListPublicUserResponse_directory_items_inner_user'
      required:
      - days_visited
      - id
      - likes_given
      - likes_received
      - post_count
      - posts_read
      - topic_count
      - topics_entered
      - user
      type: object
    UsersListPublicUserResponse_meta:
      example:
        last_updated_at: ""
        load_more_directory_items: load_more_directory_items
        total_rows_directory_items: 2
      properties:
        last_updated_at: {}
        total_rows_directory_items:
          type: integer
        load_more_directory_items:
          type: string
      required:
      - last_updated_at
      - load_more_directory_items
      - total_rows_directory_items
      type: object
    UsersGetUserByIdJsonResponse_approved_by:
      additionalProperties: false
      example:
        name: name
        id: 7
        avatar_template: avatar_template
        username: username
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        avatar_template:
          type: string
      required:
      - avatar_template
      - id
      - name
      - username
      type: object
    UsersGetUserByIdJsonResponse_penalty_counts:
      example:
        silenced: 1
        suspended: 4
      properties:
        silenced:
          type: integer
        suspended:
          type: integer
      required:
      - silenced
      - suspended
      type: object
    UsersGetUserByIdJsonResponse_tl3_requirements_penalty_counts:
      example:
        silenced: 3
        total: 7
        suspended: 3
      properties:
        silenced:
          type: integer
        suspended:
          type: integer
        total:
          type: integer
      required:
      - silenced
      - suspended
      - total
      type: object
    UsersGetUserByIdJsonResponse_tl3_requirements:
      example:
        min_likes_given: 0
        max_flagged_by_users: 3
        trust_level_locked: true
        min_likes_received: 6
        topics_viewed: 9
        num_likes_received: 7
        num_likes_given: 7
        min_posts_read: 6
        on_grace_period: true
        num_likes_received_users: 8
        days_visited: 9
        num_likes_received_days: 0
        min_topics_viewed: 6
        num_topics_replied_to: 6
        posts_read_all_time: 6
        min_days_visited: 9
        min_topics_replied_to: 8
        num_flagged_by_users: 3
        penalty_counts:
          silenced: 3
          total: 7
          suspended: 3
        num_flagged_posts: 5
        min_likes_received_users: 7
        requirements_lost: true
        min_posts_read_all_time: 6
        posts_read: 3
        max_flagged_posts: 6
        min_topics_viewed_all_time: 2
        requirements_met: true
        time_period: 5
        min_likes_received_days: 4
        topics_viewed_all_time: 1
      properties:
        time_period:
          type: integer
        requirements_met:
          type: boolean
        requirements_lost:
          type: boolean
        trust_level_locked:
          type: boolean
        on_grace_period:
          type: boolean
        days_visited:
          type: integer
        min_days_visited:
          type: integer
        num_topics_replied_to:
          type: integer
        min_topics_replied_to:
          type: integer
        topics_viewed:
          type: integer
        min_topics_viewed:
          type: integer
        posts_read:
          type: integer
        min_posts_read:
          type: integer
        topics_viewed_all_time:
          type: integer
        min_topics_viewed_all_time:
          type: integer
        posts_read_all_time:
          type: integer
        min_posts_read_all_time:
          type: integer
        num_flagged_posts:
          type: integer
        max_flagged_posts:
          type: integer
        num_flagged_by_users:
          type: integer
        max_flagged_by_users:
          type: integer
        num_likes_given:
          type: integer
        min_likes_given:
          type: integer
        num_likes_received:
          type: integer
        min_likes_received:
          type: integer
        num_likes_received_days:
          type: integer
        min_likes_received_days:
          type: integer
        num_likes_received_users:
          type: integer
        min_likes_received_users:
          type: integer
        penalty_counts:
          $ref: '#/components/schemas/UsersGetUserByIdJsonResponse_tl3_requirements_penalty_counts'
      required:
      - days_visited
      - max_flagged_by_users
      - max_flagged_posts
      - min_days_visited
      - min_likes_given
      - min_likes_received
      - min_likes_received_days
      - min_likes_received_users
      - min_posts_read
      - min_posts_read_all_time
      - min_topics_replied_to
      - min_topics_viewed
      - min_topics_viewed_all_time
      - num_flagged_by_users
      - num_flagged_posts
      - num_likes_given
      - num_likes_received
      - num_likes_received_days
      - num_likes_received_users
      - num_topics_replied_to
      - on_grace_period
      - penalty_counts
      - posts_read
      - posts_read_all_time
      - requirements_lost
      - requirements_met
      - time_period
      - topics_viewed
      - topics_viewed_all_time
      - trust_level_locked
      type: object
    UsersGetUserByIdJsonResponse_groups_inner:
      example:
        mentionable_level: 4
        public_admission: true
        primary_group: true
        flair_color: ""
        title: ""
        can_see_members: true
        publish_read_state: true
        visibility_level: 6
        id: 5
        allow_membership_requests: true
        messageable_level: 0
        grant_trust_level: ""
        automatic: true
        bio_raw: ""
        flair_url: ""
        display_name: display_name
        public_exit: true
        members_visibility_level: 1
        bio_excerpt: ""
        flair_bg_color: ""
        full_name: ""
        default_notification_level: 4
        user_count: 3
        membership_request_template: ""
        name: name
        incoming_email: ""
        has_messages: true
        flair_group_id: ""
        can_admin_group: true
        bio_cooked: ""
      properties:
        title: {}
        id:
          type: integer
        automatic:
          type: boolean
        name:
          type: string
        display_name:
          type: string
        user_count:
          type: integer
        mentionable_level:
          type: integer
        messageable_level:
          type: integer
        visibility_level:
          type: integer
        primary_group:
          type: boolean
        grant_trust_level: {}
        incoming_email: {}
        has_messages:
          type: boolean
        flair_url: {}
        flair_bg_color: {}
        flair_color: {}
        flair_group_id: {}
        bio_raw: {}
        bio_cooked: {}
        bio_excerpt: {}
        public_admission:
          type: boolean
        public_exit:
          type: boolean
        allow_membership_requests:
          type: boolean
        full_name: {}
        default_notification_level:
          type: integer
        membership_request_template: {}
        members_visibility_level:
          type: integer
        can_see_members:
          type: boolean
        can_admin_group:
          type: boolean
        publish_read_state:
          type: boolean
      required:
      - allow_membership_requests
      - automatic
      - bio_cooked
      - bio_excerpt
      - bio_raw
      - can_admin_group
      - can_see_members
      - default_notification_level
      - display_name
      - flair_bg_color
      - flair_color
      - flair_url
      - full_name
      - grant_trust_level
      - has_messages
      - id
      - incoming_email
      - members_visibility_level
      - membership_request_template
      - mentionable_level
      - messageable_level
      - name
      - primary_group
      - public_admission
      - public_exit
      - publish_read_state
      - title
      - user_count
      - visibility_level
      type: object
    UsersSuspendByIdJsonResponse_suspension:
      example:
        suspended_by:
          name: name
          id: 0
          avatar_template: avatar_template
          username: username
        suspended_till: suspended_till
        suspend_reason: suspend_reason
        full_suspend_reason: full_suspend_reason
        suspended_at: suspended_at
      properties:
        suspend_reason:
          type: string
        full_suspend_reason:
          type: string
        suspended_till:
          type: string
        suspended_at:
          type: string
        suspended_by:
          $ref: '#/components/schemas/CategoriesListTopicsResponse_users_inner'
      required:
      - full_suspend_reason
      - suspend_reason
      - suspended_at
      - suspended_by
      - suspended_till
      type: object
    UsersSilenceByIdResponse_silence:
      example:
        silenced: true
        silenced_at: silenced_at
        silenced_till: silenced_till
        silence_reason: silence_reason
        silenced_by:
          name: name
          id: 0
          avatar_template: avatar_template
          username: username
      properties:
        silenced:
          type: boolean
        silence_reason:
          type: string
        silenced_till:
          type: string
        silenced_at:
          type: string
        silenced_by:
          $ref: '#/components/schemas/CategoriesListTopicsResponse_users_inner'
      required:
      - silence_reason
      - silenced
      - silenced_at
      - silenced_by
      - silenced_till
      type: object
    UsersGetListOfUsersResponse_inner:
      example:
        days_visited: 5
        time_read: 1
        moderator: true
        active: true
        admin: true
        created_at: created_at
        trust_level: 6
        secondary_emails:
        - ""
        - ""
        last_seen_age: ""
        staged: true
        posts_read_count: 5
        title: ""
        manual_locked_trust_level: ""
        created_at_age: ""
        name: ""
        last_emailed_age: ""
        topics_entered: 2
        last_emailed_at: ""
        id: 0
        post_count: 7
        last_seen_at: ""
        avatar_template: avatar_template
        email: email
        username: username
      properties:
        title: {}
        id:
          type: integer
        username:
          type: string
        name: {}
        avatar_template:
          type: string
        email:
          type: string
        secondary_emails:
          items: {}
          type: array
        active:
          type: boolean
        admin:
          type: boolean
        moderator:
          type: boolean
        last_seen_at: {}
        last_emailed_at: {}
        created_at:
          type: string
        last_seen_age: {}
        last_emailed_age: {}
        created_at_age: {}
        trust_level:
          type: integer
        manual_locked_trust_level: {}
        time_read:
          type: integer
        staged:
          type: boolean
        days_visited:
          type: integer
        posts_read_count:
          type: integer
        topics_entered:
          type: integer
        post_count:
          type: integer
      required:
      - active
      - admin
      - avatar_template
      - created_at
      - created_at_age
      - days_visited
      - id
      - last_emailed_age
      - last_emailed_at
      - last_seen_age
      - last_seen_at
      - manual_locked_trust_level
      - moderator
      - name
      - post_count
      - posts_read_count
      - staged
      - time_read
      - title
      - topics_entered
      - trust_level
      - username
      type: object
    UsersListUserActionsResponse_user_actions_inner:
      example:
        acting_avatar_template: acting_avatar_template
        acting_user_id: 2
        target_name: ""
        hidden: ""
        action_type: 0
        action_code: ""
        created_at: created_at
        title: title
        acting_name: ""
        archived: true
        category_id: 7
        post_type: ""
        topic_id: 6
        target_username: target_username
        avatar_template: avatar_template
        slug: slug
        acting_username: acting_username
        target_user_id: 1
        deleted: true
        post_id: ""
        user_id: 5
        name: ""
        closed: true
        excerpt: excerpt
        post_number: 5
        username: username
      properties:
        title:
          type: string
        excerpt:
          type: string
        action_type:
          type: integer
        created_at:
          type: string
        avatar_template:
          type: string
        acting_avatar_template:
          type: string
        slug:
          type: string
        topic_id:
          type: integer
        target_user_id:
          type: integer
        target_name: {}
        target_username:
          type: string
        post_number:
          type: integer
        post_id: {}
        username:
          type: string
        name: {}
        user_id:
          type: integer
        acting_username:
          type: string
        acting_name: {}
        acting_user_id:
          type: integer
        deleted:
          type: boolean
        hidden: {}
        post_type: {}
        action_code: {}
        category_id:
          type: integer
        closed:
          type: boolean
        archived:
          type: boolean
      required:
      - acting_avatar_template
      - acting_name
      - acting_user_id
      - acting_username
      - action_code
      - action_type
      - archived
      - avatar_template
      - category_id
      - closed
      - created_at
      - deleted
      - excerpt
      - hidden
      - name
      - post_id
      - post_number
      - post_type
      - slug
      - target_name
      - target_user_id
      - target_username
      - title
      - topic_id
      - user_id
      - username
      type: object

